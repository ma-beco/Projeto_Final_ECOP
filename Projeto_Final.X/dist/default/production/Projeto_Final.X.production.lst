

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Dec 15 12:48:13 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	text17,global,reloc=2,class=CODE,delta=1
    27                           	psect	text18,global,reloc=2,class=CODE,delta=1
    28                           	psect	text19,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	text26,global,reloc=2,class=CODE,delta=1
    36                           	psect	text27,global,reloc=2,class=CODE,delta=1
    37                           	psect	text28,global,reloc=2,class=CODE,delta=1
    38                           	psect	text29,global,reloc=2,class=CODE,delta=1
    39                           	psect	text30,global,reloc=2,class=CODE,delta=1
    40                           	psect	text31,global,reloc=2,class=CODE,delta=1
    41                           	psect	text32,global,reloc=2,class=CODE,delta=1
    42                           	psect	text33,global,reloc=2,class=CODE,delta=1
    43                           	psect	text34,global,reloc=2,class=CODE,delta=1
    44                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    47                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    48                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC18F4520 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     
    86                           	psect	smallconst
    87  000600                     __psmallconst:
    88                           	callstack 0
    89  000600  00                 	db	0
    90  000601                     _valor:
    91                           	callstack 0
    92  000601  3F                 	db	63
    93  000602  06                 	db	6
    94  000603  5B                 	db	91
    95  000604  4F                 	db	79
    96  000605  66                 	db	102
    97  000606  6D                 	db	109
    98  000607  7D                 	db	125
    99  000608  07                 	db	7
   100  000609  7F                 	db	127
   101  00060A  6F                 	db	111
   102  00060B  77                 	db	119
   103  00060C  7C                 	db	124
   104  00060D  39                 	db	57
   105  00060E  5E                 	db	94
   106  00060F  79                 	db	121
   107  000610  71                 	db	113
   108  000611                     __end_of_valor:
   109                           	callstack 0
   110  000611  55                 	db	85
   111  000612  4C                 	db	76
   112  000613  44                 	db	68
   113  000614  52                 	db	82
   114  000615  53                 	db	83
   115  000616  58                 	db	88
   116  000617  41                 	db	65
   117  000618  42                 	db	66
   118  000619  59                 	db	89
   119  00061A  73                 	db	115
   120  00061B                     __end_of_charKey:
   121                           	callstack 0
   122  0000                     _T2CON	set	4042
   123  0000                     _CCP2CON	set	4026
   124  0000                     _CCPR2L	set	4027
   125  0000                     _PR2	set	4043
   126  0000                     _TRISE	set	3990
   127  0000                     _TRISD	set	3989
   128  0000                     _TRISC	set	3988
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISA	set	3986
   131  0000                     _PORTE	set	3972
   132  0000                     _PORTD	set	3971
   133  0000                     _PORTC	set	3970
   134  0000                     _PORTB	set	3969
   135  0000                     _PORTA	set	3968
   136  0000                     _ADRESL	set	4035
   137  0000                     _ADRESH	set	4036
   138  0000                     _ADCON2	set	4032
   139  0000                     _ADCON1	set	4033
   140  0000                     _ADCON0	set	4034
   141  00061B                     STR_1:
   142  00061B  53                 	db	83	;'S'
   143  00061C  45                 	db	69	;'E'
   144  00061D  4E                 	db	78	;'N'
   145  00061E  48                 	db	72	;'H'
   146  00061F  41                 	db	65	;'A'
   147  000620  20                 	db	32
   148  000621  20                 	db	32
   149  000622  20                 	db	32
   150  000623  20                 	db	32
   151  000624  20                 	db	32
   152  000625  20                 	db	32
   153  000626  20                 	db	32
   154  000627  00                 	db	0
   155  000628                     STR_5:
   156  000628  43                 	db	67	;'C'
   157  000629  6F                 	db	111	;'o'
   158  00062A  66                 	db	102	;'f'
   159  00062B  72                 	db	114	;'r'
   160  00062C  65                 	db	101	;'e'
   161  00062D  20                 	db	32
   162  00062E  61                 	db	97	;'a'
   163  00062F  62                 	db	98	;'b'
   164  000630  65                 	db	101	;'e'
   165  000631  72                 	db	114	;'r'
   166  000632  74                 	db	116	;'t'
   167  000633  6F                 	db	111	;'o'
   168  000634  00                 	db	0
   169  000635                     STR_3:
   170  000635  53                 	db	83	;'S'
   171  000636  75                 	db	117	;'u'
   172  000637  61                 	db	97	;'a'
   173  000638  20                 	db	32
   174  000639  6D                 	db	109	;'m'
   175  00063A  65                 	db	101	;'e'
   176  00063B  74                 	db	116	;'t'
   177  00063C  61                 	db	97	;'a'
   178  00063D  3A                 	db	58	;':'
   179  00063E  20                 	db	32
   180  00063F  20                 	db	32
   181  000640  00                 	db	0
   182  000641                     STR_2:
   183  000641  44                 	db	68	;'D'
   184  000642  65                 	db	101	;'e'
   185  000643  66                 	db	102	;'f'
   186  000644  69                 	db	105	;'i'
   187  000645  6E                 	db	110	;'n'
   188  000646  61                 	db	97	;'a'
   189  000647  20                 	db	32
   190  000648  6D                 	db	109	;'m'
   191  000649  65                 	db	101	;'e'
   192  00064A  74                 	db	116	;'t'
   193  00064B  61                 	db	97	;'a'
   194  00064C  00                 	db	0
   195  00064D                     STR_4:
   196  00064D  53                 	db	83	;'S'
   197  00064E  65                 	db	101	;'e'
   198  00064F  6E                 	db	110	;'n'
   199  000650  68                 	db	104	;'h'
   200  000651  61                 	db	97	;'a'
   201  000652  3F                 	db	63	;'?'
   202  000653  20                 	db	32
   203  000654  20                 	db	32
   204  000655  20                 	db	32
   205  000656  00                 	db	0
   206  000657  00                 	db	0	; dummy byte at the end
   207  0000                     
   208                           ; #config settings
   209                           
   210                           	psect	cinit
   211  002424                     __pcinit:
   212                           	callstack 0
   213  002424                     start_initialization:
   214                           	callstack 0
   215  002424                     __initialization:
   216                           	callstack 0
   217                           
   218                           ; Clear objects allocated to COMRAM (12 bytes)
   219  002424  EE00  F02B         	lfsr	0,__pbssCOMRAM
   220  002428  0E0C               	movlw	12
   221  00242A                     clear_0:
   222  00242A  6AEE               	clrf	postinc0,c
   223  00242C  06E8               	decf	wreg,f,c
   224  00242E  E1FD               	bnz	clear_0
   225  002430                     end_of_initialization:
   226                           	callstack 0
   227  002430                     __end_of__initialization:
   228                           	callstack 0
   229  002430  0E00               	movlw	low (__Lmediumconst shr (0+16))
   230  002432  6EF8               	movwf	tblptru,c
   231  002434  0100               	movlb	0
   232  002436  EF2C  F003         	goto	_main	;jump to C main() function
   233                           
   234                           	psect	bssCOMRAM
   235  00002B                     __pbssCOMRAM:
   236                           	callstack 0
   237  00002B                     kpDebounce@oldRead:
   238                           	callstack 0
   239  00002B                     	ds	2
   240  00002D                     kpDebounce@newRead:
   241                           	callstack 0
   242  00002D                     	ds	2
   243  00002F                     _keys:
   244                           	callstack 0
   245  00002F                     	ds	2
   246  000031                     _v3:
   247                           	callstack 0
   248  000031                     	ds	1
   249  000032                     _v2:
   250                           	callstack 0
   251  000032                     	ds	1
   252  000033                     _v1:
   253                           	callstack 0
   254  000033                     	ds	1
   255  000034                     _v0:
   256                           	callstack 0
   257  000034                     	ds	1
   258  000035                     _display:
   259                           	callstack 0
   260  000035                     	ds	1
   261  000036                     kpDebounce@tempo:
   262                           	callstack 0
   263  000036                     	ds	1
   264                           
   265                           	psect	cstackCOMRAM
   266  000001                     __pcstackCOMRAM:
   267                           	callstack 0
   268  000001                     ?_kpRead:
   269                           	callstack 0
   270  000001                     ?_digitalRead:
   271                           	callstack 0
   272  000001                     ?___wmul:
   273                           	callstack 0
   274  000001                     ?___awdiv:
   275                           	callstack 0
   276  000001                     ?___lwdiv:
   277                           	callstack 0
   278  000001                     ?___fladd:
   279                           	callstack 0
   280  000001                     ?___aldiv:
   281                           	callstack 0
   282  000001                     digitalWrite@pin:
   283                           	callstack 0
   284  000001                     digitalRead@pin:
   285                           	callstack 0
   286  000001                     pinMode@pin:
   287                           	callstack 0
   288  000001                     delayMicro@a:
   289                           	callstack 0
   290  000001                     delayMili@a:
   291                           	callstack 0
   292  000001                     delay@x:
   293                           	callstack 0
   294  000001                     ___wmul@multiplier:
   295                           	callstack 0
   296  000001                     ___awdiv@dividend:
   297                           	callstack 0
   298  000001                     ___lwdiv@dividend:
   299                           	callstack 0
   300  000001                     ___aldiv@dividend:
   301                           	callstack 0
   302  000001                     ___flge@ff1:
   303                           	callstack 0
   304  000001                     ___fladd@b:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x0
   308  000001                     	ds	2
   309  000003                     ??_digitalRead:
   310  000003                     ??_delayMili:
   311  000003                     delay@j:
   312                           	callstack 0
   313  000003                     digitalWrite@value:
   314                           	callstack 0
   315  000003                     pinMode@type:
   316                           	callstack 0
   317  000003                     ___wmul@multiplicand:
   318                           	callstack 0
   319  000003                     ___awdiv@divisor:
   320                           	callstack 0
   321  000003                     ___lwdiv@divisor:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x2
   325  000003                     	ds	1
   326  000004                     delay@k:
   327                           	callstack 0
   328  000004                     delayMili@i:
   329                           	callstack 0
   330                           
   331                           ; 2 bytes @ 0x3
   332  000004                     	ds	1
   333  000005                     ??_pinMode:
   334  000005                     ??_digitalWrite:
   335  000005                     ___awdiv@counter:
   336                           	callstack 0
   337  000005                     ___wmul@product:
   338                           	callstack 0
   339  000005                     ___lwdiv@quotient:
   340                           	callstack 0
   341  000005                     ___aldiv@divisor:
   342                           	callstack 0
   343  000005                     ___flge@ff2:
   344                           	callstack 0
   345  000005                     ___fladd@a:
   346                           	callstack 0
   347                           
   348                           ; 4 bytes @ 0x4
   349  000005                     	ds	1
   350  000006                     ___awdiv@sign:
   351                           	callstack 0
   352                           
   353                           ; 1 bytes @ 0x5
   354  000006                     	ds	1
   355  000007                     ___lwdiv@counter:
   356                           	callstack 0
   357  000007                     soWrite@value:
   358                           	callstack 0
   359  000007                     ___awdiv@quotient:
   360                           	callstack 0
   361                           
   362                           ; 2 bytes @ 0x6
   363  000007                     	ds	1
   364  000008                     ??_pwmSet:
   365                           
   366                           ; 1 bytes @ 0x7
   367  000008                     	ds	1
   368  000009                     ??___fladd:
   369  000009                     ??___flge:
   370  000009                     ?___awmod:
   371                           	callstack 0
   372  000009                     soWrite@i:
   373                           	callstack 0
   374  000009                     ___aldiv@counter:
   375                           	callstack 0
   376  000009                     ___awmod@dividend:
   377                           	callstack 0
   378                           
   379                           ; 2 bytes @ 0x8
   380  000009                     	ds	1
   381  00000A                     ??_kpDebounce:
   382  00000A                     ??_ssdUpdate:
   383  00000A                     pwmSet@porcento:
   384                           	callstack 0
   385  00000A                     ___aldiv@sign:
   386                           	callstack 0
   387  00000A                     pushNibble@rs:
   388                           	callstack 0
   389  00000A                     pushByte@rs:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x9
   393  00000A                     	ds	1
   394  00000B                     pwmSet@val:
   395                           	callstack 0
   396  00000B                     ___awmod@divisor:
   397                           	callstack 0
   398  00000B                     ___aldiv@quotient:
   399                           	callstack 0
   400                           
   401                           ; 4 bytes @ 0xA
   402  00000B                     	ds	1
   403  00000C                     ??_pushByte:
   404  00000C                     pushNibble@value:
   405                           	callstack 0
   406                           
   407                           ; 1 bytes @ 0xB
   408  00000C                     	ds	1
   409  00000D                     pushByte@value:
   410                           	callstack 0
   411  00000D                     ___awmod@counter:
   412                           	callstack 0
   413  00000D                     ___fladd@signs:
   414                           	callstack 0
   415  00000D                     kpDebounce@i:
   416                           	callstack 0
   417                           
   418                           ; 2 bytes @ 0xC
   419  00000D                     	ds	1
   420  00000E                     lcdCommand@value:
   421                           	callstack 0
   422  00000E                     lcdChar@value:
   423                           	callstack 0
   424  00000E                     ___awmod@sign:
   425                           	callstack 0
   426  00000E                     ___fladd@aexp:
   427                           	callstack 0
   428                           
   429                           ; 1 bytes @ 0xD
   430  00000E                     	ds	1
   431  00000F                     lcdPosition@col:
   432                           	callstack 0
   433  00000F                     ssdDigit@pos:
   434                           	callstack 0
   435  00000F                     ___fladd@bexp:
   436                           	callstack 0
   437  00000F                     lcdString@msg:
   438                           	callstack 0
   439  00000F                     lcdNumber@value:
   440                           	callstack 0
   441  00000F                     pwmFrequency@freq:
   442                           	callstack 0
   443                           
   444                           ; 2 bytes @ 0xE
   445  00000F                     	ds	1
   446  000010                     lcdPosition@line:
   447                           	callstack 0
   448  000010                     ssdDigit@val:
   449                           	callstack 0
   450  000010                     ___fladd@grs:
   451                           	callstack 0
   452                           
   453                           ; 1 bytes @ 0xF
   454  000010                     	ds	1
   455  000011                     ??_lcdString:
   456  000011                     lcdNumber@i:
   457                           	callstack 0
   458                           
   459                           ; 2 bytes @ 0x10
   460  000011                     	ds	2
   461  000013                     lcdString@i:
   462                           	callstack 0
   463                           
   464                           ; 2 bytes @ 0x12
   465  000013                     	ds	2
   466  000015                     ??_main:
   467                           
   468                           ; 1 bytes @ 0x14
   469  000015                     	ds	2
   470  000017                     main@muda:
   471                           	callstack 0
   472                           
   473                           ; 2 bytes @ 0x16
   474  000017                     	ds	2
   475  000019                     main@meta:
   476                           	callstack 0
   477                           
   478                           ; 2 bytes @ 0x18
   479  000019                     	ds	2
   480  00001B                     main@tempo:
   481                           	callstack 0
   482                           
   483                           ; 4 bytes @ 0x1A
   484  00001B                     	ds	4
   485  00001F                     main@s1:
   486                           	callstack 0
   487                           
   488                           ; 1 bytes @ 0x1E
   489  00001F                     	ds	1
   490  000020                     main@s2:
   491                           	callstack 0
   492                           
   493                           ; 1 bytes @ 0x1F
   494  000020                     	ds	1
   495  000021                     main@s3:
   496                           	callstack 0
   497                           
   498                           ; 1 bytes @ 0x20
   499  000021                     	ds	1
   500  000022                     main@t1:
   501                           	callstack 0
   502                           
   503                           ; 1 bytes @ 0x21
   504  000022                     	ds	1
   505  000023                     main@t2:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x22
   509  000023                     	ds	1
   510  000024                     main@t3:
   511                           	callstack 0
   512                           
   513                           ; 1 bytes @ 0x23
   514  000024                     	ds	1
   515  000025                     main@old:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x24
   519  000025                     	ds	1
   520  000026                     main@moed:
   521                           	callstack 0
   522                           
   523                           ; 2 bytes @ 0x25
   524  000026                     	ds	2
   525  000028                     main@enter:
   526                           	callstack 0
   527                           
   528                           ; 2 bytes @ 0x27
   529  000028                     	ds	2
   530  00002A                     main@tecla:
   531                           	callstack 0
   532                           
   533                           ; 1 bytes @ 0x29
   534  00002A                     	ds	1
   535                           
   536 ;;
   537 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   538 ;;
   539 ;; *************** function _main *****************
   540 ;; Defined at:
   541 ;;		line 21 in file "main.c"
   542 ;; Parameters:    Size  Location     Type
   543 ;;		None
   544 ;; Auto vars:     Size  Location     Type
   545 ;;  tempo           4   26[COMRAM] float 
   546 ;;  enter           2   39[COMRAM] int 
   547 ;;  moed            2   37[COMRAM] int 
   548 ;;  meta            2   24[COMRAM] int 
   549 ;;  muda            2   22[COMRAM] int 
   550 ;;  tecla           1   41[COMRAM] unsigned char 
   551 ;;  old             1   36[COMRAM] unsigned char 
   552 ;;  t3              1   35[COMRAM] unsigned char 
   553 ;;  t2              1   34[COMRAM] unsigned char 
   554 ;;  t1              1   33[COMRAM] unsigned char 
   555 ;;  s3              1   32[COMRAM] unsigned char 
   556 ;;  s2              1   31[COMRAM] unsigned char 
   557 ;;  s1              1   30[COMRAM] unsigned char 
   558 ;; Return value:  Size  Location     Type
   559 ;;                  1    wreg      void 
   560 ;; Registers used:
   561 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   562 ;; Tracked objects:
   563 ;;		On entry : 0/0
   564 ;;		On exit  : 0/0
   565 ;;		Unchanged: 0/0
   566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   567 ;;      Params:         0       0       0       0       0       0       0
   568 ;;      Locals:        20       0       0       0       0       0       0
   569 ;;      Temps:          2       0       0       0       0       0       0
   570 ;;      Totals:        22       0       0       0       0       0       0
   571 ;;Total ram usage:       22 bytes
   572 ;; Hardware stack levels required when called: 6
   573 ;; This function calls:
   574 ;;		___awdiv
   575 ;;		___awmod
   576 ;;		___fladd
   577 ;;		___flge
   578 ;;		_adcInit
   579 ;;		_delay
   580 ;;		_kpDebounce
   581 ;;		_kpInit
   582 ;;		_kpRead
   583 ;;		_lcdChar
   584 ;;		_lcdInit
   585 ;;		_lcdNumber
   586 ;;		_lcdPosition
   587 ;;		_lcdString
   588 ;;		_pwmInit
   589 ;;		_pwmSet
   590 ;;		_ssdDigit
   591 ;;		_ssdInit
   592 ;;		_ssdUpdate
   593 ;; This function is called by:
   594 ;;		Startup code after reset
   595 ;; This function uses a non-reentrant model
   596 ;;
   597                           
   598                           	psect	text0
   599  000658                     __ptext0:
   600                           	callstack 0
   601  000658                     _main:
   602                           	callstack 25
   603  000658                     
   604                           ;main.c: 22: unsigned char tecla, old, s1 = '0', s2 = '0', s3 = '0';
   605  000658  0E30               	movlw	48
   606  00065A  6E1F               	movwf	main@s1^0,c
   607  00065C  0E30               	movlw	48
   608  00065E  6E20               	movwf	main@s2^0,c
   609  000660  0E30               	movlw	48
   610  000662  6E21               	movwf	main@s3^0,c
   611                           
   612                           ;main.c: 23: unsigned char t1 = '0', t2 = '0', t3 = '0';
   613  000664  0E30               	movlw	48
   614  000666  6E22               	movwf	main@t1^0,c
   615  000668  0E30               	movlw	48
   616  00066A  6E23               	movwf	main@t2^0,c
   617  00066C  0E30               	movlw	48
   618  00066E  6E24               	movwf	main@t3^0,c
   619  000670                     
   620                           ;main.c: 24: int enter, moed, muda, meta;;main.c: 25: float tempo;;main.c: 26: lcdInit()
      +                          ;
   621  000670  EC70  F00E         	call	_lcdInit	;wreg free
   622  000674                     
   623                           ;main.c: 27: adcInit();
   624  000674  ECD3  F010         	call	_adcInit	;wreg free
   625  000678                     
   626                           ;main.c: 28: kpInit();
   627  000678  EC53  F011         	call	_kpInit	;wreg free
   628  00067C                     
   629                           ;main.c: 29: pwmInit();
   630  00067C  EC05  F012         	call	_pwmInit	;wreg free
   631  000680  EF32  F006         	goto	l2998
   632  000684                     l2764:
   633                           
   634                           ;main.c: 33:             lcdPosition(0, 0);
   635  000684  0E00               	movlw	0
   636  000686  6E0F               	movwf	lcdPosition@col^0,c
   637  000688  0E00               	movlw	0
   638  00068A  EC37  F011         	call	_lcdPosition
   639  00068E                     
   640                           ;main.c: 34:             lcdString("SENHA       ");
   641  00068E  0E1B               	movlw	low STR_1
   642  000690  6E0F               	movwf	lcdString@msg^0,c
   643  000692  0E06               	movlw	high STR_1
   644  000694  6E10               	movwf	(lcdString@msg+1)^0,c
   645  000696  EC81  F010         	call	_lcdString	;wreg free
   646  00069A                     
   647                           ;main.c: 35:             lcdPosition(1, 0);
   648  00069A  0E00               	movlw	0
   649  00069C  6E0F               	movwf	lcdPosition@col^0,c
   650  00069E  0E01               	movlw	1
   651  0006A0  EC37  F011         	call	_lcdPosition
   652  0006A4                     
   653                           ;main.c: 36:             lcdChar(s1);
   654  0006A4  501F               	movf	main@s1^0,w,c
   655  0006A6  ECE7  F011         	call	_lcdChar
   656  0006AA                     
   657                           ;main.c: 37:             lcdChar(s2);
   658  0006AA  5020               	movf	main@s2^0,w,c
   659  0006AC  ECE7  F011         	call	_lcdChar
   660  0006B0                     
   661                           ;main.c: 38:             lcdChar(s3);
   662  0006B0  5021               	movf	main@s3^0,w,c
   663  0006B2  ECE7  F011         	call	_lcdChar
   664  0006B6                     
   665                           ;main.c: 39:             kpDebounce();
   666  0006B6  EC6B  F00C         	call	_kpDebounce	;wreg free
   667  0006BA                     
   668                           ;main.c: 40:             old = tecla;
   669  0006BA  C02A  F025         	movff	main@tecla,main@old
   670  0006BE                     
   671                           ;main.c: 41:             tecla = kpRead();
   672  0006BE  EC1D  F012         	call	_kpRead	;wreg free
   673  0006C2  5001               	movf	?_kpRead^0,w,c
   674  0006C4  6E2A               	movwf	main@tecla^0,c
   675  0006C6                     
   676                           ;main.c: 42:             if (old != tecla) {
   677  0006C6  502A               	movf	main@tecla^0,w,c
   678  0006C8  1825               	xorwf	main@old^0,w,c
   679  0006CA  B4D8               	btfsc	status,2,c
   680  0006CC  EF6A  F003         	goto	u3171
   681  0006D0  EF6C  F003         	goto	u3170
   682  0006D4                     u3171:
   683  0006D4  EF32  F006         	goto	l2998
   684  0006D8                     u3170:
   685  0006D8                     
   686                           ;main.c: 43:                 if ((((tecla) & (1<<(0)))) && enter == 0) s1++;
   687  0006D8  A02A               	btfss	main@tecla^0,0,c
   688  0006DA  EF71  F003         	goto	u3181
   689  0006DE  EF73  F003         	goto	u3180
   690  0006E2                     u3181:
   691  0006E2  EF7D  F003         	goto	l2790
   692  0006E6                     u3180:
   693  0006E6  5028               	movf	main@enter^0,w,c
   694  0006E8  1029               	iorwf	(main@enter+1)^0,w,c
   695  0006EA  A4D8               	btfss	status,2,c
   696  0006EC  EF7A  F003         	goto	u3191
   697  0006F0  EF7C  F003         	goto	u3190
   698  0006F4                     u3191:
   699  0006F4  EF7D  F003         	goto	l2790
   700  0006F8                     u3190:
   701  0006F8  2A1F               	incf	main@s1^0,f,c
   702  0006FA                     l2790:
   703                           
   704                           ;main.c: 44:                 if ((((tecla) & (1<<(0)))) && enter == 1) s2++;
   705  0006FA  A02A               	btfss	main@tecla^0,0,c
   706  0006FC  EF82  F003         	goto	u3201
   707  000700  EF84  F003         	goto	u3200
   708  000704                     u3201:
   709  000704  EF8E  F003         	goto	l2796
   710  000708                     u3200:
   711  000708  0428               	decf	main@enter^0,w,c
   712  00070A  1029               	iorwf	(main@enter+1)^0,w,c
   713  00070C  A4D8               	btfss	status,2,c
   714  00070E  EF8B  F003         	goto	u3211
   715  000712  EF8D  F003         	goto	u3210
   716  000716                     u3211:
   717  000716  EF8E  F003         	goto	l2796
   718  00071A                     u3210:
   719  00071A  2A20               	incf	main@s2^0,f,c
   720  00071C                     l2796:
   721                           
   722                           ;main.c: 45:                 if ((((tecla) & (1<<(0)))) && enter == 2) s3++;
   723  00071C  A02A               	btfss	main@tecla^0,0,c
   724  00071E  EF93  F003         	goto	u3221
   725  000722  EF95  F003         	goto	u3220
   726  000726                     u3221:
   727  000726  EFA0  F003         	goto	l2802
   728  00072A                     u3220:
   729  00072A  0E02               	movlw	2
   730  00072C  1828               	xorwf	main@enter^0,w,c
   731  00072E  1029               	iorwf	(main@enter+1)^0,w,c
   732  000730  A4D8               	btfss	status,2,c
   733  000732  EF9D  F003         	goto	u3231
   734  000736  EF9F  F003         	goto	u3230
   735  00073A                     u3231:
   736  00073A  EFA0  F003         	goto	l2802
   737  00073E                     u3230:
   738  00073E  2A21               	incf	main@s3^0,f,c
   739  000740                     l2802:
   740                           
   741                           ;main.c: 46:                 if (((tecla) & (1<<(6)))) {
   742  000740  AC2A               	btfss	main@tecla^0,6,c
   743  000742  EFA5  F003         	goto	u3241
   744  000746  EFA7  F003         	goto	u3240
   745  00074A                     u3241:
   746  00074A  EF32  F006         	goto	l2998
   747  00074E                     u3240:
   748  00074E                     
   749                           ;main.c: 47:                     enter++;
   750  00074E  4A28               	infsnz	main@enter^0,f,c
   751  000750  2A29               	incf	(main@enter+1)^0,f,c
   752  000752                     
   753                           ;main.c: 48:                     if (enter == 3) {
   754  000752  0E03               	movlw	3
   755  000754  1828               	xorwf	main@enter^0,w,c
   756  000756  1029               	iorwf	(main@enter+1)^0,w,c
   757  000758  A4D8               	btfss	status,2,c
   758  00075A  EFB1  F003         	goto	u3251
   759  00075E  EFB3  F003         	goto	u3250
   760  000762                     u3251:
   761  000762  EFB9  F003         	goto	l38
   762  000766                     u3250:
   763  000766                     
   764                           ;main.c: 49:                         muda = 1;
   765  000766  0E00               	movlw	0
   766  000768  6E18               	movwf	(main@muda+1)^0,c
   767  00076A  0E01               	movlw	1
   768  00076C  6E17               	movwf	main@muda^0,c
   769  00076E  EF32  F006         	goto	l2998
   770  000772                     l38:
   771                           
   772                           ;main.c: 53:         break;
   773  000772  EF32  F006         	goto	l2998
   774  000776                     l2810:
   775                           
   776                           ;main.c: 55:             lcdPosition(0, 0);
   777  000776  0E00               	movlw	0
   778  000778  6E0F               	movwf	lcdPosition@col^0,c
   779  00077A  0E00               	movlw	0
   780  00077C  EC37  F011         	call	_lcdPosition
   781  000780                     
   782                           ;main.c: 56:             lcdString("Defina meta");
   783  000780  0E41               	movlw	low STR_2
   784  000782  6E0F               	movwf	lcdString@msg^0,c
   785  000784  0E06               	movlw	high STR_2
   786  000786  6E10               	movwf	(lcdString@msg+1)^0,c
   787  000788  EC81  F010         	call	_lcdString	;wreg free
   788  00078C                     
   789                           ;main.c: 57:             lcdPosition(1, 0);
   790  00078C  0E00               	movlw	0
   791  00078E  6E0F               	movwf	lcdPosition@col^0,c
   792  000790  0E01               	movlw	1
   793  000792  EC37  F011         	call	_lcdPosition
   794  000796                     
   795                           ;main.c: 58:             lcdNumber(meta);
   796  000796  C019  F00F         	movff	main@meta,lcdNumber@value
   797  00079A  C01A  F010         	movff	main@meta+1,lcdNumber@value+1
   798  00079E  EC5C  F00F         	call	_lcdNumber	;wreg free
   799  0007A2                     
   800                           ;main.c: 59:             kpDebounce();
   801  0007A2  EC6B  F00C         	call	_kpDebounce	;wreg free
   802  0007A6                     
   803                           ;main.c: 60:             old = tecla;
   804  0007A6  C02A  F025         	movff	main@tecla,main@old
   805  0007AA                     
   806                           ;main.c: 61:             tecla = kpRead();
   807  0007AA  EC1D  F012         	call	_kpRead	;wreg free
   808  0007AE  5001               	movf	?_kpRead^0,w,c
   809  0007B0  6E2A               	movwf	main@tecla^0,c
   810  0007B2                     
   811                           ;main.c: 62:             if (old != tecla) {
   812  0007B2  502A               	movf	main@tecla^0,w,c
   813  0007B4  1825               	xorwf	main@old^0,w,c
   814  0007B6  B4D8               	btfsc	status,2,c
   815  0007B8  EFE0  F003         	goto	u3261
   816  0007BC  EFE2  F003         	goto	u3260
   817  0007C0                     u3261:
   818  0007C0  EF32  F006         	goto	l2998
   819  0007C4                     u3260:
   820  0007C4                     
   821                           ;main.c: 63:                 if ((((tecla) & (1<<(0)))) && enter == 3) meta += 5;
   822  0007C4  A02A               	btfss	main@tecla^0,0,c
   823  0007C6  EFE7  F003         	goto	u3271
   824  0007CA  EFE9  F003         	goto	u3270
   825  0007CE                     u3271:
   826  0007CE  EFF7  F003         	goto	l2832
   827  0007D2                     u3270:
   828  0007D2  0E03               	movlw	3
   829  0007D4  1828               	xorwf	main@enter^0,w,c
   830  0007D6  1029               	iorwf	(main@enter+1)^0,w,c
   831  0007D8  A4D8               	btfss	status,2,c
   832  0007DA  EFF1  F003         	goto	u3281
   833  0007DE  EFF3  F003         	goto	u3280
   834  0007E2                     u3281:
   835  0007E2  EFF7  F003         	goto	l2832
   836  0007E6                     u3280:
   837  0007E6  0E05               	movlw	5
   838  0007E8  2619               	addwf	main@meta^0,f,c
   839  0007EA  0E00               	movlw	0
   840  0007EC  221A               	addwfc	(main@meta+1)^0,f,c
   841  0007EE                     l2832:
   842                           
   843                           ;main.c: 64:                 if (((tecla) & (1<<(6)))) {
   844  0007EE  AC2A               	btfss	main@tecla^0,6,c
   845  0007F0  EFFC  F003         	goto	u3291
   846  0007F4  EFFE  F003         	goto	u3290
   847  0007F8                     u3291:
   848  0007F8  EF32  F006         	goto	l2998
   849  0007FC                     u3290:
   850  0007FC                     
   851                           ;main.c: 65:                     enter++;
   852  0007FC  4A28               	infsnz	main@enter^0,f,c
   853  0007FE  2A29               	incf	(main@enter+1)^0,f,c
   854  000800                     
   855                           ;main.c: 66:                     if (enter == 4) {
   856  000800  0E04               	movlw	4
   857  000802  1828               	xorwf	main@enter^0,w,c
   858  000804  1029               	iorwf	(main@enter+1)^0,w,c
   859  000806  A4D8               	btfss	status,2,c
   860  000808  EF08  F004         	goto	u3301
   861  00080C  EF0A  F004         	goto	u3300
   862  000810                     u3301:
   863  000810  EF32  F006         	goto	l2998
   864  000814                     u3300:
   865  000814                     
   866                           ;main.c: 67:                         lcdPosition(0, 0);
   867  000814  0E00               	movlw	0
   868  000816  6E0F               	movwf	lcdPosition@col^0,c
   869  000818  0E00               	movlw	0
   870  00081A  EC37  F011         	call	_lcdPosition
   871  00081E                     
   872                           ;main.c: 68:                         lcdString("Sua meta:  ");
   873  00081E  0E35               	movlw	low STR_3
   874  000820  6E0F               	movwf	lcdString@msg^0,c
   875  000822  0E06               	movlw	high STR_3
   876  000824  6E10               	movwf	(lcdString@msg+1)^0,c
   877  000826  EC81  F010         	call	_lcdString	;wreg free
   878  00082A                     
   879                           ;main.c: 69:                         muda = 2;
   880  00082A  0E00               	movlw	0
   881  00082C  6E18               	movwf	(main@muda+1)^0,c
   882  00082E  0E02               	movlw	2
   883  000830  6E17               	movwf	main@muda^0,c
   884  000832  EF32  F006         	goto	l2998
   885  000836                     l2844:
   886                           
   887                           ;main.c: 75:             kpDebounce();
   888  000836  EC6B  F00C         	call	_kpDebounce	;wreg free
   889  00083A                     
   890                           ;main.c: 76:             old = tecla;
   891  00083A  C02A  F025         	movff	main@tecla,main@old
   892  00083E                     
   893                           ;main.c: 77:             tecla = kpRead();
   894  00083E  EC1D  F012         	call	_kpRead	;wreg free
   895  000842  5001               	movf	?_kpRead^0,w,c
   896  000844  6E2A               	movwf	main@tecla^0,c
   897  000846                     
   898                           ;main.c: 78:             if (old != tecla) {
   899  000846  502A               	movf	main@tecla^0,w,c
   900  000848  1825               	xorwf	main@old^0,w,c
   901  00084A  B4D8               	btfsc	status,2,c
   902  00084C  EF2A  F004         	goto	u3311
   903  000850  EF2C  F004         	goto	u3310
   904  000854                     u3311:
   905  000854  EF63  F004         	goto	l2872
   906  000858                     u3310:
   907  000858                     
   908                           ;main.c: 79:                 if (((tecla) & (1<<(1)))) moed += 100;
   909  000858  A22A               	btfss	main@tecla^0,1,c
   910  00085A  EF31  F004         	goto	u3321
   911  00085E  EF33  F004         	goto	u3320
   912  000862                     u3321:
   913  000862  EF37  F004         	goto	l2856
   914  000866                     u3320:
   915  000866  0E64               	movlw	100
   916  000868  2626               	addwf	main@moed^0,f,c
   917  00086A  0E00               	movlw	0
   918  00086C  2227               	addwfc	(main@moed+1)^0,f,c
   919  00086E                     l2856:
   920                           
   921                           ;main.c: 80:                 if (((tecla) & (1<<(2)))) moed += 50;
   922  00086E  A42A               	btfss	main@tecla^0,2,c
   923  000870  EF3C  F004         	goto	u3331
   924  000874  EF3E  F004         	goto	u3330
   925  000878                     u3331:
   926  000878  EF42  F004         	goto	l2860
   927  00087C                     u3330:
   928  00087C  0E32               	movlw	50
   929  00087E  2626               	addwf	main@moed^0,f,c
   930  000880  0E00               	movlw	0
   931  000882  2227               	addwfc	(main@moed+1)^0,f,c
   932  000884                     l2860:
   933                           
   934                           ;main.c: 81:                 if (((tecla) & (1<<(3)))) moed += 25;
   935  000884  A62A               	btfss	main@tecla^0,3,c
   936  000886  EF47  F004         	goto	u3341
   937  00088A  EF49  F004         	goto	u3340
   938  00088E                     u3341:
   939  00088E  EF4D  F004         	goto	l2864
   940  000892                     u3340:
   941  000892  0E19               	movlw	25
   942  000894  2626               	addwf	main@moed^0,f,c
   943  000896  0E00               	movlw	0
   944  000898  2227               	addwfc	(main@moed+1)^0,f,c
   945  00089A                     l2864:
   946                           
   947                           ;main.c: 82:                 if (((tecla) & (1<<(4)))) moed += 10;
   948  00089A  A82A               	btfss	main@tecla^0,4,c
   949  00089C  EF52  F004         	goto	u3351
   950  0008A0  EF54  F004         	goto	u3350
   951  0008A4                     u3351:
   952  0008A4  EF58  F004         	goto	l2868
   953  0008A8                     u3350:
   954  0008A8  0E0A               	movlw	10
   955  0008AA  2626               	addwf	main@moed^0,f,c
   956  0008AC  0E00               	movlw	0
   957  0008AE  2227               	addwfc	(main@moed+1)^0,f,c
   958  0008B0                     l2868:
   959                           
   960                           ;main.c: 83:                 if (((tecla) & (1<<(5)))) moed += 5;
   961  0008B0  AA2A               	btfss	main@tecla^0,5,c
   962  0008B2  EF5D  F004         	goto	u3361
   963  0008B6  EF5F  F004         	goto	u3360
   964  0008BA                     u3361:
   965  0008BA  EF63  F004         	goto	l2872
   966  0008BE                     u3360:
   967  0008BE  0E05               	movlw	5
   968  0008C0  2626               	addwf	main@moed^0,f,c
   969  0008C2  0E00               	movlw	0
   970  0008C4  2227               	addwfc	(main@moed+1)^0,f,c
   971  0008C6                     l2872:
   972                           
   973                           ;main.c: 85:             ssdInit();
   974  0008C6  EC56  F010         	call	_ssdInit	;wreg free
   975  0008CA                     
   976                           ;main.c: 86:             ssdDigit(((moed / 1000) % 10), 0);
   977  0008CA  0E00               	movlw	0
   978  0008CC  6E0F               	movwf	ssdDigit@pos^0,c
   979  0008CE  0E03               	movlw	3
   980  0008D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
   981  0008D2  0EE8               	movlw	232
   982  0008D4  6E03               	movwf	___awdiv@divisor^0,c
   983  0008D6  C026  F001         	movff	main@moed,___awdiv@dividend
   984  0008DA  C027  F002         	movff	main@moed+1,___awdiv@dividend+1
   985  0008DE  EC0E  F00E         	call	___awdiv	;wreg free
   986  0008E2  C001  F009         	movff	?___awdiv,___awmod@dividend
   987  0008E6  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
   988  0008EA  0E00               	movlw	0
   989  0008EC  6E0C               	movwf	(___awmod@divisor+1)^0,c
   990  0008EE  0E0A               	movlw	10
   991  0008F0  6E0B               	movwf	___awmod@divisor^0,c
   992  0008F2  ECCA  F00E         	call	___awmod	;wreg free
   993  0008F6  5009               	movf	?___awmod^0,w,c
   994  0008F8  EC2A  F010         	call	_ssdDigit
   995  0008FC                     
   996                           ;main.c: 87:             ssdDigit(((moed / 100) % 10), 1);
   997  0008FC  0E01               	movlw	1
   998  0008FE  6E0F               	movwf	ssdDigit@pos^0,c
   999  000900  0E00               	movlw	0
  1000  000902  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1001  000904  0E64               	movlw	100
  1002  000906  6E03               	movwf	___awdiv@divisor^0,c
  1003  000908  C026  F001         	movff	main@moed,___awdiv@dividend
  1004  00090C  C027  F002         	movff	main@moed+1,___awdiv@dividend+1
  1005  000910  EC0E  F00E         	call	___awdiv	;wreg free
  1006  000914  C001  F009         	movff	?___awdiv,___awmod@dividend
  1007  000918  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1008  00091C  0E00               	movlw	0
  1009  00091E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1010  000920  0E0A               	movlw	10
  1011  000922  6E0B               	movwf	___awmod@divisor^0,c
  1012  000924  ECCA  F00E         	call	___awmod	;wreg free
  1013  000928  5009               	movf	?___awmod^0,w,c
  1014  00092A  EC2A  F010         	call	_ssdDigit
  1015  00092E                     
  1016                           ;main.c: 88:             ssdDigit(((moed / 10) % 10), 2);
  1017  00092E  0E02               	movlw	2
  1018  000930  6E0F               	movwf	ssdDigit@pos^0,c
  1019  000932  0E00               	movlw	0
  1020  000934  6E04               	movwf	(___awdiv@divisor+1)^0,c
  1021  000936  0E0A               	movlw	10
  1022  000938  6E03               	movwf	___awdiv@divisor^0,c
  1023  00093A  C026  F001         	movff	main@moed,___awdiv@dividend
  1024  00093E  C027  F002         	movff	main@moed+1,___awdiv@dividend+1
  1025  000942  EC0E  F00E         	call	___awdiv	;wreg free
  1026  000946  C001  F009         	movff	?___awdiv,___awmod@dividend
  1027  00094A  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  1028  00094E  0E00               	movlw	0
  1029  000950  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1030  000952  0E0A               	movlw	10
  1031  000954  6E0B               	movwf	___awmod@divisor^0,c
  1032  000956  ECCA  F00E         	call	___awmod	;wreg free
  1033  00095A  5009               	movf	?___awmod^0,w,c
  1034  00095C  EC2A  F010         	call	_ssdDigit
  1035  000960                     
  1036                           ;main.c: 89:             ssdDigit(((moed / 1) % 10), 3);
  1037  000960  0E03               	movlw	3
  1038  000962  6E0F               	movwf	ssdDigit@pos^0,c
  1039  000964  C026  F009         	movff	main@moed,___awmod@dividend
  1040  000968  C027  F00A         	movff	main@moed+1,___awmod@dividend+1
  1041  00096C  0E00               	movlw	0
  1042  00096E  6E0C               	movwf	(___awmod@divisor+1)^0,c
  1043  000970  0E0A               	movlw	10
  1044  000972  6E0B               	movwf	___awmod@divisor^0,c
  1045  000974  ECCA  F00E         	call	___awmod	;wreg free
  1046  000978  5009               	movf	?___awmod^0,w,c
  1047  00097A  EC2A  F010         	call	_ssdDigit
  1048  00097E                     
  1049                           ;main.c: 90:             ssdUpdate();
  1050  00097E  EC00  F00B         	call	_ssdUpdate	;wreg free
  1051  000982                     
  1052                           ;main.c: 91:             for (tempo = 0; tempo < 50; tempo++);
  1053  000982  0E00               	movlw	0
  1054  000984  6E1B               	movwf	main@tempo^0,c
  1055  000986  0E00               	movlw	0
  1056  000988  6E1C               	movwf	(main@tempo+1)^0,c
  1057  00098A  0E00               	movlw	0
  1058  00098C  6E1D               	movwf	(main@tempo+2)^0,c
  1059  00098E  0E00               	movlw	0
  1060  000990  6E1E               	movwf	(main@tempo+3)^0,c
  1061  000992  C01B  F001         	movff	main@tempo,___flge@ff1
  1062  000996  C01C  F002         	movff	main@tempo+1,___flge@ff1+1
  1063  00099A  C01D  F003         	movff	main@tempo+2,___flge@ff1+2
  1064  00099E  C01E  F004         	movff	main@tempo+3,___flge@ff1+3
  1065  0009A2  0E00               	movlw	0
  1066  0009A4  6E05               	movwf	___flge@ff2^0,c
  1067  0009A6  0E00               	movlw	0
  1068  0009A8  6E06               	movwf	(___flge@ff2+1)^0,c
  1069  0009AA  0E48               	movlw	72
  1070  0009AC  6E07               	movwf	(___flge@ff2+2)^0,c
  1071  0009AE  0E42               	movlw	66
  1072  0009B0  6E08               	movwf	(___flge@ff2+3)^0,c
  1073  0009B2  EC8C  F00D         	call	___flge	;wreg free
  1074  0009B6  A0D8               	btfss	status,0,c
  1075  0009B8  EFE0  F004         	goto	u3371
  1076  0009BC  EFE2  F004         	goto	u3370
  1077  0009C0                     u3371:
  1078  0009C0  EFE4  F004         	goto	l2890
  1079  0009C4                     u3370:
  1080  0009C4  EF17  F005         	goto	l2892
  1081  0009C8                     l2890:
  1082  0009C8  C01B  F001         	movff	main@tempo,___fladd@b
  1083  0009CC  C01C  F002         	movff	main@tempo+1,___fladd@b+1
  1084  0009D0  C01D  F003         	movff	main@tempo+2,___fladd@b+2
  1085  0009D4  C01E  F004         	movff	main@tempo+3,___fladd@b+3
  1086  0009D8  0E00               	movlw	0
  1087  0009DA  6E05               	movwf	___fladd@a^0,c
  1088  0009DC  0E00               	movlw	0
  1089  0009DE  6E06               	movwf	(___fladd@a+1)^0,c
  1090  0009E0  0E80               	movlw	128
  1091  0009E2  6E07               	movwf	(___fladd@a+2)^0,c
  1092  0009E4  0E3F               	movlw	63
  1093  0009E6  6E08               	movwf	(___fladd@a+3)^0,c
  1094  0009E8  EC52  F006         	call	___fladd	;wreg free
  1095  0009EC  C001  F01B         	movff	?___fladd,main@tempo
  1096  0009F0  C002  F01C         	movff	?___fladd+1,main@tempo+1
  1097  0009F4  C003  F01D         	movff	?___fladd+2,main@tempo+2
  1098  0009F8  C004  F01E         	movff	?___fladd+3,main@tempo+3
  1099  0009FC  C01B  F001         	movff	main@tempo,___flge@ff1
  1100  000A00  C01C  F002         	movff	main@tempo+1,___flge@ff1+1
  1101  000A04  C01D  F003         	movff	main@tempo+2,___flge@ff1+2
  1102  000A08  C01E  F004         	movff	main@tempo+3,___flge@ff1+3
  1103  000A0C  0E00               	movlw	0
  1104  000A0E  6E05               	movwf	___flge@ff2^0,c
  1105  000A10  0E00               	movlw	0
  1106  000A12  6E06               	movwf	(___flge@ff2+1)^0,c
  1107  000A14  0E48               	movlw	72
  1108  000A16  6E07               	movwf	(___flge@ff2+2)^0,c
  1109  000A18  0E42               	movlw	66
  1110  000A1A  6E08               	movwf	(___flge@ff2+3)^0,c
  1111  000A1C  EC8C  F00D         	call	___flge	;wreg free
  1112  000A20  A0D8               	btfss	status,0,c
  1113  000A22  EF15  F005         	goto	u3381
  1114  000A26  EF17  F005         	goto	u3380
  1115  000A2A                     u3381:
  1116  000A2A  EFE4  F004         	goto	l2890
  1117  000A2E                     u3380:
  1118  000A2E                     l2892:
  1119                           
  1120                           ;main.c: 92:             if (moed >= meta) {
  1121  000A2E  5019               	movf	main@meta^0,w,c
  1122  000A30  5C26               	subwf	main@moed^0,w,c
  1123  000A32  5027               	movf	(main@moed+1)^0,w,c
  1124  000A34  0A80               	xorlw	128
  1125  000A36  6E15               	movwf	??_main^0,c
  1126  000A38  501A               	movf	(main@meta+1)^0,w,c
  1127  000A3A  0A80               	xorlw	128
  1128  000A3C  5815               	subwfb	??_main^0,w,c
  1129  000A3E  A0D8               	btfss	status,0,c
  1130  000A40  EF24  F005         	goto	u3391
  1131  000A44  EF26  F005         	goto	u3390
  1132  000A48                     u3391:
  1133  000A48  EF32  F006         	goto	l2998
  1134  000A4C                     u3390:
  1135  000A4C                     
  1136                           ;main.c: 93:                 muda = 3;
  1137  000A4C  0E00               	movlw	0
  1138  000A4E  6E18               	movwf	(main@muda+1)^0,c
  1139  000A50  0E03               	movlw	3
  1140  000A52  6E17               	movwf	main@muda^0,c
  1141                           
  1142                           ;main.c: 94:                 enter = 4;
  1143  000A54  0E00               	movlw	0
  1144  000A56  6E29               	movwf	(main@enter+1)^0,c
  1145  000A58  0E04               	movlw	4
  1146  000A5A  6E28               	movwf	main@enter^0,c
  1147  000A5C  EF32  F006         	goto	l2998
  1148  000A60                     l2896:
  1149                           
  1150                           ;main.c: 98:             lcdPosition(0, 0);
  1151  000A60  0E00               	movlw	0
  1152  000A62  6E0F               	movwf	lcdPosition@col^0,c
  1153  000A64  0E00               	movlw	0
  1154  000A66  EC37  F011         	call	_lcdPosition
  1155  000A6A                     
  1156                           ;main.c: 99:             lcdString("Senha?   ");
  1157  000A6A  0E4D               	movlw	low STR_4
  1158  000A6C  6E0F               	movwf	lcdString@msg^0,c
  1159  000A6E  0E06               	movlw	high STR_4
  1160  000A70  6E10               	movwf	(lcdString@msg+1)^0,c
  1161  000A72  EC81  F010         	call	_lcdString	;wreg free
  1162  000A76                     
  1163                           ;main.c: 100:             lcdPosition(1, 0);
  1164  000A76  0E00               	movlw	0
  1165  000A78  6E0F               	movwf	lcdPosition@col^0,c
  1166  000A7A  0E01               	movlw	1
  1167  000A7C  EC37  F011         	call	_lcdPosition
  1168  000A80                     
  1169                           ;main.c: 101:             lcdChar(t1);
  1170  000A80  5022               	movf	main@t1^0,w,c
  1171  000A82  ECE7  F011         	call	_lcdChar
  1172  000A86                     
  1173                           ;main.c: 102:             lcdChar(t2);
  1174  000A86  5023               	movf	main@t2^0,w,c
  1175  000A88  ECE7  F011         	call	_lcdChar
  1176  000A8C                     
  1177                           ;main.c: 103:             lcdChar(t3);
  1178  000A8C  5024               	movf	main@t3^0,w,c
  1179  000A8E  ECE7  F011         	call	_lcdChar
  1180  000A92                     
  1181                           ;main.c: 104:             lcdChar(' ');
  1182  000A92  0E20               	movlw	32
  1183  000A94  ECE7  F011         	call	_lcdChar
  1184  000A98                     
  1185                           ;main.c: 105:             lcdChar(' ');
  1186  000A98  0E20               	movlw	32
  1187  000A9A  ECE7  F011         	call	_lcdChar
  1188  000A9E                     
  1189                           ;main.c: 106:             kpDebounce();
  1190  000A9E  EC6B  F00C         	call	_kpDebounce	;wreg free
  1191  000AA2                     
  1192                           ;main.c: 107:             old = tecla;
  1193  000AA2  C02A  F025         	movff	main@tecla,main@old
  1194  000AA6                     
  1195                           ;main.c: 108:             tecla = kpRead();
  1196  000AA6  EC1D  F012         	call	_kpRead	;wreg free
  1197  000AAA  5001               	movf	?_kpRead^0,w,c
  1198  000AAC  6E2A               	movwf	main@tecla^0,c
  1199  000AAE                     
  1200                           ;main.c: 109:             if (old != tecla) {
  1201  000AAE  502A               	movf	main@tecla^0,w,c
  1202  000AB0  1825               	xorwf	main@old^0,w,c
  1203  000AB2  B4D8               	btfsc	status,2,c
  1204  000AB4  EF5E  F005         	goto	u3401
  1205  000AB8  EF60  F005         	goto	u3400
  1206  000ABC                     u3401:
  1207  000ABC  EF32  F006         	goto	l2998
  1208  000AC0                     u3400:
  1209  000AC0                     
  1210                           ;main.c: 110:                 if ((((tecla) & (1<<(0)))) && enter == 4) t1++;
  1211  000AC0  A02A               	btfss	main@tecla^0,0,c
  1212  000AC2  EF65  F005         	goto	u3411
  1213  000AC6  EF67  F005         	goto	u3410
  1214  000ACA                     u3411:
  1215  000ACA  EF72  F005         	goto	l2926
  1216  000ACE                     u3410:
  1217  000ACE  0E04               	movlw	4
  1218  000AD0  1828               	xorwf	main@enter^0,w,c
  1219  000AD2  1029               	iorwf	(main@enter+1)^0,w,c
  1220  000AD4  A4D8               	btfss	status,2,c
  1221  000AD6  EF6F  F005         	goto	u3421
  1222  000ADA  EF71  F005         	goto	u3420
  1223  000ADE                     u3421:
  1224  000ADE  EF72  F005         	goto	l2926
  1225  000AE2                     u3420:
  1226  000AE2  2A22               	incf	main@t1^0,f,c
  1227  000AE4                     l2926:
  1228                           
  1229                           ;main.c: 111:                 if ((((tecla) & (1<<(0)))) && enter == 5) t2++;
  1230  000AE4  A02A               	btfss	main@tecla^0,0,c
  1231  000AE6  EF77  F005         	goto	u3431
  1232  000AEA  EF79  F005         	goto	u3430
  1233  000AEE                     u3431:
  1234  000AEE  EF84  F005         	goto	l2932
  1235  000AF2                     u3430:
  1236  000AF2  0E05               	movlw	5
  1237  000AF4  1828               	xorwf	main@enter^0,w,c
  1238  000AF6  1029               	iorwf	(main@enter+1)^0,w,c
  1239  000AF8  A4D8               	btfss	status,2,c
  1240  000AFA  EF81  F005         	goto	u3441
  1241  000AFE  EF83  F005         	goto	u3440
  1242  000B02                     u3441:
  1243  000B02  EF84  F005         	goto	l2932
  1244  000B06                     u3440:
  1245  000B06  2A23               	incf	main@t2^0,f,c
  1246  000B08                     l2932:
  1247                           
  1248                           ;main.c: 112:                 if ((((tecla) & (1<<(0)))) && enter == 6) t3++;
  1249  000B08  A02A               	btfss	main@tecla^0,0,c
  1250  000B0A  EF89  F005         	goto	u3451
  1251  000B0E  EF8B  F005         	goto	u3450
  1252  000B12                     u3451:
  1253  000B12  EF96  F005         	goto	l2938
  1254  000B16                     u3450:
  1255  000B16  0E06               	movlw	6
  1256  000B18  1828               	xorwf	main@enter^0,w,c
  1257  000B1A  1029               	iorwf	(main@enter+1)^0,w,c
  1258  000B1C  A4D8               	btfss	status,2,c
  1259  000B1E  EF93  F005         	goto	u3461
  1260  000B22  EF95  F005         	goto	u3460
  1261  000B26                     u3461:
  1262  000B26  EF96  F005         	goto	l2938
  1263  000B2A                     u3460:
  1264  000B2A  2A24               	incf	main@t3^0,f,c
  1265  000B2C                     l2938:
  1266                           
  1267                           ;main.c: 113:                 if (((tecla) & (1<<(6)))) {
  1268  000B2C  AC2A               	btfss	main@tecla^0,6,c
  1269  000B2E  EF9B  F005         	goto	u3471
  1270  000B32  EF9D  F005         	goto	u3470
  1271  000B36                     u3471:
  1272  000B36  EF32  F006         	goto	l2998
  1273  000B3A                     u3470:
  1274  000B3A                     
  1275                           ;main.c: 114:                     enter++;
  1276  000B3A  4A28               	infsnz	main@enter^0,f,c
  1277  000B3C  2A29               	incf	(main@enter+1)^0,f,c
  1278  000B3E                     
  1279                           ;main.c: 115:                     if (enter == 7 && t1 == s1 && t2 == s2 && t3 == s3) {
  1280  000B3E  0E07               	movlw	7
  1281  000B40  1828               	xorwf	main@enter^0,w,c
  1282  000B42  1029               	iorwf	(main@enter+1)^0,w,c
  1283  000B44  A4D8               	btfss	status,2,c
  1284  000B46  EFA7  F005         	goto	u3481
  1285  000B4A  EFA9  F005         	goto	u3480
  1286  000B4E                     u3481:
  1287  000B4E  EFF7  F005         	goto	l2980
  1288  000B52                     u3480:
  1289  000B52  501F               	movf	main@s1^0,w,c
  1290  000B54  1822               	xorwf	main@t1^0,w,c
  1291  000B56  A4D8               	btfss	status,2,c
  1292  000B58  EFB0  F005         	goto	u3491
  1293  000B5C  EFB2  F005         	goto	u3490
  1294  000B60                     u3491:
  1295  000B60  EFF7  F005         	goto	l2980
  1296  000B64                     u3490:
  1297  000B64  5020               	movf	main@s2^0,w,c
  1298  000B66  1823               	xorwf	main@t2^0,w,c
  1299  000B68  A4D8               	btfss	status,2,c
  1300  000B6A  EFB9  F005         	goto	u3501
  1301  000B6E  EFBB  F005         	goto	u3500
  1302  000B72                     u3501:
  1303  000B72  EFF7  F005         	goto	l2980
  1304  000B76                     u3500:
  1305  000B76  5021               	movf	main@s3^0,w,c
  1306  000B78  1824               	xorwf	main@t3^0,w,c
  1307  000B7A  A4D8               	btfss	status,2,c
  1308  000B7C  EFC2  F005         	goto	u3511
  1309  000B80  EFC4  F005         	goto	u3510
  1310  000B84                     u3511:
  1311  000B84  EFF7  F005         	goto	l2980
  1312  000B88                     u3510:
  1313  000B88                     
  1314                           ;main.c: 116:                         lcdPosition(0, 0);
  1315  000B88  0E00               	movlw	0
  1316  000B8A  6E0F               	movwf	lcdPosition@col^0,c
  1317  000B8C  0E00               	movlw	0
  1318  000B8E  EC37  F011         	call	_lcdPosition
  1319  000B92                     
  1320                           ;main.c: 117:                         lcdString("Cofre aberto");
  1321  000B92  0E28               	movlw	low STR_5
  1322  000B94  6E0F               	movwf	lcdString@msg^0,c
  1323  000B96  0E06               	movlw	high STR_5
  1324  000B98  6E10               	movwf	(lcdString@msg+1)^0,c
  1325  000B9A  EC81  F010         	call	_lcdString	;wreg free
  1326  000B9E                     
  1327                           ;main.c: 118:                         pwmSet(100);
  1328  000B9E  0E64               	movlw	100
  1329  000BA0  EC96  F00F         	call	_pwmSet
  1330  000BA4                     
  1331                           ;main.c: 119:                         delay(1500);
  1332  000BA4  0E05               	movlw	5
  1333  000BA6  6E02               	movwf	(delay@x+1)^0,c
  1334  000BA8  0EDC               	movlw	220
  1335  000BAA  6E01               	movwf	delay@x^0,c
  1336  000BAC  ECCC  F00F         	call	_delay	;wreg free
  1337  000BB0                     
  1338                           ;main.c: 120:                         pwmSet(0);
  1339  000BB0  0E00               	movlw	0
  1340  000BB2  EC96  F00F         	call	_pwmSet
  1341  000BB6                     
  1342                           ;main.c: 121:                         muda = 0;
  1343  000BB6  0E00               	movlw	0
  1344  000BB8  6E18               	movwf	(main@muda+1)^0,c
  1345  000BBA  0E00               	movlw	0
  1346  000BBC  6E17               	movwf	main@muda^0,c
  1347  000BBE                     
  1348                           ;main.c: 122:                         enter = 0;
  1349  000BBE  0E00               	movlw	0
  1350  000BC0  6E29               	movwf	(main@enter+1)^0,c
  1351  000BC2  0E00               	movlw	0
  1352  000BC4  6E28               	movwf	main@enter^0,c
  1353  000BC6                     
  1354                           ;main.c: 123:                         s1 = '0';
  1355  000BC6  0E30               	movlw	48
  1356  000BC8  6E1F               	movwf	main@s1^0,c
  1357  000BCA                     
  1358                           ;main.c: 124:                         s2 = '0';
  1359  000BCA  0E30               	movlw	48
  1360  000BCC  6E20               	movwf	main@s2^0,c
  1361  000BCE                     
  1362                           ;main.c: 125:                         s3 = '0';
  1363  000BCE  0E30               	movlw	48
  1364  000BD0  6E21               	movwf	main@s3^0,c
  1365  000BD2                     
  1366                           ;main.c: 126:                         t1 = '0';
  1367  000BD2  0E30               	movlw	48
  1368  000BD4  6E22               	movwf	main@t1^0,c
  1369  000BD6                     
  1370                           ;main.c: 127:                         t2 = '0';
  1371  000BD6  0E30               	movlw	48
  1372  000BD8  6E23               	movwf	main@t2^0,c
  1373  000BDA                     
  1374                           ;main.c: 128:                         t3 = '0';
  1375  000BDA  0E30               	movlw	48
  1376  000BDC  6E24               	movwf	main@t3^0,c
  1377  000BDE                     
  1378                           ;main.c: 129:                         moed = 0;
  1379  000BDE  0E00               	movlw	0
  1380  000BE0  6E27               	movwf	(main@moed+1)^0,c
  1381  000BE2  0E00               	movlw	0
  1382  000BE4  6E26               	movwf	main@moed^0,c
  1383  000BE6                     
  1384                           ;main.c: 130:                         meta = 0;
  1385  000BE6  0E00               	movlw	0
  1386  000BE8  6E1A               	movwf	(main@meta+1)^0,c
  1387  000BEA  0E00               	movlw	0
  1388  000BEC  6E19               	movwf	main@meta^0,c
  1389  000BEE                     l2980:
  1390                           
  1391                           ;main.c: 132:                     if (enter == 7 && (t1 != s1 || t2 != s2 || t3 != s3)) 
      +                          {
  1392  000BEE  0E07               	movlw	7
  1393  000BF0  1828               	xorwf	main@enter^0,w,c
  1394  000BF2  1029               	iorwf	(main@enter+1)^0,w,c
  1395  000BF4  A4D8               	btfss	status,2,c
  1396  000BF6  EFFF  F005         	goto	u3521
  1397  000BFA  EF01  F006         	goto	u3520
  1398  000BFE                     u3521:
  1399  000BFE  EF32  F006         	goto	l2998
  1400  000C02                     u3520:
  1401  000C02  501F               	movf	main@s1^0,w,c
  1402  000C04  1822               	xorwf	main@t1^0,w,c
  1403  000C06  A4D8               	btfss	status,2,c
  1404  000C08  EF08  F006         	goto	u3531
  1405  000C0C  EF0A  F006         	goto	u3530
  1406  000C10                     u3531:
  1407  000C10  EF1C  F006         	goto	l2988
  1408  000C14                     u3530:
  1409  000C14  5020               	movf	main@s2^0,w,c
  1410  000C16  1823               	xorwf	main@t2^0,w,c
  1411  000C18  A4D8               	btfss	status,2,c
  1412  000C1A  EF11  F006         	goto	u3541
  1413  000C1E  EF13  F006         	goto	u3540
  1414  000C22                     u3541:
  1415  000C22  EF1C  F006         	goto	l2988
  1416  000C26                     u3540:
  1417  000C26  5021               	movf	main@s3^0,w,c
  1418  000C28  1824               	xorwf	main@t3^0,w,c
  1419  000C2A  B4D8               	btfsc	status,2,c
  1420  000C2C  EF1A  F006         	goto	u3551
  1421  000C30  EF1C  F006         	goto	u3550
  1422  000C34                     u3551:
  1423  000C34  EF32  F006         	goto	l2998
  1424  000C38                     u3550:
  1425  000C38                     l2988:
  1426                           
  1427                           ;main.c: 133:                         t1 = '0';
  1428  000C38  0E30               	movlw	48
  1429  000C3A  6E22               	movwf	main@t1^0,c
  1430                           
  1431                           ;main.c: 134:                         t2 = '0';
  1432  000C3C  0E30               	movlw	48
  1433  000C3E  6E23               	movwf	main@t2^0,c
  1434                           
  1435                           ;main.c: 135:                         t3 = '0';
  1436  000C40  0E30               	movlw	48
  1437  000C42  6E24               	movwf	main@t3^0,c
  1438                           
  1439                           ;main.c: 136:                         enter = 4;
  1440  000C44  0E00               	movlw	0
  1441  000C46  6E29               	movwf	(main@enter+1)^0,c
  1442  000C48  0E04               	movlw	4
  1443  000C4A  6E28               	movwf	main@enter^0,c
  1444  000C4C                     
  1445                           ;main.c: 137:                         pwmSet(100);
  1446  000C4C  0E64               	movlw	100
  1447  000C4E  EC96  F00F         	call	_pwmSet
  1448  000C52                     
  1449                           ;main.c: 138:                         delay(250);
  1450  000C52  0E00               	movlw	0
  1451  000C54  6E02               	movwf	(delay@x+1)^0,c
  1452  000C56  0EFA               	movlw	250
  1453  000C58  6E01               	movwf	delay@x^0,c
  1454  000C5A  ECCC  F00F         	call	_delay	;wreg free
  1455  000C5E                     
  1456                           ;main.c: 139:                         pwmSet(0);
  1457  000C5E  0E00               	movlw	0
  1458  000C60  EC96  F00F         	call	_pwmSet
  1459  000C64                     l2998:
  1460  000C64  C017  F015         	movff	main@muda,??_main
  1461  000C68  C018  F016         	movff	main@muda+1,??_main+1
  1462                           
  1463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1464                           ; Switch size 1, requested type "simple"
  1465                           ; Number of cases is 1, Range of values is 0 to 0
  1466                           ; switch strategies available:
  1467                           ; Name         Instructions Cycles
  1468                           ; simple_byte            4     3 (average)
  1469                           ;	Chosen strategy is simple_byte
  1470  000C6C  5016               	movf	(??_main+1)^0,w,c
  1471  000C6E  0A00               	xorlw	0	; case 0
  1472  000C70  B4D8               	btfsc	status,2,c
  1473  000C72  EF3D  F006         	goto	l3012
  1474  000C76  EF32  F006         	goto	l2998
  1475  000C7A                     l3012:
  1476                           
  1477                           ; Switch size 1, requested type "simple"
  1478                           ; Number of cases is 4, Range of values is 0 to 3
  1479                           ; switch strategies available:
  1480                           ; Name         Instructions Cycles
  1481                           ; simple_byte           13     7 (average)
  1482                           ;	Chosen strategy is simple_byte
  1483  000C7A  5015               	movf	??_main^0,w,c
  1484  000C7C  0A00               	xorlw	0	; case 0
  1485  000C7E  B4D8               	btfsc	status,2,c
  1486  000C80  EF42  F003         	goto	l2764
  1487  000C84  0A01               	xorlw	1	; case 1
  1488  000C86  B4D8               	btfsc	status,2,c
  1489  000C88  EFBB  F003         	goto	l2810
  1490  000C8C  0A03               	xorlw	3	; case 2
  1491  000C8E  B4D8               	btfsc	status,2,c
  1492  000C90  EF1B  F004         	goto	l2844
  1493  000C94  0A01               	xorlw	1	; case 3
  1494  000C96  B4D8               	btfsc	status,2,c
  1495  000C98  EF30  F005         	goto	l2896
  1496  000C9C  EF32  F006         	goto	l2998
  1497  000CA0  EF00  F000         	goto	start
  1498  000CA4                     __end_of_main:
  1499                           	callstack 0
  1500                           
  1501 ;; *************** function _ssdUpdate *****************
  1502 ;; Defined at:
  1503 ;;		line 50 in file "ssd.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1517 ;;      Params:         0       0       0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; Hardware stack levels required when called: 3
  1524 ;; This function calls:
  1525 ;;		_digitalWrite
  1526 ;;		_soWrite
  1527 ;; This function is called by:
  1528 ;;		_main
  1529 ;; This function uses a non-reentrant model
  1530 ;;
  1531                           
  1532                           	psect	text1
  1533  001600                     __ptext1:
  1534                           	callstack 0
  1535  001600                     _ssdUpdate:
  1536                           	callstack 27
  1537  001600                     
  1538                           ;ssd.c: 54:     digitalWrite(PIN_D0,0);
  1539  001600  0E00               	movlw	0
  1540  001602  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1541  001604  0E18               	movlw	24
  1542  001606  6E01               	movwf	digitalWrite@pin^0,c
  1543  001608  0E00               	movlw	0
  1544  00160A  6E04               	movwf	(digitalWrite@value+1)^0,c
  1545  00160C  0E00               	movlw	0
  1546  00160E  6E03               	movwf	digitalWrite@value^0,c
  1547  001610  ECB2  F008         	call	_digitalWrite	;wreg free
  1548                           
  1549                           ;ssd.c: 55:     digitalWrite(PIN_D1,0);
  1550  001614  0E00               	movlw	0
  1551  001616  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1552  001618  0E19               	movlw	25
  1553  00161A  6E01               	movwf	digitalWrite@pin^0,c
  1554  00161C  0E00               	movlw	0
  1555  00161E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1556  001620  0E00               	movlw	0
  1557  001622  6E03               	movwf	digitalWrite@value^0,c
  1558  001624  ECB2  F008         	call	_digitalWrite	;wreg free
  1559                           
  1560                           ;ssd.c: 56:     digitalWrite(PIN_D2,0);
  1561  001628  0E00               	movlw	0
  1562  00162A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1563  00162C  0E1A               	movlw	26
  1564  00162E  6E01               	movwf	digitalWrite@pin^0,c
  1565  001630  0E00               	movlw	0
  1566  001632  6E04               	movwf	(digitalWrite@value+1)^0,c
  1567  001634  0E00               	movlw	0
  1568  001636  6E03               	movwf	digitalWrite@value^0,c
  1569  001638  ECB2  F008         	call	_digitalWrite	;wreg free
  1570                           
  1571                           ;ssd.c: 57:     digitalWrite(PIN_D3,0);
  1572  00163C  0E00               	movlw	0
  1573  00163E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1574  001640  0E1B               	movlw	27
  1575  001642  6E01               	movwf	digitalWrite@pin^0,c
  1576  001644  0E00               	movlw	0
  1577  001646  6E04               	movwf	(digitalWrite@value+1)^0,c
  1578  001648  0E00               	movlw	0
  1579  00164A  6E03               	movwf	digitalWrite@value^0,c
  1580  00164C  ECB2  F008         	call	_digitalWrite	;wreg free
  1581                           
  1582                           ;ssd.c: 60:     soWrite(0x00);
  1583  001650  0E00               	movlw	0
  1584  001652  6E08               	movwf	(soWrite@value+1)^0,c
  1585  001654  0E00               	movlw	0
  1586  001656  6E07               	movwf	soWrite@value^0,c
  1587  001658  ECAC  F010         	call	_soWrite	;wreg free
  1588                           
  1589                           ;ssd.c: 62:     switch (display)
  1590  00165C  EF98  F00B         	goto	l2488
  1591  001660                     l2460:
  1592                           
  1593                           ;ssd.c: 65:             soWrite(valor[v0]);
  1594  001660  0E01               	movlw	low _valor
  1595  001662  2434               	addwf	_v0^0,w,c
  1596  001664  6EF6               	movwf	tblptrl,c
  1597  001666  6AF7               	clrf	tblptrh,c
  1598  001668  0E06               	movlw	high _valor
  1599  00166A  22F7               	addwfc	tblptrh,f,c
  1600  00166C                     	if	0	;There are less than 3 active tblptr bytes
  1601  00166C                     	endif
  1602  00166C  0008               	tblrd		*
  1603  00166E  50F5               	movf	tablat,w,c
  1604  001670  6E07               	movwf	soWrite@value^0,c
  1605  001672  6A08               	clrf	(soWrite@value+1)^0,c
  1606  001674  ECAC  F010         	call	_soWrite	;wreg free
  1607  001678                     
  1608                           ;ssd.c: 66:             digitalWrite(PIN_D0,1);
  1609  001678  0E00               	movlw	0
  1610  00167A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1611  00167C  0E18               	movlw	24
  1612  00167E  6E01               	movwf	digitalWrite@pin^0,c
  1613  001680  0E00               	movlw	0
  1614  001682  6E04               	movwf	(digitalWrite@value+1)^0,c
  1615  001684  0E01               	movlw	1
  1616  001686  6E03               	movwf	digitalWrite@value^0,c
  1617  001688  ECB2  F008         	call	_digitalWrite	;wreg free
  1618  00168C                     
  1619                           ;ssd.c: 67:             display = 1;
  1620  00168C  0E01               	movlw	1
  1621  00168E  6E35               	movwf	_display^0,c
  1622                           
  1623                           ;ssd.c: 68:             break;
  1624  001690  EFB5  F00B         	goto	l337
  1625  001694                     l2466:
  1626                           
  1627                           ;ssd.c: 71:             soWrite(valor[v1]);
  1628  001694  0E01               	movlw	low _valor
  1629  001696  2433               	addwf	_v1^0,w,c
  1630  001698  6EF6               	movwf	tblptrl,c
  1631  00169A  6AF7               	clrf	tblptrh,c
  1632  00169C  0E06               	movlw	high _valor
  1633  00169E  22F7               	addwfc	tblptrh,f,c
  1634  0016A0                     	if	0	;There are less than 3 active tblptr bytes
  1635  0016A0                     	endif
  1636  0016A0  0008               	tblrd		*
  1637  0016A2  50F5               	movf	tablat,w,c
  1638  0016A4  6E07               	movwf	soWrite@value^0,c
  1639  0016A6  6A08               	clrf	(soWrite@value+1)^0,c
  1640  0016A8  ECAC  F010         	call	_soWrite	;wreg free
  1641  0016AC                     
  1642                           ;ssd.c: 72:             digitalWrite(PIN_D1,1);
  1643  0016AC  0E00               	movlw	0
  1644  0016AE  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1645  0016B0  0E19               	movlw	25
  1646  0016B2  6E01               	movwf	digitalWrite@pin^0,c
  1647  0016B4  0E00               	movlw	0
  1648  0016B6  6E04               	movwf	(digitalWrite@value+1)^0,c
  1649  0016B8  0E01               	movlw	1
  1650  0016BA  6E03               	movwf	digitalWrite@value^0,c
  1651  0016BC  ECB2  F008         	call	_digitalWrite	;wreg free
  1652  0016C0                     
  1653                           ;ssd.c: 73:             display = 2;
  1654  0016C0  0E02               	movlw	2
  1655  0016C2  6E35               	movwf	_display^0,c
  1656                           
  1657                           ;ssd.c: 74:             break;
  1658  0016C4  EFB5  F00B         	goto	l337
  1659  0016C8                     l2472:
  1660                           
  1661                           ;ssd.c: 77:             soWrite(valor[v2]);
  1662  0016C8  0E01               	movlw	low _valor
  1663  0016CA  2432               	addwf	_v2^0,w,c
  1664  0016CC  6EF6               	movwf	tblptrl,c
  1665  0016CE  6AF7               	clrf	tblptrh,c
  1666  0016D0  0E06               	movlw	high _valor
  1667  0016D2  22F7               	addwfc	tblptrh,f,c
  1668  0016D4                     	if	0	;There are less than 3 active tblptr bytes
  1669  0016D4                     	endif
  1670  0016D4  0008               	tblrd		*
  1671  0016D6  50F5               	movf	tablat,w,c
  1672  0016D8  6E07               	movwf	soWrite@value^0,c
  1673  0016DA  6A08               	clrf	(soWrite@value+1)^0,c
  1674  0016DC  ECAC  F010         	call	_soWrite	;wreg free
  1675  0016E0                     
  1676                           ;ssd.c: 78:             digitalWrite(PIN_D2,1);
  1677  0016E0  0E00               	movlw	0
  1678  0016E2  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1679  0016E4  0E1A               	movlw	26
  1680  0016E6  6E01               	movwf	digitalWrite@pin^0,c
  1681  0016E8  0E00               	movlw	0
  1682  0016EA  6E04               	movwf	(digitalWrite@value+1)^0,c
  1683  0016EC  0E01               	movlw	1
  1684  0016EE  6E03               	movwf	digitalWrite@value^0,c
  1685  0016F0  ECB2  F008         	call	_digitalWrite	;wreg free
  1686  0016F4                     
  1687                           ;ssd.c: 79:             display = 3;
  1688  0016F4  0E03               	movlw	3
  1689  0016F6  6E35               	movwf	_display^0,c
  1690                           
  1691                           ;ssd.c: 80:             break;
  1692  0016F8  EFB5  F00B         	goto	l337
  1693  0016FC                     l2478:
  1694                           
  1695                           ;ssd.c: 83:             soWrite(valor[v3]);
  1696  0016FC  0E01               	movlw	low _valor
  1697  0016FE  2431               	addwf	_v3^0,w,c
  1698  001700  6EF6               	movwf	tblptrl,c
  1699  001702  6AF7               	clrf	tblptrh,c
  1700  001704  0E06               	movlw	high _valor
  1701  001706  22F7               	addwfc	tblptrh,f,c
  1702  001708                     	if	0	;There are less than 3 active tblptr bytes
  1703  001708                     	endif
  1704  001708  0008               	tblrd		*
  1705  00170A  50F5               	movf	tablat,w,c
  1706  00170C  6E07               	movwf	soWrite@value^0,c
  1707  00170E  6A08               	clrf	(soWrite@value+1)^0,c
  1708  001710  ECAC  F010         	call	_soWrite	;wreg free
  1709  001714                     
  1710                           ;ssd.c: 84:             digitalWrite(PIN_D3,1);
  1711  001714  0E00               	movlw	0
  1712  001716  6E02               	movwf	(digitalWrite@pin+1)^0,c
  1713  001718  0E1B               	movlw	27
  1714  00171A  6E01               	movwf	digitalWrite@pin^0,c
  1715  00171C  0E00               	movlw	0
  1716  00171E  6E04               	movwf	(digitalWrite@value+1)^0,c
  1717  001720  0E01               	movlw	1
  1718  001722  6E03               	movwf	digitalWrite@value^0,c
  1719  001724  ECB2  F008         	call	_digitalWrite	;wreg free
  1720  001728                     l2482:
  1721                           
  1722                           ;ssd.c: 85:             display = 0;
  1723  001728  0E00               	movlw	0
  1724  00172A  6E35               	movwf	_display^0,c
  1725                           
  1726                           ;ssd.c: 86:             break;
  1727  00172C  EFB5  F00B         	goto	l337
  1728  001730                     l2488:
  1729  001730  5035               	movf	_display^0,w,c
  1730  001732  6E0A               	movwf	??_ssdUpdate^0,c
  1731  001734  6A0B               	clrf	(??_ssdUpdate+1)^0,c
  1732                           
  1733                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1734                           ; Switch size 1, requested type "simple"
  1735                           ; Number of cases is 1, Range of values is 0 to 0
  1736                           ; switch strategies available:
  1737                           ; Name         Instructions Cycles
  1738                           ; simple_byte            4     3 (average)
  1739                           ;	Chosen strategy is simple_byte
  1740  001736  500B               	movf	(??_ssdUpdate+1)^0,w,c
  1741  001738  0A00               	xorlw	0	; case 0
  1742  00173A  B4D8               	btfsc	status,2,c
  1743  00173C  EFA2  F00B         	goto	l3014
  1744  001740  EF94  F00B         	goto	l2482
  1745  001744                     l3014:
  1746                           
  1747                           ; Switch size 1, requested type "simple"
  1748                           ; Number of cases is 4, Range of values is 0 to 3
  1749                           ; switch strategies available:
  1750                           ; Name         Instructions Cycles
  1751                           ; simple_byte           13     7 (average)
  1752                           ;	Chosen strategy is simple_byte
  1753  001744  500A               	movf	??_ssdUpdate^0,w,c
  1754  001746  0A00               	xorlw	0	; case 0
  1755  001748  B4D8               	btfsc	status,2,c
  1756  00174A  EF30  F00B         	goto	l2460
  1757  00174E  0A01               	xorlw	1	; case 1
  1758  001750  B4D8               	btfsc	status,2,c
  1759  001752  EF4A  F00B         	goto	l2466
  1760  001756  0A03               	xorlw	3	; case 2
  1761  001758  B4D8               	btfsc	status,2,c
  1762  00175A  EF64  F00B         	goto	l2472
  1763  00175E  0A01               	xorlw	1	; case 3
  1764  001760  B4D8               	btfsc	status,2,c
  1765  001762  EF7E  F00B         	goto	l2478
  1766  001766  EF94  F00B         	goto	l2482
  1767  00176A                     l337:
  1768  00176A  0012               	return		;funcret
  1769  00176C                     __end_of_ssdUpdate:
  1770                           	callstack 0
  1771                           
  1772 ;; *************** function _ssdInit *****************
  1773 ;; Defined at:
  1774 ;;		line 94 in file "ssd.c"
  1775 ;; Parameters:    Size  Location     Type
  1776 ;;		None
  1777 ;; Auto vars:     Size  Location     Type
  1778 ;;		None
  1779 ;; Return value:  Size  Location     Type
  1780 ;;                  1    wreg      void 
  1781 ;; Registers used:
  1782 ;;		wreg, status,2, status,0, cstack
  1783 ;; Tracked objects:
  1784 ;;		On entry : 0/0
  1785 ;;		On exit  : 0/0
  1786 ;;		Unchanged: 0/0
  1787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1788 ;;      Params:         0       0       0       0       0       0       0
  1789 ;;      Locals:         0       0       0       0       0       0       0
  1790 ;;      Temps:          0       0       0       0       0       0       0
  1791 ;;      Totals:         0       0       0       0       0       0       0
  1792 ;;Total ram usage:        0 bytes
  1793 ;; Hardware stack levels used: 1
  1794 ;; Hardware stack levels required when called: 2
  1795 ;; This function calls:
  1796 ;;		_pinMode
  1797 ;;		_soInit
  1798 ;; This function is called by:
  1799 ;;		_main
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           
  1803                           	psect	text2
  1804  0020AC                     __ptext2:
  1805                           	callstack 0
  1806  0020AC                     _ssdInit:
  1807                           	callstack 28
  1808  0020AC                     
  1809                           ;ssd.c: 96:     pinMode(PIN_D0, 0);
  1810  0020AC  0E00               	movlw	0
  1811  0020AE  6E02               	movwf	(pinMode@pin+1)^0,c
  1812  0020B0  0E18               	movlw	24
  1813  0020B2  6E01               	movwf	pinMode@pin^0,c
  1814  0020B4  0E00               	movlw	0
  1815  0020B6  6E04               	movwf	(pinMode@type+1)^0,c
  1816  0020B8  0E00               	movlw	0
  1817  0020BA  6E03               	movwf	pinMode@type^0,c
  1818  0020BC  ECD9  F009         	call	_pinMode	;wreg free
  1819                           
  1820                           ;ssd.c: 97:     pinMode(PIN_D1, 0);
  1821  0020C0  0E00               	movlw	0
  1822  0020C2  6E02               	movwf	(pinMode@pin+1)^0,c
  1823  0020C4  0E19               	movlw	25
  1824  0020C6  6E01               	movwf	pinMode@pin^0,c
  1825  0020C8  0E00               	movlw	0
  1826  0020CA  6E04               	movwf	(pinMode@type+1)^0,c
  1827  0020CC  0E00               	movlw	0
  1828  0020CE  6E03               	movwf	pinMode@type^0,c
  1829  0020D0  ECD9  F009         	call	_pinMode	;wreg free
  1830                           
  1831                           ;ssd.c: 98:     pinMode(PIN_D2, 0);
  1832  0020D4  0E00               	movlw	0
  1833  0020D6  6E02               	movwf	(pinMode@pin+1)^0,c
  1834  0020D8  0E1A               	movlw	26
  1835  0020DA  6E01               	movwf	pinMode@pin^0,c
  1836  0020DC  0E00               	movlw	0
  1837  0020DE  6E04               	movwf	(pinMode@type+1)^0,c
  1838  0020E0  0E00               	movlw	0
  1839  0020E2  6E03               	movwf	pinMode@type^0,c
  1840  0020E4  ECD9  F009         	call	_pinMode	;wreg free
  1841                           
  1842                           ;ssd.c: 99:     pinMode(PIN_D3, 0);
  1843  0020E8  0E00               	movlw	0
  1844  0020EA  6E02               	movwf	(pinMode@pin+1)^0,c
  1845  0020EC  0E1B               	movlw	27
  1846  0020EE  6E01               	movwf	pinMode@pin^0,c
  1847  0020F0  0E00               	movlw	0
  1848  0020F2  6E04               	movwf	(pinMode@type+1)^0,c
  1849  0020F4  0E00               	movlw	0
  1850  0020F6  6E03               	movwf	pinMode@type^0,c
  1851  0020F8  ECD9  F009         	call	_pinMode	;wreg free
  1852                           
  1853                           ;ssd.c: 102:     soInit();
  1854  0020FC  EC18  F011         	call	_soInit	;wreg free
  1855  002100  0012               	return		;funcret
  1856  002102                     __end_of_ssdInit:
  1857                           	callstack 0
  1858                           
  1859 ;; *************** function _ssdDigit *****************
  1860 ;; Defined at:
  1861 ;;		line 34 in file "ssd.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  val             1    wreg     unsigned char 
  1864 ;;  pos             1   14[COMRAM] unsigned char 
  1865 ;; Auto vars:     Size  Location     Type
  1866 ;;  val             1   15[COMRAM] unsigned char 
  1867 ;; Return value:  Size  Location     Type
  1868 ;;                  1    wreg      void 
  1869 ;; Registers used:
  1870 ;;		wreg, status,2, status,0
  1871 ;; Tracked objects:
  1872 ;;		On entry : 0/0
  1873 ;;		On exit  : 0/0
  1874 ;;		Unchanged: 0/0
  1875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1876 ;;      Params:         1       0       0       0       0       0       0
  1877 ;;      Locals:         1       0       0       0       0       0       0
  1878 ;;      Temps:          0       0       0       0       0       0       0
  1879 ;;      Totals:         2       0       0       0       0       0       0
  1880 ;;Total ram usage:        2 bytes
  1881 ;; Hardware stack levels used: 1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_main
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  002054                     __ptext3:
  1891                           	callstack 0
  1892  002054                     _ssdDigit:
  1893                           	callstack 30
  1894                           
  1895                           ;incstack = 0
  1896                           ;ssdDigit@val stored from wreg
  1897  002054  6E10               	movwf	ssdDigit@val^0,c
  1898  002056                     
  1899                           ;ssd.c: 35:     if (pos == 0) {
  1900  002056  500F               	movf	ssdDigit@pos^0,w,c
  1901  002058  A4D8               	btfss	status,2,c
  1902  00205A  EF31  F010         	goto	u2661
  1903  00205E  EF33  F010         	goto	u2660
  1904  002062                     u2661:
  1905  002062  EF35  F010         	goto	l2446
  1906  002066                     u2660:
  1907  002066                     
  1908                           ;ssd.c: 36:         v0 = val;
  1909  002066  C010  F034         	movff	ssdDigit@val,_v0
  1910  00206A                     l2446:
  1911                           
  1912                           ;ssd.c: 38:     if (pos == 1) {
  1913  00206A  040F               	decf	ssdDigit@pos^0,w,c
  1914  00206C  A4D8               	btfss	status,2,c
  1915  00206E  EF3B  F010         	goto	u2671
  1916  002072  EF3D  F010         	goto	u2670
  1917  002076                     u2671:
  1918  002076  EF3F  F010         	goto	l2450
  1919  00207A                     u2670:
  1920  00207A                     
  1921                           ;ssd.c: 39:         v1 = val;
  1922  00207A  C010  F033         	movff	ssdDigit@val,_v1
  1923  00207E                     l2450:
  1924                           
  1925                           ;ssd.c: 41:     if (pos == 2) {
  1926  00207E  0E02               	movlw	2
  1927  002080  180F               	xorwf	ssdDigit@pos^0,w,c
  1928  002082  A4D8               	btfss	status,2,c
  1929  002084  EF46  F010         	goto	u2681
  1930  002088  EF48  F010         	goto	u2680
  1931  00208C                     u2681:
  1932  00208C  EF4A  F010         	goto	l2454
  1933  002090                     u2680:
  1934  002090                     
  1935                           ;ssd.c: 42:         v2 = val;
  1936  002090  C010  F032         	movff	ssdDigit@val,_v2
  1937  002094                     l2454:
  1938                           
  1939                           ;ssd.c: 44:     if (pos == 3) {
  1940  002094  0E03               	movlw	3
  1941  002096  180F               	xorwf	ssdDigit@pos^0,w,c
  1942  002098  A4D8               	btfss	status,2,c
  1943  00209A  EF51  F010         	goto	u2691
  1944  00209E  EF53  F010         	goto	u2690
  1945  0020A2                     u2691:
  1946  0020A2  EF55  F010         	goto	l327
  1947  0020A6                     u2690:
  1948  0020A6                     
  1949                           ;ssd.c: 45:         v3 = val;
  1950  0020A6  C010  F031         	movff	ssdDigit@val,_v3
  1951  0020AA                     l327:
  1952  0020AA  0012               	return		;funcret
  1953  0020AC                     __end_of_ssdDigit:
  1954                           	callstack 0
  1955                           
  1956 ;; *************** function _pwmSet *****************
  1957 ;; Defined at:
  1958 ;;		line 24 in file "pwm.c"
  1959 ;; Parameters:    Size  Location     Type
  1960 ;;  porcento        1    wreg     unsigned char 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  porcento        1    9[COMRAM] unsigned char 
  1963 ;;  val             2   10[COMRAM] unsigned int 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1973 ;;      Params:         0       0       0       0       0       0       0
  1974 ;;      Locals:         3       0       0       0       0       0       0
  1975 ;;      Temps:          2       0       0       0       0       0       0
  1976 ;;      Totals:         5       0       0       0       0       0       0
  1977 ;;Total ram usage:        5 bytes
  1978 ;; Hardware stack levels used: 1
  1979 ;; Hardware stack levels required when called: 1
  1980 ;; This function calls:
  1981 ;;		___lwdiv
  1982 ;;		___wmul
  1983 ;; This function is called by:
  1984 ;;		_main
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           	psect	text4
  1989  001F2C                     __ptext4:
  1990                           	callstack 0
  1991  001F2C                     _pwmSet:
  1992                           	callstack 29
  1993                           
  1994                           ;incstack = 0
  1995                           ;pwmSet@porcento stored from wreg
  1996  001F2C  6E0A               	movwf	pwmSet@porcento^0,c
  1997  001F2E                     
  1998                           ;pwm.c: 24: void pwmSet(unsigned char porcento);pwm.c: 25: {;pwm.c: 31:  unsigned int va
      +                          l = ((unsigned int)porcento) *(PR2+1);
  1999  001F2E  0E01               	movlw	1
  2000  001F30  24CB               	addwf	203,w,c	;volatile
  2001  001F32  6E01               	movwf	___wmul@multiplier^0,c
  2002  001F34  6A02               	clrf	(___wmul@multiplier+1)^0,c
  2003  001F36  0E00               	movlw	0
  2004  001F38  2202               	addwfc	(___wmul@multiplier+1)^0,f,c
  2005  001F3A  C00A  F003         	movff	pwmSet@porcento,___wmul@multiplicand
  2006  001F3E  6A04               	clrf	(___wmul@multiplicand+1)^0,c
  2007  001F40  ECAE  F011         	call	___wmul	;wreg free
  2008  001F44  C001  F00B         	movff	?___wmul,pwmSet@val
  2009  001F48  C002  F00C         	movff	?___wmul+1,pwmSet@val+1
  2010  001F4C                     
  2011                           ;pwm.c: 33:     val = val / 25;
  2012  001F4C  C00B  F001         	movff	pwmSet@val,___lwdiv@dividend
  2013  001F50  C00C  F002         	movff	pwmSet@val+1,___lwdiv@dividend+1
  2014  001F54  0E00               	movlw	0
  2015  001F56  6E04               	movwf	(___lwdiv@divisor+1)^0,c
  2016  001F58  0E19               	movlw	25
  2017  001F5A  6E03               	movwf	___lwdiv@divisor^0,c
  2018  001F5C  EC22  F00F         	call	___lwdiv	;wreg free
  2019  001F60  C001  F00B         	movff	?___lwdiv,pwmSet@val
  2020  001F64  C002  F00C         	movff	?___lwdiv+1,pwmSet@val+1
  2021  001F68                     
  2022                           ;pwm.c: 35:  val &= 0x03ff;
  2023  001F68  0EFF               	movlw	255
  2024  001F6A  160B               	andwf	pwmSet@val^0,f,c
  2025  001F6C  0E03               	movlw	3
  2026  001F6E  160C               	andwf	(pwmSet@val+1)^0,f,c
  2027  001F70                     
  2028                           ;pwm.c: 37:  CCPR2L = val >> 2;
  2029  001F70  C00B  F008         	movff	pwmSet@val,??_pwmSet
  2030  001F74  C00C  F009         	movff	pwmSet@val+1,??_pwmSet+1
  2031  001F78  90D8               	bcf	status,0,c
  2032  001F7A  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2033  001F7C  3208               	rrcf	??_pwmSet^0,f,c
  2034  001F7E  90D8               	bcf	status,0,c
  2035  001F80  3209               	rrcf	(??_pwmSet+1)^0,f,c
  2036  001F82  3208               	rrcf	??_pwmSet^0,f,c
  2037  001F84  5008               	movf	??_pwmSet^0,w,c
  2038  001F86  6EBB               	movwf	187,c	;volatile
  2039  001F88                     
  2040                           ;pwm.c: 39:  CCP2CON |= (val & 0x0003) << 4;
  2041  001F88  C00B  F008         	movff	pwmSet@val,??_pwmSet	;volatile
  2042  001F8C  0E03               	movlw	3
  2043  001F8E  1608               	andwf	??_pwmSet^0,f,c
  2044  001F90  3808               	swapf	??_pwmSet^0,w,c
  2045  001F92  0BF0               	andlw	240
  2046  001F94  12BA               	iorwf	186,f,c	;volatile
  2047  001F96  0012               	return		;funcret
  2048  001F98                     __end_of_pwmSet:
  2049                           	callstack 0
  2050                           
  2051 ;; *************** function ___wmul *****************
  2052 ;; Defined at:
  2053 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  2054 ;; Parameters:    Size  Location     Type
  2055 ;;  multiplier      2    0[COMRAM] unsigned int 
  2056 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2057 ;; Auto vars:     Size  Location     Type
  2058 ;;  product         2    4[COMRAM] unsigned int 
  2059 ;; Return value:  Size  Location     Type
  2060 ;;                  2    0[COMRAM] unsigned int 
  2061 ;; Registers used:
  2062 ;;		wreg, status,2, status,0, prodl, prodh
  2063 ;; Tracked objects:
  2064 ;;		On entry : 0/0
  2065 ;;		On exit  : 0/0
  2066 ;;		Unchanged: 0/0
  2067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2068 ;;      Params:         4       0       0       0       0       0       0
  2069 ;;      Locals:         2       0       0       0       0       0       0
  2070 ;;      Temps:          0       0       0       0       0       0       0
  2071 ;;      Totals:         6       0       0       0       0       0       0
  2072 ;;Total ram usage:        6 bytes
  2073 ;; Hardware stack levels used: 1
  2074 ;; This function calls:
  2075 ;;		Nothing
  2076 ;; This function is called by:
  2077 ;;		_pwmSet
  2078 ;; This function uses a non-reentrant model
  2079 ;;
  2080                           
  2081                           	psect	text5
  2082  00235C                     __ptext5:
  2083                           	callstack 0
  2084  00235C                     ___wmul:
  2085                           	callstack 29
  2086  00235C  5001               	movf	___wmul@multiplier^0,w,c
  2087  00235E  0203               	mulwf	___wmul@multiplicand^0,c
  2088  002360  CFF3 F005          	movff	prodl,___wmul@product
  2089  002364  CFF4 F006          	movff	prodh,___wmul@product+1
  2090  002368  5001               	movf	___wmul@multiplier^0,w,c
  2091  00236A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  2092  00236C  50F3               	movf	243,w,c
  2093  00236E  2606               	addwf	(___wmul@product+1)^0,f,c
  2094  002370  5002               	movf	(___wmul@multiplier+1)^0,w,c
  2095  002372  0203               	mulwf	___wmul@multiplicand^0,c
  2096  002374  50F3               	movf	243,w,c
  2097  002376  2606               	addwf	(___wmul@product+1)^0,f,c
  2098  002378  C005  F001         	movff	___wmul@product,?___wmul
  2099  00237C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2100  002380  0012               	return		;funcret
  2101  002382                     __end_of___wmul:
  2102                           	callstack 0
  2103                           
  2104 ;; *************** function ___lwdiv *****************
  2105 ;; Defined at:
  2106 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\lwdiv.c"
  2107 ;; Parameters:    Size  Location     Type
  2108 ;;  dividend        2    0[COMRAM] unsigned int 
  2109 ;;  divisor         2    2[COMRAM] unsigned int 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  quotient        2    4[COMRAM] unsigned int 
  2112 ;;  counter         1    6[COMRAM] unsigned char 
  2113 ;; Return value:  Size  Location     Type
  2114 ;;                  2    0[COMRAM] unsigned int 
  2115 ;; Registers used:
  2116 ;;		wreg, status,2, status,0
  2117 ;; Tracked objects:
  2118 ;;		On entry : 0/0
  2119 ;;		On exit  : 0/0
  2120 ;;		Unchanged: 0/0
  2121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2122 ;;      Params:         4       0       0       0       0       0       0
  2123 ;;      Locals:         3       0       0       0       0       0       0
  2124 ;;      Temps:          0       0       0       0       0       0       0
  2125 ;;      Totals:         7       0       0       0       0       0       0
  2126 ;;Total ram usage:        7 bytes
  2127 ;; Hardware stack levels used: 1
  2128 ;; This function calls:
  2129 ;;		Nothing
  2130 ;; This function is called by:
  2131 ;;		_pwmSet
  2132 ;; This function uses a non-reentrant model
  2133 ;;
  2134                           
  2135                           	psect	text6
  2136  001E44                     __ptext6:
  2137                           	callstack 0
  2138  001E44                     ___lwdiv:
  2139                           	callstack 29
  2140  001E44  0E00               	movlw	0
  2141  001E46  6E06               	movwf	(___lwdiv@quotient+1)^0,c
  2142  001E48  0E00               	movlw	0
  2143  001E4A  6E05               	movwf	___lwdiv@quotient^0,c
  2144  001E4C  5003               	movf	___lwdiv@divisor^0,w,c
  2145  001E4E  1004               	iorwf	(___lwdiv@divisor+1)^0,w,c
  2146  001E50  B4D8               	btfsc	status,2,c
  2147  001E52  EF2D  F00F         	goto	u2511
  2148  001E56  EF2F  F00F         	goto	u2510
  2149  001E5A                     u2511:
  2150  001E5A  EF57  F00F         	goto	l844
  2151  001E5E                     u2510:
  2152  001E5E  0E01               	movlw	1
  2153  001E60  6E07               	movwf	___lwdiv@counter^0,c
  2154  001E62  EF37  F00F         	goto	l2336
  2155  001E66                     l2334:
  2156  001E66  90D8               	bcf	status,0,c
  2157  001E68  3603               	rlcf	___lwdiv@divisor^0,f,c
  2158  001E6A  3604               	rlcf	(___lwdiv@divisor+1)^0,f,c
  2159  001E6C  2A07               	incf	___lwdiv@counter^0,f,c
  2160  001E6E                     l2336:
  2161  001E6E  AE04               	btfss	(___lwdiv@divisor+1)^0,7,c
  2162  001E70  EF3C  F00F         	goto	u2521
  2163  001E74  EF3E  F00F         	goto	u2520
  2164  001E78                     u2521:
  2165  001E78  EF33  F00F         	goto	l2334
  2166  001E7C                     u2520:
  2167  001E7C                     l2338:
  2168  001E7C  90D8               	bcf	status,0,c
  2169  001E7E  3605               	rlcf	___lwdiv@quotient^0,f,c
  2170  001E80  3606               	rlcf	(___lwdiv@quotient+1)^0,f,c
  2171  001E82  5003               	movf	___lwdiv@divisor^0,w,c
  2172  001E84  5C01               	subwf	___lwdiv@dividend^0,w,c
  2173  001E86  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2174  001E88  5802               	subwfb	(___lwdiv@dividend+1)^0,w,c
  2175  001E8A  A0D8               	btfss	status,0,c
  2176  001E8C  EF4A  F00F         	goto	u2531
  2177  001E90  EF4C  F00F         	goto	u2530
  2178  001E94                     u2531:
  2179  001E94  EF51  F00F         	goto	l2346
  2180  001E98                     u2530:
  2181  001E98  5003               	movf	___lwdiv@divisor^0,w,c
  2182  001E9A  5E01               	subwf	___lwdiv@dividend^0,f,c
  2183  001E9C  5004               	movf	(___lwdiv@divisor+1)^0,w,c
  2184  001E9E  5A02               	subwfb	(___lwdiv@dividend+1)^0,f,c
  2185  001EA0  8005               	bsf	___lwdiv@quotient^0,0,c
  2186  001EA2                     l2346:
  2187  001EA2  90D8               	bcf	status,0,c
  2188  001EA4  3204               	rrcf	(___lwdiv@divisor+1)^0,f,c
  2189  001EA6  3203               	rrcf	___lwdiv@divisor^0,f,c
  2190  001EA8  2E07               	decfsz	___lwdiv@counter^0,f,c
  2191  001EAA  EF3E  F00F         	goto	l2338
  2192  001EAE                     l844:
  2193  001EAE  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2194  001EB2  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2195  001EB6  0012               	return		;funcret
  2196  001EB8                     __end_of___lwdiv:
  2197                           	callstack 0
  2198                           
  2199 ;; *************** function _pwmInit *****************
  2200 ;; Defined at:
  2201 ;;		line 51 in file "pwm.c"
  2202 ;; Parameters:    Size  Location     Type
  2203 ;;		None
  2204 ;; Auto vars:     Size  Location     Type
  2205 ;;		None
  2206 ;; Return value:  Size  Location     Type
  2207 ;;                  1    wreg      void 
  2208 ;; Registers used:
  2209 ;;		wreg, status,2, status,0, cstack
  2210 ;; Tracked objects:
  2211 ;;		On entry : 0/0
  2212 ;;		On exit  : 0/0
  2213 ;;		Unchanged: 0/0
  2214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2215 ;;      Params:         0       0       0       0       0       0       0
  2216 ;;      Locals:         0       0       0       0       0       0       0
  2217 ;;      Temps:          0       0       0       0       0       0       0
  2218 ;;      Totals:         0       0       0       0       0       0       0
  2219 ;;Total ram usage:        0 bytes
  2220 ;; Hardware stack levels used: 1
  2221 ;; Hardware stack levels required when called: 2
  2222 ;; This function calls:
  2223 ;;		_pwmFrequency
  2224 ;; This function is called by:
  2225 ;;		_main
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           	psect	text7
  2230  00240A                     __ptext7:
  2231                           	callstack 0
  2232  00240A                     _pwmInit:
  2233                           	callstack 28
  2234  00240A                     
  2235                           ;pwm.c: 53:  ((TRISC) &= ~(1<<(1)));
  2236  00240A  9294               	bcf	148,1,c	;volatile
  2237  00240C                     
  2238                           ;pwm.c: 55:  T2CON |= 0b00000011;
  2239  00240C  0E03               	movlw	3
  2240  00240E  12CA               	iorwf	202,f,c	;volatile
  2241  002410                     
  2242                           ;pwm.c: 56:  ((T2CON) |= (1<<(2)));
  2243  002410  84CA               	bsf	202,2,c	;volatile
  2244  002412                     
  2245                           ;pwm.c: 58:  CCP2CON = 0b00001100;
  2246  002412  0E0C               	movlw	12
  2247  002414  6EBA               	movwf	186,c	;volatile
  2248  002416                     
  2249                           ;pwm.c: 60:     pwmFrequency(100);
  2250  002416  0E00               	movlw	0
  2251  002418  6E10               	movwf	(pwmFrequency@freq+1)^0,c
  2252  00241A  0E64               	movlw	100
  2253  00241C  6E0F               	movwf	pwmFrequency@freq^0,c
  2254  00241E  ECC1  F011         	call	_pwmFrequency	;wreg free
  2255  002422  0012               	return		;funcret
  2256  002424                     __end_of_pwmInit:
  2257                           	callstack 0
  2258                           
  2259 ;; *************** function _pwmFrequency *****************
  2260 ;; Defined at:
  2261 ;;		line 44 in file "pwm.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  freq            2   14[COMRAM] unsigned int 
  2264 ;; Auto vars:     Size  Location     Type
  2265 ;;		None
  2266 ;; Return value:  Size  Location     Type
  2267 ;;                  1    wreg      void 
  2268 ;; Registers used:
  2269 ;;		wreg, status,2, status,0, cstack
  2270 ;; Tracked objects:
  2271 ;;		On entry : 0/0
  2272 ;;		On exit  : 0/0
  2273 ;;		Unchanged: 0/0
  2274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2275 ;;      Params:         2       0       0       0       0       0       0
  2276 ;;      Locals:         0       0       0       0       0       0       0
  2277 ;;      Temps:          0       0       0       0       0       0       0
  2278 ;;      Totals:         2       0       0       0       0       0       0
  2279 ;;Total ram usage:        2 bytes
  2280 ;; Hardware stack levels used: 1
  2281 ;; Hardware stack levels required when called: 1
  2282 ;; This function calls:
  2283 ;;		___aldiv
  2284 ;; This function is called by:
  2285 ;;		_pwmInit
  2286 ;; This function uses a non-reentrant model
  2287 ;;
  2288                           
  2289                           	psect	text8
  2290  002382                     __ptext8:
  2291                           	callstack 0
  2292  002382                     _pwmFrequency:
  2293                           	callstack 28
  2294  002382                     
  2295                           ;pwm.c: 44: void pwmFrequency(unsigned int freq);pwm.c: 45: {;pwm.c: 48:  PR2 = (125000l
      +                          /(freq)) - 1;
  2296  002382  0E48               	movlw	72
  2297  002384  6E01               	movwf	___aldiv@dividend^0,c
  2298  002386  0EE8               	movlw	232
  2299  002388  6E02               	movwf	(___aldiv@dividend+1)^0,c
  2300  00238A  0E01               	movlw	1
  2301  00238C  6E03               	movwf	(___aldiv@dividend+2)^0,c
  2302  00238E  0E00               	movlw	0
  2303  002390  6E04               	movwf	(___aldiv@dividend+3)^0,c
  2304  002392  C00F  F005         	movff	pwmFrequency@freq,___aldiv@divisor
  2305  002396  C010  F006         	movff	pwmFrequency@freq+1,___aldiv@divisor+1
  2306  00239A  6A07               	clrf	(___aldiv@divisor+2)^0,c
  2307  00239C  6A08               	clrf	(___aldiv@divisor+3)^0,c
  2308  00239E  EC06  F00D         	call	___aldiv	;wreg free
  2309  0023A2  0401               	decf	?___aldiv^0,w,c
  2310  0023A4  6ECB               	movwf	203,c	;volatile
  2311  0023A6  0012               	return		;funcret
  2312  0023A8                     __end_of_pwmFrequency:
  2313                           	callstack 0
  2314                           
  2315 ;; *************** function ___aldiv *****************
  2316 ;; Defined at:
  2317 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\aldiv.c"
  2318 ;; Parameters:    Size  Location     Type
  2319 ;;  dividend        4    0[COMRAM] long 
  2320 ;;  divisor         4    4[COMRAM] long 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  quotient        4   10[COMRAM] long 
  2323 ;;  sign            1    9[COMRAM] unsigned char 
  2324 ;;  counter         1    8[COMRAM] unsigned char 
  2325 ;; Return value:  Size  Location     Type
  2326 ;;                  4    0[COMRAM] long 
  2327 ;; Registers used:
  2328 ;;		wreg, status,2, status,0
  2329 ;; Tracked objects:
  2330 ;;		On entry : 0/0
  2331 ;;		On exit  : 0/0
  2332 ;;		Unchanged: 0/0
  2333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2334 ;;      Params:         8       0       0       0       0       0       0
  2335 ;;      Locals:         6       0       0       0       0       0       0
  2336 ;;      Temps:          0       0       0       0       0       0       0
  2337 ;;      Totals:        14       0       0       0       0       0       0
  2338 ;;Total ram usage:       14 bytes
  2339 ;; Hardware stack levels used: 1
  2340 ;; This function calls:
  2341 ;;		Nothing
  2342 ;; This function is called by:
  2343 ;;		_pwmFrequency
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text9
  2348  001A0C                     __ptext9:
  2349                           	callstack 0
  2350  001A0C                     ___aldiv:
  2351                           	callstack 28
  2352  001A0C  0E00               	movlw	0
  2353  001A0E  6E0A               	movwf	___aldiv@sign^0,c
  2354  001A10  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2355  001A12  EF0F  F00D         	goto	u2230
  2356  001A16  EF0D  F00D         	goto	u2231
  2357  001A1A                     u2231:
  2358  001A1A  EF19  F00D         	goto	l2156
  2359  001A1E                     u2230:
  2360  001A1E  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2361  001A20  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2362  001A22  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2363  001A24  6C05               	negf	___aldiv@divisor^0,c
  2364  001A26  0E00               	movlw	0
  2365  001A28  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2366  001A2A  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2367  001A2C  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2368  001A2E  0E01               	movlw	1
  2369  001A30  6E0A               	movwf	___aldiv@sign^0,c
  2370  001A32                     l2156:
  2371  001A32  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2372  001A34  EF20  F00D         	goto	u2240
  2373  001A38  EF1E  F00D         	goto	u2241
  2374  001A3C                     u2241:
  2375  001A3C  EF2A  F00D         	goto	l2162
  2376  001A40                     u2240:
  2377  001A40  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2378  001A42  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2379  001A44  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2380  001A46  6C01               	negf	___aldiv@dividend^0,c
  2381  001A48  0E00               	movlw	0
  2382  001A4A  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2383  001A4C  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2384  001A4E  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2385  001A50  0E01               	movlw	1
  2386  001A52  1A0A               	xorwf	___aldiv@sign^0,f,c
  2387  001A54                     l2162:
  2388  001A54  0E00               	movlw	0
  2389  001A56  6E0B               	movwf	___aldiv@quotient^0,c
  2390  001A58  0E00               	movlw	0
  2391  001A5A  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2392  001A5C  0E00               	movlw	0
  2393  001A5E  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2394  001A60  0E00               	movlw	0
  2395  001A62  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2396  001A64  5005               	movf	___aldiv@divisor^0,w,c
  2397  001A66  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2398  001A68  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2399  001A6A  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2400  001A6C  B4D8               	btfsc	status,2,c
  2401  001A6E  EF3B  F00D         	goto	u2251
  2402  001A72  EF3D  F00D         	goto	u2250
  2403  001A76                     u2251:
  2404  001A76  EF73  F00D         	goto	l2184
  2405  001A7A                     u2250:
  2406  001A7A  0E01               	movlw	1
  2407  001A7C  6E09               	movwf	___aldiv@counter^0,c
  2408  001A7E  EF47  F00D         	goto	l2170
  2409  001A82                     l2168:
  2410  001A82  90D8               	bcf	status,0,c
  2411  001A84  3605               	rlcf	___aldiv@divisor^0,f,c
  2412  001A86  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2413  001A88  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2414  001A8A  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2415  001A8C  2A09               	incf	___aldiv@counter^0,f,c
  2416  001A8E                     l2170:
  2417  001A8E  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2418  001A90  EF4C  F00D         	goto	u2261
  2419  001A94  EF4E  F00D         	goto	u2260
  2420  001A98                     u2261:
  2421  001A98  EF41  F00D         	goto	l2168
  2422  001A9C                     u2260:
  2423  001A9C                     l2172:
  2424  001A9C  90D8               	bcf	status,0,c
  2425  001A9E  360B               	rlcf	___aldiv@quotient^0,f,c
  2426  001AA0  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2427  001AA2  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2428  001AA4  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2429  001AA6  5005               	movf	___aldiv@divisor^0,w,c
  2430  001AA8  5C01               	subwf	___aldiv@dividend^0,w,c
  2431  001AAA  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2432  001AAC  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2433  001AAE  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2434  001AB0  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2435  001AB2  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2436  001AB4  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2437  001AB6  A0D8               	btfss	status,0,c
  2438  001AB8  EF60  F00D         	goto	u2271
  2439  001ABC  EF62  F00D         	goto	u2270
  2440  001AC0                     u2271:
  2441  001AC0  EF6B  F00D         	goto	l2180
  2442  001AC4                     u2270:
  2443  001AC4  5005               	movf	___aldiv@divisor^0,w,c
  2444  001AC6  5E01               	subwf	___aldiv@dividend^0,f,c
  2445  001AC8  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2446  001ACA  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2447  001ACC  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2448  001ACE  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2449  001AD0  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2450  001AD2  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2451  001AD4  800B               	bsf	___aldiv@quotient^0,0,c
  2452  001AD6                     l2180:
  2453  001AD6  90D8               	bcf	status,0,c
  2454  001AD8  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2455  001ADA  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2456  001ADC  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2457  001ADE  3205               	rrcf	___aldiv@divisor^0,f,c
  2458  001AE0  2E09               	decfsz	___aldiv@counter^0,f,c
  2459  001AE2  EF4E  F00D         	goto	l2172
  2460  001AE6                     l2184:
  2461  001AE6  500A               	movf	___aldiv@sign^0,w,c
  2462  001AE8  B4D8               	btfsc	status,2,c
  2463  001AEA  EF79  F00D         	goto	u2281
  2464  001AEE  EF7B  F00D         	goto	u2280
  2465  001AF2                     u2281:
  2466  001AF2  EF83  F00D         	goto	l2188
  2467  001AF6                     u2280:
  2468  001AF6  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2469  001AF8  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2470  001AFA  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2471  001AFC  6C0B               	negf	___aldiv@quotient^0,c
  2472  001AFE  0E00               	movlw	0
  2473  001B00  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2474  001B02  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2475  001B04  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2476  001B06                     l2188:
  2477  001B06  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2478  001B0A  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2479  001B0E  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2480  001B12  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2481  001B16  0012               	return		;funcret
  2482  001B18                     __end_of___aldiv:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _lcdString *****************
  2486 ;; Defined at:
  2487 ;;		line 57 in file "lcd.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  msg             2   14[COMRAM] PTR unsigned char 
  2490 ;;		 -> STR_5(13), STR_4(10), STR_3(12), STR_2(12), 
  2491 ;;		 -> STR_1(13), 
  2492 ;; Auto vars:     Size  Location     Type
  2493 ;;  i               2   18[COMRAM] int 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      void 
  2496 ;; Registers used:
  2497 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2503 ;;      Params:         2       0       0       0       0       0       0
  2504 ;;      Locals:         2       0       0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0
  2506 ;;      Totals:         6       0       0       0       0       0       0
  2507 ;;Total ram usage:        6 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 5
  2510 ;; This function calls:
  2511 ;;		_lcdChar
  2512 ;; This function is called by:
  2513 ;;		_main
  2514 ;; This function uses a non-reentrant model
  2515 ;;
  2516                           
  2517                           	psect	text10
  2518  002102                     __ptext10:
  2519                           	callstack 0
  2520  002102                     _lcdString:
  2521                           	callstack 25
  2522  002102                     
  2523                           ;lcd.c: 58:  int i = 0;
  2524  002102  0E00               	movlw	0
  2525  002104  6E14               	movwf	(lcdString@i+1)^0,c
  2526  002106  0E00               	movlw	0
  2527  002108  6E13               	movwf	lcdString@i^0,c
  2528                           
  2529                           ;lcd.c: 59:  while (msg[i] != 0) {
  2530  00210A  EF97  F010         	goto	l2402
  2531  00210E                     l2398:
  2532                           
  2533                           ;lcd.c: 60:   lcdChar(msg[i]);
  2534  00210E  5013               	movf	lcdString@i^0,w,c
  2535  002110  240F               	addwf	lcdString@msg^0,w,c
  2536  002112  6E11               	movwf	??_lcdString^0,c
  2537  002114  5014               	movf	(lcdString@i+1)^0,w,c
  2538  002116  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2539  002118  6E12               	movwf	(??_lcdString+1)^0,c
  2540  00211A  C011  FFF6         	movff	??_lcdString,tblptrl
  2541  00211E  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2542  002122                     	if	0	;tblptru may be non-zero
  2543  002122                     	endif
  2544  002122                     	if	0	;tblptru may be non-zero
  2545  002122                     	endif
  2546  002122  0008               	tblrd		*
  2547  002124  50F5               	movf	tablat,w,c
  2548  002126  ECE7  F011         	call	_lcdChar
  2549  00212A                     
  2550                           ;lcd.c: 61:   i++;
  2551  00212A  4A13               	infsnz	lcdString@i^0,f,c
  2552  00212C  2A14               	incf	(lcdString@i+1)^0,f,c
  2553  00212E                     l2402:
  2554                           
  2555                           ;lcd.c: 59:  while (msg[i] != 0) {
  2556  00212E  5013               	movf	lcdString@i^0,w,c
  2557  002130  240F               	addwf	lcdString@msg^0,w,c
  2558  002132  6E11               	movwf	??_lcdString^0,c
  2559  002134  5014               	movf	(lcdString@i+1)^0,w,c
  2560  002136  2010               	addwfc	(lcdString@msg+1)^0,w,c
  2561  002138  6E12               	movwf	(??_lcdString+1)^0,c
  2562  00213A  C011  FFF6         	movff	??_lcdString,tblptrl
  2563  00213E  C012  FFF7         	movff	??_lcdString+1,tblptrh
  2564  002142                     	if	0	;tblptru may be non-zero
  2565  002142                     	endif
  2566  002142                     	if	0	;tblptru may be non-zero
  2567  002142                     	endif
  2568  002142  0008               	tblrd		*
  2569  002144  50F5               	movf	tablat,w,c
  2570  002146  0900               	iorlw	0
  2571  002148  A4D8               	btfss	status,2,c
  2572  00214A  EFA9  F010         	goto	u2561
  2573  00214E  EFAB  F010         	goto	u2560
  2574  002152                     u2561:
  2575  002152  EF87  F010         	goto	l2398
  2576  002156                     u2560:
  2577  002156  0012               	return		;funcret
  2578  002158                     __end_of_lcdString:
  2579                           	callstack 0
  2580                           
  2581 ;; *************** function _lcdPosition *****************
  2582 ;; Defined at:
  2583 ;;		line 44 in file "lcd.c"
  2584 ;; Parameters:    Size  Location     Type
  2585 ;;  line            1    wreg     unsigned char 
  2586 ;;  col             1   14[COMRAM] unsigned char 
  2587 ;; Auto vars:     Size  Location     Type
  2588 ;;  line            1   15[COMRAM] unsigned char 
  2589 ;; Return value:  Size  Location     Type
  2590 ;;                  1    wreg      void 
  2591 ;; Registers used:
  2592 ;;		wreg, status,2, status,0, cstack
  2593 ;; Tracked objects:
  2594 ;;		On entry : 0/0
  2595 ;;		On exit  : 0/0
  2596 ;;		Unchanged: 0/0
  2597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2598 ;;      Params:         1       0       0       0       0       0       0
  2599 ;;      Locals:         1       0       0       0       0       0       0
  2600 ;;      Temps:          0       0       0       0       0       0       0
  2601 ;;      Totals:         2       0       0       0       0       0       0
  2602 ;;Total ram usage:        2 bytes
  2603 ;; Hardware stack levels used: 1
  2604 ;; Hardware stack levels required when called: 5
  2605 ;; This function calls:
  2606 ;;		_lcdCommand
  2607 ;; This function is called by:
  2608 ;;		_main
  2609 ;; This function uses a non-reentrant model
  2610 ;;
  2611                           
  2612                           	psect	text11
  2613  00226E                     __ptext11:
  2614                           	callstack 0
  2615  00226E                     _lcdPosition:
  2616                           	callstack 25
  2617                           
  2618                           ;incstack = 0
  2619                           ;lcdPosition@line stored from wreg
  2620  00226E  6E10               	movwf	lcdPosition@line^0,c
  2621  002270                     
  2622                           ;lcd.c: 45:  if (line == 0) {
  2623  002270  5010               	movf	lcdPosition@line^0,w,c
  2624  002272  A4D8               	btfss	status,2,c
  2625  002274  EF3E  F011         	goto	u2541
  2626  002278  EF40  F011         	goto	u2540
  2627  00227C                     u2541:
  2628  00227C  EF45  F011         	goto	l2392
  2629  002280                     u2540:
  2630  002280                     
  2631                           ;lcd.c: 46:   lcdCommand(0x80 + (col % 16));
  2632  002280  500F               	movf	lcdPosition@col^0,w,c
  2633  002282  0B0F               	andlw	15
  2634  002284  0F80               	addlw	128
  2635  002286  ECF6  F011         	call	_lcdCommand
  2636  00228A                     l2392:
  2637                           
  2638                           ;lcd.c: 48:  if (line == 1) {
  2639  00228A  0410               	decf	lcdPosition@line^0,w,c
  2640  00228C  A4D8               	btfss	status,2,c
  2641  00228E  EF4B  F011         	goto	u2551
  2642  002292  EF4D  F011         	goto	u2550
  2643  002296                     u2551:
  2644  002296  EF52  F011         	goto	l245
  2645  00229A                     u2550:
  2646  00229A                     
  2647                           ;lcd.c: 49:   lcdCommand(0xC0 + (col % 16));
  2648  00229A  500F               	movf	lcdPosition@col^0,w,c
  2649  00229C  0B0F               	andlw	15
  2650  00229E  0FC0               	addlw	192
  2651  0022A0  ECF6  F011         	call	_lcdCommand
  2652  0022A4                     l245:
  2653  0022A4  0012               	return		;funcret
  2654  0022A6                     __end_of_lcdPosition:
  2655                           	callstack 0
  2656                           
  2657 ;; *************** function _lcdNumber *****************
  2658 ;; Defined at:
  2659 ;;		line 64 in file "lcd.c"
  2660 ;; Parameters:    Size  Location     Type
  2661 ;;  value           2   14[COMRAM] int 
  2662 ;; Auto vars:     Size  Location     Type
  2663 ;;  i               2   16[COMRAM] int 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  1    wreg      void 
  2666 ;; Registers used:
  2667 ;;		wreg, status,2, status,0, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2673 ;;      Params:         2       0       0       0       0       0       0
  2674 ;;      Locals:         2       0       0       0       0       0       0
  2675 ;;      Temps:          0       0       0       0       0       0       0
  2676 ;;      Totals:         4       0       0       0       0       0       0
  2677 ;;Total ram usage:        4 bytes
  2678 ;; Hardware stack levels used: 1
  2679 ;; Hardware stack levels required when called: 5
  2680 ;; This function calls:
  2681 ;;		___awdiv
  2682 ;;		___awmod
  2683 ;;		_lcdChar
  2684 ;; This function is called by:
  2685 ;;		_main
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           	psect	text12
  2690  001EB8                     __ptext12:
  2691                           	callstack 0
  2692  001EB8                     _lcdNumber:
  2693                           	callstack 25
  2694  001EB8                     
  2695                           ;lcd.c: 65:  int i = 10000;
  2696  001EB8  0E27               	movlw	39
  2697  001EBA  6E12               	movwf	(lcdNumber@i+1)^0,c
  2698  001EBC  0E10               	movlw	16
  2699  001EBE  6E11               	movwf	lcdNumber@i^0,c
  2700                           
  2701                           ;lcd.c: 66:  while (i > 0) {
  2702  001EC0  EF88  F00F         	goto	l2438
  2703  001EC4                     l2436:
  2704                           
  2705                           ;lcd.c: 67:   lcdChar((value / i) % 10 + 48);
  2706  001EC4  C011  F003         	movff	lcdNumber@i,___awdiv@divisor
  2707  001EC8  C012  F004         	movff	lcdNumber@i+1,___awdiv@divisor+1
  2708  001ECC  C00F  F001         	movff	lcdNumber@value,___awdiv@dividend
  2709  001ED0  C010  F002         	movff	lcdNumber@value+1,___awdiv@dividend+1
  2710  001ED4  EC0E  F00E         	call	___awdiv	;wreg free
  2711  001ED8  C001  F009         	movff	?___awdiv,___awmod@dividend
  2712  001EDC  C002  F00A         	movff	?___awdiv+1,___awmod@dividend+1
  2713  001EE0  0E00               	movlw	0
  2714  001EE2  6E0C               	movwf	(___awmod@divisor+1)^0,c
  2715  001EE4  0E0A               	movlw	10
  2716  001EE6  6E0B               	movwf	___awmod@divisor^0,c
  2717  001EE8  ECCA  F00E         	call	___awmod	;wreg free
  2718  001EEC  5009               	movf	?___awmod^0,w,c
  2719  001EEE  0F30               	addlw	48
  2720  001EF0  ECE7  F011         	call	_lcdChar
  2721                           
  2722                           ;lcd.c: 68:   i /= 10;
  2723  001EF4  C011  F001         	movff	lcdNumber@i,___awdiv@dividend
  2724  001EF8  C012  F002         	movff	lcdNumber@i+1,___awdiv@dividend+1
  2725  001EFC  0E00               	movlw	0
  2726  001EFE  6E04               	movwf	(___awdiv@divisor+1)^0,c
  2727  001F00  0E0A               	movlw	10
  2728  001F02  6E03               	movwf	___awdiv@divisor^0,c
  2729  001F04  EC0E  F00E         	call	___awdiv	;wreg free
  2730  001F08  C001  F011         	movff	?___awdiv,lcdNumber@i
  2731  001F0C  C002  F012         	movff	?___awdiv+1,lcdNumber@i+1
  2732  001F10                     l2438:
  2733                           
  2734                           ;lcd.c: 66:  while (i > 0) {
  2735  001F10  BE12               	btfsc	(lcdNumber@i+1)^0,7,c
  2736  001F12  EF95  F00F         	goto	u2650
  2737  001F16  5012               	movf	(lcdNumber@i+1)^0,w,c
  2738  001F18  E106               	bnz	u2651
  2739  001F1A  0411               	decf	lcdNumber@i^0,w,c
  2740  001F1C  B0D8               	btfsc	status,0,c
  2741  001F1E  EF93  F00F         	goto	u2651
  2742  001F22  EF95  F00F         	goto	u2650
  2743  001F26                     u2651:
  2744  001F26  EF62  F00F         	goto	l2436
  2745  001F2A                     u2650:
  2746  001F2A  0012               	return		;funcret
  2747  001F2C                     __end_of_lcdNumber:
  2748                           	callstack 0
  2749                           
  2750 ;; *************** function _lcdChar *****************
  2751 ;; Defined at:
  2752 ;;		line 52 in file "lcd.c"
  2753 ;; Parameters:    Size  Location     Type
  2754 ;;  value           1    wreg     unsigned char 
  2755 ;; Auto vars:     Size  Location     Type
  2756 ;;  value           1   13[COMRAM] unsigned char 
  2757 ;; Return value:  Size  Location     Type
  2758 ;;                  1    wreg      void 
  2759 ;; Registers used:
  2760 ;;		wreg, status,2, status,0, cstack
  2761 ;; Tracked objects:
  2762 ;;		On entry : 0/0
  2763 ;;		On exit  : 0/0
  2764 ;;		Unchanged: 0/0
  2765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2766 ;;      Params:         0       0       0       0       0       0       0
  2767 ;;      Locals:         1       0       0       0       0       0       0
  2768 ;;      Temps:          0       0       0       0       0       0       0
  2769 ;;      Totals:         1       0       0       0       0       0       0
  2770 ;;Total ram usage:        1 bytes
  2771 ;; Hardware stack levels used: 1
  2772 ;; Hardware stack levels required when called: 4
  2773 ;; This function calls:
  2774 ;;		_delayMicro
  2775 ;;		_pushByte
  2776 ;; This function is called by:
  2777 ;;		_main
  2778 ;;		_lcdString
  2779 ;;		_lcdNumber
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text13
  2784  0023CE                     __ptext13:
  2785                           	callstack 0
  2786  0023CE                     _lcdChar:
  2787                           	callstack 25
  2788                           
  2789                           ;incstack = 0
  2790                           ;lcdChar@value stored from wreg
  2791  0023CE  6E0E               	movwf	lcdChar@value^0,c
  2792  0023D0                     
  2793                           ;lcd.c: 53:  pushByte(value, 1);
  2794  0023D0  0E00               	movlw	0
  2795  0023D2  6E0B               	movwf	(pushByte@rs+1)^0,c
  2796  0023D4  0E01               	movlw	1
  2797  0023D6  6E0A               	movwf	pushByte@rs^0,c
  2798  0023D8  500E               	movf	lcdChar@value^0,w,c
  2799  0023DA  ECFD  F00F         	call	_pushByte
  2800  0023DE                     
  2801                           ;lcd.c: 54:  delayMicro(80);
  2802  0023DE  0E00               	movlw	0
  2803  0023E0  6E02               	movwf	(delayMicro@a+1)^0,c
  2804  0023E2  0E50               	movlw	80
  2805  0023E4  6E01               	movwf	delayMicro@a^0,c
  2806  0023E6  EC22  F012         	call	_delayMicro	;wreg free
  2807  0023EA  0012               	return		;funcret
  2808  0023EC                     __end_of_lcdChar:
  2809                           	callstack 0
  2810                           
  2811 ;; *************** function ___awmod *****************
  2812 ;; Defined at:
  2813 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;  dividend        2    8[COMRAM] int 
  2816 ;;  divisor         2   10[COMRAM] int 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  sign            1   13[COMRAM] unsigned char 
  2819 ;;  counter         1   12[COMRAM] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;                  2    8[COMRAM] int 
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2829 ;;      Params:         4       0       0       0       0       0       0
  2830 ;;      Locals:         2       0       0       0       0       0       0
  2831 ;;      Temps:          0       0       0       0       0       0       0
  2832 ;;      Totals:         6       0       0       0       0       0       0
  2833 ;;Total ram usage:        6 bytes
  2834 ;; Hardware stack levels used: 1
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_main
  2839 ;;		_lcdNumber
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           	psect	text14
  2844  001D94                     __ptext14:
  2845                           	callstack 0
  2846  001D94                     ___awmod:
  2847                           	callstack 29
  2848  001D94  0E00               	movlw	0
  2849  001D96  6E0E               	movwf	___awmod@sign^0,c
  2850  001D98  BE0A               	btfsc	(___awmod@dividend+1)^0,7,c
  2851  001D9A  EFD3  F00E         	goto	u2450
  2852  001D9E  EFD1  F00E         	goto	u2451
  2853  001DA2                     u2451:
  2854  001DA2  EFD9  F00E         	goto	l2300
  2855  001DA6                     u2450:
  2856  001DA6  6C09               	negf	___awmod@dividend^0,c
  2857  001DA8  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2858  001DAA  B0D8               	btfsc	status,0,c
  2859  001DAC  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2860  001DAE  0E01               	movlw	1
  2861  001DB0  6E0E               	movwf	___awmod@sign^0,c
  2862  001DB2                     l2300:
  2863  001DB2  BE0C               	btfsc	(___awmod@divisor+1)^0,7,c
  2864  001DB4  EFE0  F00E         	goto	u2460
  2865  001DB8  EFDE  F00E         	goto	u2461
  2866  001DBC                     u2461:
  2867  001DBC  EFE4  F00E         	goto	l2304
  2868  001DC0                     u2460:
  2869  001DC0  6C0B               	negf	___awmod@divisor^0,c
  2870  001DC2  1E0C               	comf	(___awmod@divisor+1)^0,f,c
  2871  001DC4  B0D8               	btfsc	status,0,c
  2872  001DC6  2A0C               	incf	(___awmod@divisor+1)^0,f,c
  2873  001DC8                     l2304:
  2874  001DC8  500B               	movf	___awmod@divisor^0,w,c
  2875  001DCA  100C               	iorwf	(___awmod@divisor+1)^0,w,c
  2876  001DCC  B4D8               	btfsc	status,2,c
  2877  001DCE  EFEB  F00E         	goto	u2471
  2878  001DD2  EFED  F00E         	goto	u2470
  2879  001DD6                     u2471:
  2880  001DD6  EF11  F00F         	goto	l2320
  2881  001DDA                     u2470:
  2882  001DDA  0E01               	movlw	1
  2883  001DDC  6E0D               	movwf	___awmod@counter^0,c
  2884  001DDE  EFF5  F00E         	goto	l2310
  2885  001DE2                     l2308:
  2886  001DE2  90D8               	bcf	status,0,c
  2887  001DE4  360B               	rlcf	___awmod@divisor^0,f,c
  2888  001DE6  360C               	rlcf	(___awmod@divisor+1)^0,f,c
  2889  001DE8  2A0D               	incf	___awmod@counter^0,f,c
  2890  001DEA                     l2310:
  2891  001DEA  AE0C               	btfss	(___awmod@divisor+1)^0,7,c
  2892  001DEC  EFFA  F00E         	goto	u2481
  2893  001DF0  EFFC  F00E         	goto	u2480
  2894  001DF4                     u2481:
  2895  001DF4  EFF1  F00E         	goto	l2308
  2896  001DF8                     u2480:
  2897  001DF8                     l2312:
  2898  001DF8  500B               	movf	___awmod@divisor^0,w,c
  2899  001DFA  5C09               	subwf	___awmod@dividend^0,w,c
  2900  001DFC  500C               	movf	(___awmod@divisor+1)^0,w,c
  2901  001DFE  580A               	subwfb	(___awmod@dividend+1)^0,w,c
  2902  001E00  A0D8               	btfss	status,0,c
  2903  001E02  EF05  F00F         	goto	u2491
  2904  001E06  EF07  F00F         	goto	u2490
  2905  001E0A                     u2491:
  2906  001E0A  EF0B  F00F         	goto	l2316
  2907  001E0E                     u2490:
  2908  001E0E  500B               	movf	___awmod@divisor^0,w,c
  2909  001E10  5E09               	subwf	___awmod@dividend^0,f,c
  2910  001E12  500C               	movf	(___awmod@divisor+1)^0,w,c
  2911  001E14  5A0A               	subwfb	(___awmod@dividend+1)^0,f,c
  2912  001E16                     l2316:
  2913  001E16  90D8               	bcf	status,0,c
  2914  001E18  320C               	rrcf	(___awmod@divisor+1)^0,f,c
  2915  001E1A  320B               	rrcf	___awmod@divisor^0,f,c
  2916  001E1C  2E0D               	decfsz	___awmod@counter^0,f,c
  2917  001E1E  EFFC  F00E         	goto	l2312
  2918  001E22                     l2320:
  2919  001E22  500E               	movf	___awmod@sign^0,w,c
  2920  001E24  B4D8               	btfsc	status,2,c
  2921  001E26  EF17  F00F         	goto	u2501
  2922  001E2A  EF19  F00F         	goto	u2500
  2923  001E2E                     u2501:
  2924  001E2E  EF1D  F00F         	goto	l2324
  2925  001E32                     u2500:
  2926  001E32  6C09               	negf	___awmod@dividend^0,c
  2927  001E34  1E0A               	comf	(___awmod@dividend+1)^0,f,c
  2928  001E36  B0D8               	btfsc	status,0,c
  2929  001E38  2A0A               	incf	(___awmod@dividend+1)^0,f,c
  2930  001E3A                     l2324:
  2931  001E3A  C009  F009         	movff	___awmod@dividend,?___awmod
  2932  001E3E  C00A  F00A         	movff	___awmod@dividend+1,?___awmod+1
  2933  001E42  0012               	return		;funcret
  2934  001E44                     __end_of___awmod:
  2935                           	callstack 0
  2936                           
  2937 ;; *************** function ___awdiv *****************
  2938 ;; Defined at:
  2939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  2940 ;; Parameters:    Size  Location     Type
  2941 ;;  dividend        2    0[COMRAM] int 
  2942 ;;  divisor         2    2[COMRAM] int 
  2943 ;; Auto vars:     Size  Location     Type
  2944 ;;  quotient        2    6[COMRAM] int 
  2945 ;;  sign            1    5[COMRAM] unsigned char 
  2946 ;;  counter         1    4[COMRAM] unsigned char 
  2947 ;; Return value:  Size  Location     Type
  2948 ;;                  2    0[COMRAM] int 
  2949 ;; Registers used:
  2950 ;;		wreg, status,2, status,0
  2951 ;; Tracked objects:
  2952 ;;		On entry : 0/0
  2953 ;;		On exit  : 0/0
  2954 ;;		Unchanged: 0/0
  2955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2956 ;;      Params:         4       0       0       0       0       0       0
  2957 ;;      Locals:         4       0       0       0       0       0       0
  2958 ;;      Temps:          0       0       0       0       0       0       0
  2959 ;;      Totals:         8       0       0       0       0       0       0
  2960 ;;Total ram usage:        8 bytes
  2961 ;; Hardware stack levels used: 1
  2962 ;; This function calls:
  2963 ;;		Nothing
  2964 ;; This function is called by:
  2965 ;;		_main
  2966 ;;		_lcdNumber
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text15
  2971  001C1C                     __ptext15:
  2972                           	callstack 0
  2973  001C1C                     ___awdiv:
  2974                           	callstack 29
  2975  001C1C  0E00               	movlw	0
  2976  001C1E  6E06               	movwf	___awdiv@sign^0,c
  2977  001C20  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  2978  001C22  EF17  F00E         	goto	u2390
  2979  001C26  EF15  F00E         	goto	u2391
  2980  001C2A                     u2391:
  2981  001C2A  EF1D  F00E         	goto	l2256
  2982  001C2E                     u2390:
  2983  001C2E  6C03               	negf	___awdiv@divisor^0,c
  2984  001C30  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  2985  001C32  B0D8               	btfsc	status,0,c
  2986  001C34  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  2987  001C36  0E01               	movlw	1
  2988  001C38  6E06               	movwf	___awdiv@sign^0,c
  2989  001C3A                     l2256:
  2990  001C3A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  2991  001C3C  EF24  F00E         	goto	u2400
  2992  001C40  EF22  F00E         	goto	u2401
  2993  001C44                     u2401:
  2994  001C44  EF2A  F00E         	goto	l2262
  2995  001C48                     u2400:
  2996  001C48  6C01               	negf	___awdiv@dividend^0,c
  2997  001C4A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  2998  001C4C  B0D8               	btfsc	status,0,c
  2999  001C4E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  3000  001C50  0E01               	movlw	1
  3001  001C52  1A06               	xorwf	___awdiv@sign^0,f,c
  3002  001C54                     l2262:
  3003  001C54  0E00               	movlw	0
  3004  001C56  6E08               	movwf	(___awdiv@quotient+1)^0,c
  3005  001C58  0E00               	movlw	0
  3006  001C5A  6E07               	movwf	___awdiv@quotient^0,c
  3007  001C5C  5003               	movf	___awdiv@divisor^0,w,c
  3008  001C5E  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  3009  001C60  B4D8               	btfsc	status,2,c
  3010  001C62  EF35  F00E         	goto	u2411
  3011  001C66  EF37  F00E         	goto	u2410
  3012  001C6A                     u2411:
  3013  001C6A  EF5F  F00E         	goto	l2284
  3014  001C6E                     u2410:
  3015  001C6E  0E01               	movlw	1
  3016  001C70  6E05               	movwf	___awdiv@counter^0,c
  3017  001C72  EF3F  F00E         	goto	l2270
  3018  001C76                     l2268:
  3019  001C76  90D8               	bcf	status,0,c
  3020  001C78  3603               	rlcf	___awdiv@divisor^0,f,c
  3021  001C7A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  3022  001C7C  2A05               	incf	___awdiv@counter^0,f,c
  3023  001C7E                     l2270:
  3024  001C7E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  3025  001C80  EF44  F00E         	goto	u2421
  3026  001C84  EF46  F00E         	goto	u2420
  3027  001C88                     u2421:
  3028  001C88  EF3B  F00E         	goto	l2268
  3029  001C8C                     u2420:
  3030  001C8C                     l2272:
  3031  001C8C  90D8               	bcf	status,0,c
  3032  001C8E  3607               	rlcf	___awdiv@quotient^0,f,c
  3033  001C90  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  3034  001C92  5003               	movf	___awdiv@divisor^0,w,c
  3035  001C94  5C01               	subwf	___awdiv@dividend^0,w,c
  3036  001C96  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3037  001C98  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  3038  001C9A  A0D8               	btfss	status,0,c
  3039  001C9C  EF52  F00E         	goto	u2431
  3040  001CA0  EF54  F00E         	goto	u2430
  3041  001CA4                     u2431:
  3042  001CA4  EF59  F00E         	goto	l2280
  3043  001CA8                     u2430:
  3044  001CA8  5003               	movf	___awdiv@divisor^0,w,c
  3045  001CAA  5E01               	subwf	___awdiv@dividend^0,f,c
  3046  001CAC  5004               	movf	(___awdiv@divisor+1)^0,w,c
  3047  001CAE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  3048  001CB0  8007               	bsf	___awdiv@quotient^0,0,c
  3049  001CB2                     l2280:
  3050  001CB2  90D8               	bcf	status,0,c
  3051  001CB4  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  3052  001CB6  3203               	rrcf	___awdiv@divisor^0,f,c
  3053  001CB8  2E05               	decfsz	___awdiv@counter^0,f,c
  3054  001CBA  EF46  F00E         	goto	l2272
  3055  001CBE                     l2284:
  3056  001CBE  5006               	movf	___awdiv@sign^0,w,c
  3057  001CC0  B4D8               	btfsc	status,2,c
  3058  001CC2  EF65  F00E         	goto	u2441
  3059  001CC6  EF67  F00E         	goto	u2440
  3060  001CCA                     u2441:
  3061  001CCA  EF6B  F00E         	goto	l2288
  3062  001CCE                     u2440:
  3063  001CCE  6C07               	negf	___awdiv@quotient^0,c
  3064  001CD0  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  3065  001CD2  B0D8               	btfsc	status,0,c
  3066  001CD4  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  3067  001CD6                     l2288:
  3068  001CD6  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3069  001CDA  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3070  001CDE  0012               	return		;funcret
  3071  001CE0                     __end_of___awdiv:
  3072                           	callstack 0
  3073                           
  3074 ;; *************** function _lcdInit *****************
  3075 ;; Defined at:
  3076 ;;		line 72 in file "lcd.c"
  3077 ;; Parameters:    Size  Location     Type
  3078 ;;		None
  3079 ;; Auto vars:     Size  Location     Type
  3080 ;;		None
  3081 ;; Return value:  Size  Location     Type
  3082 ;;                  1    wreg      void 
  3083 ;; Registers used:
  3084 ;;		wreg, status,2, status,0, cstack
  3085 ;; Tracked objects:
  3086 ;;		On entry : 0/0
  3087 ;;		On exit  : 0/0
  3088 ;;		Unchanged: 0/0
  3089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3090 ;;      Params:         0       0       0       0       0       0       0
  3091 ;;      Locals:         0       0       0       0       0       0       0
  3092 ;;      Temps:          0       0       0       0       0       0       0
  3093 ;;      Totals:         0       0       0       0       0       0       0
  3094 ;;Total ram usage:        0 bytes
  3095 ;; Hardware stack levels used: 1
  3096 ;; Hardware stack levels required when called: 5
  3097 ;; This function calls:
  3098 ;;		_delayMicro
  3099 ;;		_delayMili
  3100 ;;		_lcdCommand
  3101 ;;		_pinMode
  3102 ;;		_pushNibble
  3103 ;;		_soInit
  3104 ;; This function is called by:
  3105 ;;		_main
  3106 ;; This function uses a non-reentrant model
  3107 ;;
  3108                           
  3109                           	psect	text16
  3110  001CE0                     __ptext16:
  3111                           	callstack 0
  3112  001CE0                     _lcdInit:
  3113                           	callstack 25
  3114  001CE0                     
  3115                           ;lcd.c: 73:  pinMode(PIN_D4, 0);
  3116  001CE0  0E00               	movlw	0
  3117  001CE2  6E02               	movwf	(pinMode@pin+1)^0,c
  3118  001CE4  0E1C               	movlw	28
  3119  001CE6  6E01               	movwf	pinMode@pin^0,c
  3120  001CE8  0E00               	movlw	0
  3121  001CEA  6E04               	movwf	(pinMode@type+1)^0,c
  3122  001CEC  0E00               	movlw	0
  3123  001CEE  6E03               	movwf	pinMode@type^0,c
  3124  001CF0  ECD9  F009         	call	_pinMode	;wreg free
  3125                           
  3126                           ;lcd.c: 74:  pinMode(PIN_D5, 0);
  3127  001CF4  0E00               	movlw	0
  3128  001CF6  6E02               	movwf	(pinMode@pin+1)^0,c
  3129  001CF8  0E1D               	movlw	29
  3130  001CFA  6E01               	movwf	pinMode@pin^0,c
  3131  001CFC  0E00               	movlw	0
  3132  001CFE  6E04               	movwf	(pinMode@type+1)^0,c
  3133  001D00  0E00               	movlw	0
  3134  001D02  6E03               	movwf	pinMode@type^0,c
  3135  001D04  ECD9  F009         	call	_pinMode	;wreg free
  3136                           
  3137                           ;lcd.c: 75:  soInit();
  3138  001D08  EC18  F011         	call	_soInit	;wreg free
  3139                           
  3140                           ;lcd.c: 76:  delayMili(15);
  3141  001D0C  0E00               	movlw	0
  3142  001D0E  6E02               	movwf	(delayMili@a+1)^0,c
  3143  001D10  0E0F               	movlw	15
  3144  001D12  6E01               	movwf	delayMili@a^0,c
  3145  001D14  EC6C  F011         	call	_delayMili	;wreg free
  3146                           
  3147                           ;lcd.c: 78:  pushNibble(0x03, 0);
  3148  001D18  0E00               	movlw	0
  3149  001D1A  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3150  001D1C  0E00               	movlw	0
  3151  001D1E  6E0A               	movwf	pushNibble@rs^0,c
  3152  001D20  0E03               	movlw	3
  3153  001D22  ECD4  F011         	call	_pushNibble
  3154                           
  3155                           ;lcd.c: 79:  delayMili(5);
  3156  001D26  0E00               	movlw	0
  3157  001D28  6E02               	movwf	(delayMili@a+1)^0,c
  3158  001D2A  0E05               	movlw	5
  3159  001D2C  6E01               	movwf	delayMili@a^0,c
  3160  001D2E  EC6C  F011         	call	_delayMili	;wreg free
  3161                           
  3162                           ;lcd.c: 80:  pushNibble(0x03, 0);
  3163  001D32  0E00               	movlw	0
  3164  001D34  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3165  001D36  0E00               	movlw	0
  3166  001D38  6E0A               	movwf	pushNibble@rs^0,c
  3167  001D3A  0E03               	movlw	3
  3168  001D3C  ECD4  F011         	call	_pushNibble
  3169  001D40                     
  3170                           ;lcd.c: 81:  delayMicro(160);
  3171  001D40  0E00               	movlw	0
  3172  001D42  6E02               	movwf	(delayMicro@a+1)^0,c
  3173  001D44  0EA0               	movlw	160
  3174  001D46  6E01               	movwf	delayMicro@a^0,c
  3175  001D48  EC22  F012         	call	_delayMicro	;wreg free
  3176  001D4C                     
  3177                           ;lcd.c: 82:  pushNibble(0x03, 0);
  3178  001D4C  0E00               	movlw	0
  3179  001D4E  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3180  001D50  0E00               	movlw	0
  3181  001D52  6E0A               	movwf	pushNibble@rs^0,c
  3182  001D54  0E03               	movlw	3
  3183  001D56  ECD4  F011         	call	_pushNibble
  3184                           
  3185                           ;lcd.c: 83:  delayMicro(160);
  3186  001D5A  0E00               	movlw	0
  3187  001D5C  6E02               	movwf	(delayMicro@a+1)^0,c
  3188  001D5E  0EA0               	movlw	160
  3189  001D60  6E01               	movwf	delayMicro@a^0,c
  3190  001D62  EC22  F012         	call	_delayMicro	;wreg free
  3191  001D66                     
  3192                           ;lcd.c: 85:  pushNibble(0x02, 0);
  3193  001D66  0E00               	movlw	0
  3194  001D68  6E0B               	movwf	(pushNibble@rs+1)^0,c
  3195  001D6A  0E00               	movlw	0
  3196  001D6C  6E0A               	movwf	pushNibble@rs^0,c
  3197  001D6E  0E02               	movlw	2
  3198  001D70  ECD4  F011         	call	_pushNibble
  3199  001D74                     
  3200                           ;lcd.c: 86:  delayMili(10);
  3201  001D74  0E00               	movlw	0
  3202  001D76  6E02               	movwf	(delayMili@a+1)^0,c
  3203  001D78  0E0A               	movlw	10
  3204  001D7A  6E01               	movwf	delayMili@a^0,c
  3205  001D7C  EC6C  F011         	call	_delayMili	;wreg free
  3206  001D80                     
  3207                           ;lcd.c: 88:  lcdCommand(0x28);
  3208  001D80  0E28               	movlw	40
  3209  001D82  ECF6  F011         	call	_lcdCommand
  3210  001D86                     
  3211                           ;lcd.c: 89:  lcdCommand(0x08 + 0x04);
  3212  001D86  0E0C               	movlw	12
  3213  001D88  ECF6  F011         	call	_lcdCommand
  3214  001D8C                     
  3215                           ;lcd.c: 90:  lcdCommand(0x01);
  3216  001D8C  0E01               	movlw	1
  3217  001D8E  ECF6  F011         	call	_lcdCommand
  3218  001D92  0012               	return		;funcret
  3219  001D94                     __end_of_lcdInit:
  3220                           	callstack 0
  3221                           
  3222 ;; *************** function _pushNibble *****************
  3223 ;; Defined at:
  3224 ;;		line 25 in file "lcd.c"
  3225 ;; Parameters:    Size  Location     Type
  3226 ;;  value           1    wreg     unsigned char 
  3227 ;;  rs              2    9[COMRAM] int 
  3228 ;; Auto vars:     Size  Location     Type
  3229 ;;  value           1   11[COMRAM] unsigned char 
  3230 ;; Return value:  Size  Location     Type
  3231 ;;                  1    wreg      void 
  3232 ;; Registers used:
  3233 ;;		wreg, status,2, status,0, cstack
  3234 ;; Tracked objects:
  3235 ;;		On entry : 0/0
  3236 ;;		On exit  : 0/0
  3237 ;;		Unchanged: 0/0
  3238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3239 ;;      Params:         2       0       0       0       0       0       0
  3240 ;;      Locals:         1       0       0       0       0       0       0
  3241 ;;      Temps:          0       0       0       0       0       0       0
  3242 ;;      Totals:         3       0       0       0       0       0       0
  3243 ;;Total ram usage:        3 bytes
  3244 ;; Hardware stack levels used: 1
  3245 ;; Hardware stack levels required when called: 3
  3246 ;; This function calls:
  3247 ;;		_digitalWrite
  3248 ;;		_pulseEnablePin
  3249 ;;		_soWrite
  3250 ;; This function is called by:
  3251 ;;		_lcdInit
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text17
  3256  0023A8                     __ptext17:
  3257                           	callstack 0
  3258  0023A8                     _pushNibble:
  3259                           	callstack 26
  3260                           
  3261                           ;incstack = 0
  3262                           ;pushNibble@value stored from wreg
  3263  0023A8  6E0C               	movwf	pushNibble@value^0,c
  3264  0023AA                     
  3265                           ;lcd.c: 26:  soWrite(value);
  3266  0023AA  C00C  F007         	movff	pushNibble@value,soWrite@value
  3267  0023AE  6A08               	clrf	(soWrite@value+1)^0,c
  3268  0023B0  ECAC  F010         	call	_soWrite	;wreg free
  3269                           
  3270                           ;lcd.c: 27:  digitalWrite(PIN_D5, rs);
  3271  0023B4  0E00               	movlw	0
  3272  0023B6  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3273  0023B8  0E1D               	movlw	29
  3274  0023BA  6E01               	movwf	digitalWrite@pin^0,c
  3275  0023BC  C00A  F003         	movff	pushNibble@rs,digitalWrite@value
  3276  0023C0  C00B  F004         	movff	pushNibble@rs+1,digitalWrite@value+1
  3277  0023C4  ECB2  F008         	call	_digitalWrite	;wreg free
  3278                           
  3279                           ;lcd.c: 28:  pulseEnablePin();
  3280  0023C8  ECF7  F010         	call	_pulseEnablePin	;wreg free
  3281  0023CC  0012               	return		;funcret
  3282  0023CE                     __end_of_pushNibble:
  3283                           	callstack 0
  3284                           
  3285 ;; *************** function _lcdCommand *****************
  3286 ;; Defined at:
  3287 ;;		line 40 in file "lcd.c"
  3288 ;; Parameters:    Size  Location     Type
  3289 ;;  value           1    wreg     unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  value           1   13[COMRAM] unsigned char 
  3292 ;; Return value:  Size  Location     Type
  3293 ;;                  1    wreg      void 
  3294 ;; Registers used:
  3295 ;;		wreg, status,2, status,0, cstack
  3296 ;; Tracked objects:
  3297 ;;		On entry : 0/0
  3298 ;;		On exit  : 0/0
  3299 ;;		Unchanged: 0/0
  3300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3301 ;;      Params:         0       0       0       0       0       0       0
  3302 ;;      Locals:         1       0       0       0       0       0       0
  3303 ;;      Temps:          0       0       0       0       0       0       0
  3304 ;;      Totals:         1       0       0       0       0       0       0
  3305 ;;Total ram usage:        1 bytes
  3306 ;; Hardware stack levels used: 1
  3307 ;; Hardware stack levels required when called: 4
  3308 ;; This function calls:
  3309 ;;		_delayMili
  3310 ;;		_pushByte
  3311 ;; This function is called by:
  3312 ;;		_lcdPosition
  3313 ;;		_lcdInit
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text18
  3318  0023EC                     __ptext18:
  3319                           	callstack 0
  3320  0023EC                     _lcdCommand:
  3321                           	callstack 25
  3322                           
  3323                           ;incstack = 0
  3324                           ;lcdCommand@value stored from wreg
  3325  0023EC  6E0E               	movwf	lcdCommand@value^0,c
  3326  0023EE                     
  3327                           ;lcd.c: 41:  pushByte(value, 0);
  3328  0023EE  0E00               	movlw	0
  3329  0023F0  6E0B               	movwf	(pushByte@rs+1)^0,c
  3330  0023F2  0E00               	movlw	0
  3331  0023F4  6E0A               	movwf	pushByte@rs^0,c
  3332  0023F6  500E               	movf	lcdCommand@value^0,w,c
  3333  0023F8  ECFD  F00F         	call	_pushByte
  3334                           
  3335                           ;lcd.c: 42:  delayMili(2);
  3336  0023FC  0E00               	movlw	0
  3337  0023FE  6E02               	movwf	(delayMili@a+1)^0,c
  3338  002400  0E02               	movlw	2
  3339  002402  6E01               	movwf	delayMili@a^0,c
  3340  002404  EC6C  F011         	call	_delayMili	;wreg free
  3341  002408  0012               	return		;funcret
  3342  00240A                     __end_of_lcdCommand:
  3343                           	callstack 0
  3344                           
  3345 ;; *************** function _pushByte *****************
  3346 ;; Defined at:
  3347 ;;		line 31 in file "lcd.c"
  3348 ;; Parameters:    Size  Location     Type
  3349 ;;  value           1    wreg     unsigned char 
  3350 ;;  rs              2    9[COMRAM] int 
  3351 ;; Auto vars:     Size  Location     Type
  3352 ;;  value           1   12[COMRAM] unsigned char 
  3353 ;; Return value:  Size  Location     Type
  3354 ;;                  1    wreg      void 
  3355 ;; Registers used:
  3356 ;;		wreg, status,2, status,0, cstack
  3357 ;; Tracked objects:
  3358 ;;		On entry : 0/0
  3359 ;;		On exit  : 0/0
  3360 ;;		Unchanged: 0/0
  3361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3362 ;;      Params:         2       0       0       0       0       0       0
  3363 ;;      Locals:         1       0       0       0       0       0       0
  3364 ;;      Temps:          1       0       0       0       0       0       0
  3365 ;;      Totals:         4       0       0       0       0       0       0
  3366 ;;Total ram usage:        4 bytes
  3367 ;; Hardware stack levels used: 1
  3368 ;; Hardware stack levels required when called: 3
  3369 ;; This function calls:
  3370 ;;		_digitalWrite
  3371 ;;		_pulseEnablePin
  3372 ;;		_soWrite
  3373 ;; This function is called by:
  3374 ;;		_lcdCommand
  3375 ;;		_lcdChar
  3376 ;; This function uses a non-reentrant model
  3377 ;;
  3378                           
  3379                           	psect	text19
  3380  001FFA                     __ptext19:
  3381                           	callstack 0
  3382  001FFA                     _pushByte:
  3383                           	callstack 25
  3384                           
  3385                           ;incstack = 0
  3386                           ;pushByte@value stored from wreg
  3387  001FFA  6E0D               	movwf	pushByte@value^0,c
  3388  001FFC                     
  3389                           ;lcd.c: 32:  soWrite(value >> 4);
  3390  001FFC  C00D  F00C         	movff	pushByte@value,??_pushByte
  3391  002000  3A0C               	swapf	??_pushByte^0,f,c
  3392  002002  0E0F               	movlw	15
  3393  002004  160C               	andwf	??_pushByte^0,f,c
  3394  002006  500C               	movf	??_pushByte^0,w,c
  3395  002008  6E07               	movwf	soWrite@value^0,c
  3396  00200A  6A08               	clrf	(soWrite@value+1)^0,c
  3397  00200C  ECAC  F010         	call	_soWrite	;wreg free
  3398                           
  3399                           ;lcd.c: 33:  digitalWrite(PIN_D5, rs);
  3400  002010  0E00               	movlw	0
  3401  002012  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3402  002014  0E1D               	movlw	29
  3403  002016  6E01               	movwf	digitalWrite@pin^0,c
  3404  002018  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3405  00201C  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3406  002020  ECB2  F008         	call	_digitalWrite	;wreg free
  3407                           
  3408                           ;lcd.c: 34:  pulseEnablePin();
  3409  002024  ECF7  F010         	call	_pulseEnablePin	;wreg free
  3410                           
  3411                           ;lcd.c: 36:  soWrite(value & 0x0F);
  3412  002028  C00D  F00C         	movff	pushByte@value,??_pushByte
  3413  00202C  0E0F               	movlw	15
  3414  00202E  160C               	andwf	??_pushByte^0,f,c
  3415  002030  500C               	movf	??_pushByte^0,w,c
  3416  002032  6E07               	movwf	soWrite@value^0,c
  3417  002034  6A08               	clrf	(soWrite@value+1)^0,c
  3418  002036  ECAC  F010         	call	_soWrite	;wreg free
  3419                           
  3420                           ;lcd.c: 37:  digitalWrite(PIN_D5, rs);
  3421  00203A  0E00               	movlw	0
  3422  00203C  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3423  00203E  0E1D               	movlw	29
  3424  002040  6E01               	movwf	digitalWrite@pin^0,c
  3425  002042  C00A  F003         	movff	pushByte@rs,digitalWrite@value
  3426  002046  C00B  F004         	movff	pushByte@rs+1,digitalWrite@value+1
  3427  00204A  ECB2  F008         	call	_digitalWrite	;wreg free
  3428                           
  3429                           ;lcd.c: 38:  pulseEnablePin();
  3430  00204E  ECF7  F010         	call	_pulseEnablePin	;wreg free
  3431  002052  0012               	return		;funcret
  3432  002054                     __end_of_pushByte:
  3433                           	callstack 0
  3434                           
  3435 ;; *************** function _pulseEnablePin *****************
  3436 ;; Defined at:
  3437 ;;		line 18 in file "lcd.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;		None
  3440 ;; Auto vars:     Size  Location     Type
  3441 ;;		None
  3442 ;; Return value:  Size  Location     Type
  3443 ;;                  1    wreg      void 
  3444 ;; Registers used:
  3445 ;;		wreg, status,2, status,0, cstack
  3446 ;; Tracked objects:
  3447 ;;		On entry : 0/0
  3448 ;;		On exit  : 0/0
  3449 ;;		Unchanged: 0/0
  3450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3451 ;;      Params:         0       0       0       0       0       0       0
  3452 ;;      Locals:         0       0       0       0       0       0       0
  3453 ;;      Temps:          0       0       0       0       0       0       0
  3454 ;;      Totals:         0       0       0       0       0       0       0
  3455 ;;Total ram usage:        0 bytes
  3456 ;; Hardware stack levels used: 1
  3457 ;; Hardware stack levels required when called: 1
  3458 ;; This function calls:
  3459 ;;		_delayMicro
  3460 ;;		_digitalWrite
  3461 ;; This function is called by:
  3462 ;;		_pushNibble
  3463 ;;		_pushByte
  3464 ;; This function uses a non-reentrant model
  3465 ;;
  3466                           
  3467                           	psect	text20
  3468  0021EE                     __ptext20:
  3469                           	callstack 0
  3470  0021EE                     _pulseEnablePin:
  3471                           	callstack 26
  3472  0021EE                     
  3473                           ;lcd.c: 19:  digitalWrite(PIN_D4, 1);
  3474  0021EE  0E00               	movlw	0
  3475  0021F0  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3476  0021F2  0E1C               	movlw	28
  3477  0021F4  6E01               	movwf	digitalWrite@pin^0,c
  3478  0021F6  0E00               	movlw	0
  3479  0021F8  6E04               	movwf	(digitalWrite@value+1)^0,c
  3480  0021FA  0E01               	movlw	1
  3481  0021FC  6E03               	movwf	digitalWrite@value^0,c
  3482  0021FE  ECB2  F008         	call	_digitalWrite	;wreg free
  3483  002202                     
  3484                           ;lcd.c: 20:  delayMicro(5);
  3485  002202  0E00               	movlw	0
  3486  002204  6E02               	movwf	(delayMicro@a+1)^0,c
  3487  002206  0E05               	movlw	5
  3488  002208  6E01               	movwf	delayMicro@a^0,c
  3489  00220A  EC22  F012         	call	_delayMicro	;wreg free
  3490  00220E                     
  3491                           ;lcd.c: 21:  digitalWrite(PIN_D4, 0);
  3492  00220E  0E00               	movlw	0
  3493  002210  6E02               	movwf	(digitalWrite@pin+1)^0,c
  3494  002212  0E1C               	movlw	28
  3495  002214  6E01               	movwf	digitalWrite@pin^0,c
  3496  002216  0E00               	movlw	0
  3497  002218  6E04               	movwf	(digitalWrite@value+1)^0,c
  3498  00221A  0E00               	movlw	0
  3499  00221C  6E03               	movwf	digitalWrite@value^0,c
  3500  00221E  ECB2  F008         	call	_digitalWrite	;wreg free
  3501                           
  3502                           ;lcd.c: 22:  delayMicro(5);
  3503  002222  0E00               	movlw	0
  3504  002224  6E02               	movwf	(delayMicro@a+1)^0,c
  3505  002226  0E05               	movlw	5
  3506  002228  6E01               	movwf	delayMicro@a^0,c
  3507  00222A  EC22  F012         	call	_delayMicro	;wreg free
  3508  00222E  0012               	return		;funcret
  3509  002230                     __end_of_pulseEnablePin:
  3510                           	callstack 0
  3511                           
  3512 ;; *************** function _delayMicro *****************
  3513 ;; Defined at:
  3514 ;;		line 5 in file "lcd.c"
  3515 ;; Parameters:    Size  Location     Type
  3516 ;;  a               2    0[COMRAM] int 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  i               2    0        volatile int 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      void 
  3521 ;; Registers used:
  3522 ;;		None
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3528 ;;      Params:         2       0       0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0
  3530 ;;      Temps:          0       0       0       0       0       0       0
  3531 ;;      Totals:         2       0       0       0       0       0       0
  3532 ;;Total ram usage:        2 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; This function calls:
  3535 ;;		Nothing
  3536 ;; This function is called by:
  3537 ;;		_pulseEnablePin
  3538 ;;		_lcdChar
  3539 ;;		_lcdInit
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text21
  3544  002444                     __ptext21:
  3545                           	callstack 0
  3546  002444                     _delayMicro:
  3547                           	callstack 26
  3548  002444  0012               	return		;funcret
  3549  002446                     __end_of_delayMicro:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _delayMili *****************
  3553 ;; Defined at:
  3554 ;;		line 10 in file "lcd.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;  a               2    0[COMRAM] int 
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;  i               2    3[COMRAM] volatile int 
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3568 ;;      Params:         2       0       0       0       0       0       0
  3569 ;;      Locals:         2       0       0       0       0       0       0
  3570 ;;      Temps:          1       0       0       0       0       0       0
  3571 ;;      Totals:         5       0       0       0       0       0       0
  3572 ;;Total ram usage:        5 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; This function calls:
  3575 ;;		Nothing
  3576 ;; This function is called by:
  3577 ;;		_lcdCommand
  3578 ;;		_lcdInit
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text22
  3583  0022D8                     __ptext22:
  3584                           	callstack 0
  3585  0022D8                     _delayMili:
  3586                           	callstack 28
  3587  0022D8                     
  3588                           ;lcd.c: 11:  volatile int i;;lcd.c: 12:  for (i = 0; i < a; i++) {
  3589  0022D8  0E00               	movlw	0
  3590  0022DA  6E05               	movwf	(delayMili@i+1)^0,c	;volatile
  3591  0022DC  0E00               	movlw	0
  3592  0022DE  6E04               	movwf	delayMili@i^0,c	;volatile
  3593  0022E0  EF74  F011         	goto	l2144
  3594  0022E4                     l2142:
  3595                           
  3596                           ;lcd.c: 15:  }
  3597  0022E4  4A04               	infsnz	delayMili@i^0,f,c	;volatile
  3598  0022E6  2A05               	incf	(delayMili@i+1)^0,f,c	;volatile
  3599  0022E8                     l2144:
  3600  0022E8  5001               	movf	delayMili@a^0,w,c
  3601  0022EA  5C04               	subwf	delayMili@i^0,w,c	;volatile
  3602  0022EC  5005               	movf	(delayMili@i+1)^0,w,c	;volatile
  3603  0022EE  0A80               	xorlw	128
  3604  0022F0  6E03               	movwf	??_delayMili^0,c
  3605  0022F2  5002               	movf	(delayMili@a+1)^0,w,c
  3606  0022F4  0A80               	xorlw	128
  3607  0022F6  5803               	subwfb	??_delayMili^0,w,c
  3608  0022F8  A0D8               	btfss	status,0,c
  3609  0022FA  EF81  F011         	goto	u2221
  3610  0022FE  EF83  F011         	goto	u2220
  3611  002302                     u2221:
  3612  002302  EF72  F011         	goto	l2142
  3613  002306                     u2220:
  3614  002306  0012               	return		;funcret
  3615  002308                     __end_of_delayMili:
  3616                           	callstack 0
  3617                           
  3618 ;; *************** function _kpRead *****************
  3619 ;; Defined at:
  3620 ;;		line 14 in file "keypad.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;		None
  3623 ;; Auto vars:     Size  Location     Type
  3624 ;;		None
  3625 ;; Return value:  Size  Location     Type
  3626 ;;                  2    0[COMRAM] unsigned int 
  3627 ;; Registers used:
  3628 ;;		None
  3629 ;; Tracked objects:
  3630 ;;		On entry : 0/0
  3631 ;;		On exit  : 0/0
  3632 ;;		Unchanged: 0/0
  3633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3634 ;;      Params:         2       0       0       0       0       0       0
  3635 ;;      Locals:         0       0       0       0       0       0       0
  3636 ;;      Temps:          0       0       0       0       0       0       0
  3637 ;;      Totals:         2       0       0       0       0       0       0
  3638 ;;Total ram usage:        2 bytes
  3639 ;; Hardware stack levels used: 1
  3640 ;; This function calls:
  3641 ;;		Nothing
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text23
  3648  00243A                     __ptext23:
  3649                           	callstack 0
  3650  00243A                     _kpRead:
  3651                           	callstack 30
  3652  00243A                     
  3653                           ;keypad.c: 15:     return keys;
  3654  00243A  C02F  F001         	movff	_keys,?_kpRead
  3655  00243E  C030  F002         	movff	_keys+1,?_kpRead+1
  3656  002442  0012               	return		;funcret
  3657  002444                     __end_of_kpRead:
  3658                           	callstack 0
  3659                           
  3660 ;; *************** function _kpInit *****************
  3661 ;; Defined at:
  3662 ;;		line 54 in file "keypad.c"
  3663 ;; Parameters:    Size  Location     Type
  3664 ;;		None
  3665 ;; Auto vars:     Size  Location     Type
  3666 ;;		None
  3667 ;; Return value:  Size  Location     Type
  3668 ;;                  1    wreg      void 
  3669 ;; Registers used:
  3670 ;;		wreg, status,2, status,0, cstack
  3671 ;; Tracked objects:
  3672 ;;		On entry : 0/0
  3673 ;;		On exit  : 0/0
  3674 ;;		Unchanged: 0/0
  3675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3676 ;;      Params:         0       0       0       0       0       0       0
  3677 ;;      Locals:         0       0       0       0       0       0       0
  3678 ;;      Temps:          0       0       0       0       0       0       0
  3679 ;;      Totals:         0       0       0       0       0       0       0
  3680 ;;Total ram usage:        0 bytes
  3681 ;; Hardware stack levels used: 1
  3682 ;; Hardware stack levels required when called: 2
  3683 ;; This function calls:
  3684 ;;		_pinMode
  3685 ;;		_soInit
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           
  3691                           	psect	text24
  3692  0022A6                     __ptext24:
  3693                           	callstack 0
  3694  0022A6                     _kpInit:
  3695                           	callstack 28
  3696  0022A6                     
  3697                           ;keypad.c: 55:   soInit();
  3698  0022A6  EC18  F011         	call	_soInit	;wreg free
  3699                           
  3700                           ;keypad.c: 56:   pinMode(PIN_B2, 1);
  3701  0022AA  0E00               	movlw	0
  3702  0022AC  6E02               	movwf	(pinMode@pin+1)^0,c
  3703  0022AE  0E0A               	movlw	10
  3704  0022B0  6E01               	movwf	pinMode@pin^0,c
  3705  0022B2  0E00               	movlw	0
  3706  0022B4  6E04               	movwf	(pinMode@type+1)^0,c
  3707  0022B6  0E01               	movlw	1
  3708  0022B8  6E03               	movwf	pinMode@type^0,c
  3709  0022BA  ECD9  F009         	call	_pinMode	;wreg free
  3710                           
  3711                           ;keypad.c: 57:   pinMode(PIN_B1, 1);
  3712  0022BE  0E00               	movlw	0
  3713  0022C0  6E02               	movwf	(pinMode@pin+1)^0,c
  3714  0022C2  0E09               	movlw	9
  3715  0022C4  6E01               	movwf	pinMode@pin^0,c
  3716  0022C6  0E00               	movlw	0
  3717  0022C8  6E04               	movwf	(pinMode@type+1)^0,c
  3718  0022CA  0E01               	movlw	1
  3719  0022CC  6E03               	movwf	pinMode@type^0,c
  3720  0022CE  ECD9  F009         	call	_pinMode	;wreg free
  3721  0022D2                     
  3722                           ;keypad.c: 58:   ADCON1 = 0b00001100;
  3723  0022D2  0E0C               	movlw	12
  3724  0022D4  6EC1               	movwf	193,c	;volatile
  3725  0022D6  0012               	return		;funcret
  3726  0022D8                     __end_of_kpInit:
  3727                           	callstack 0
  3728                           
  3729 ;; *************** function _soInit *****************
  3730 ;; Defined at:
  3731 ;;		line 3 in file "so.c"
  3732 ;; Parameters:    Size  Location     Type
  3733 ;;		None
  3734 ;; Auto vars:     Size  Location     Type
  3735 ;;		None
  3736 ;; Return value:  Size  Location     Type
  3737 ;;                  1    wreg      void 
  3738 ;; Registers used:
  3739 ;;		wreg, status,2, status,0, cstack
  3740 ;; Tracked objects:
  3741 ;;		On entry : 0/0
  3742 ;;		On exit  : 0/0
  3743 ;;		Unchanged: 0/0
  3744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3745 ;;      Params:         0       0       0       0       0       0       0
  3746 ;;      Locals:         0       0       0       0       0       0       0
  3747 ;;      Temps:          0       0       0       0       0       0       0
  3748 ;;      Totals:         0       0       0       0       0       0       0
  3749 ;;Total ram usage:        0 bytes
  3750 ;; Hardware stack levels used: 1
  3751 ;; Hardware stack levels required when called: 1
  3752 ;; This function calls:
  3753 ;;		_pinMode
  3754 ;; This function is called by:
  3755 ;;		_kpInit
  3756 ;;		_lcdInit
  3757 ;;		_ssdInit
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text25
  3762  002230                     __ptext25:
  3763                           	callstack 0
  3764  002230                     _soInit:
  3765                           	callstack 28
  3766  002230                     
  3767                           ;so.c: 4:  pinMode(PIN_D7, 0);
  3768  002230  0E00               	movlw	0
  3769  002232  6E02               	movwf	(pinMode@pin+1)^0,c
  3770  002234  0E1F               	movlw	31
  3771  002236  6E01               	movwf	pinMode@pin^0,c
  3772  002238  0E00               	movlw	0
  3773  00223A  6E04               	movwf	(pinMode@type+1)^0,c
  3774  00223C  0E00               	movlw	0
  3775  00223E  6E03               	movwf	pinMode@type^0,c
  3776  002240  ECD9  F009         	call	_pinMode	;wreg free
  3777                           
  3778                           ;so.c: 5:  pinMode(PIN_B0, 0);
  3779  002244  0E00               	movlw	0
  3780  002246  6E02               	movwf	(pinMode@pin+1)^0,c
  3781  002248  0E08               	movlw	8
  3782  00224A  6E01               	movwf	pinMode@pin^0,c
  3783  00224C  0E00               	movlw	0
  3784  00224E  6E04               	movwf	(pinMode@type+1)^0,c
  3785  002250  0E00               	movlw	0
  3786  002252  6E03               	movwf	pinMode@type^0,c
  3787  002254  ECD9  F009         	call	_pinMode	;wreg free
  3788                           
  3789                           ;so.c: 6:  pinMode(PIN_D6, 0);
  3790  002258  0E00               	movlw	0
  3791  00225A  6E02               	movwf	(pinMode@pin+1)^0,c
  3792  00225C  0E1E               	movlw	30
  3793  00225E  6E01               	movwf	pinMode@pin^0,c
  3794  002260  0E00               	movlw	0
  3795  002262  6E04               	movwf	(pinMode@type+1)^0,c
  3796  002264  0E00               	movlw	0
  3797  002266  6E03               	movwf	pinMode@type^0,c
  3798  002268  ECD9  F009         	call	_pinMode	;wreg free
  3799  00226C  0012               	return		;funcret
  3800  00226E                     __end_of_soInit:
  3801                           	callstack 0
  3802                           
  3803 ;; *************** function _kpDebounce *****************
  3804 ;; Defined at:
  3805 ;;		line 27 in file "keypad.c"
  3806 ;; Parameters:    Size  Location     Type
  3807 ;;		None
  3808 ;; Auto vars:     Size  Location     Type
  3809 ;;  i               2   12[COMRAM] int 
  3810 ;; Return value:  Size  Location     Type
  3811 ;;                  1    wreg      void 
  3812 ;; Registers used:
  3813 ;;		wreg, status,2, status,0, cstack
  3814 ;; Tracked objects:
  3815 ;;		On entry : 0/0
  3816 ;;		On exit  : 0/0
  3817 ;;		Unchanged: 0/0
  3818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3819 ;;      Params:         0       0       0       0       0       0       0
  3820 ;;      Locals:         2       0       0       0       0       0       0
  3821 ;;      Temps:          3       0       0       0       0       0       0
  3822 ;;      Totals:         5       0       0       0       0       0       0
  3823 ;;Total ram usage:        5 bytes
  3824 ;; Hardware stack levels used: 1
  3825 ;; Hardware stack levels required when called: 3
  3826 ;; This function calls:
  3827 ;;		_digitalRead
  3828 ;;		_soWrite
  3829 ;; This function is called by:
  3830 ;;		_main
  3831 ;; This function uses a non-reentrant model
  3832 ;;
  3833                           
  3834                           	psect	text26
  3835  0018D6                     __ptext26:
  3836                           	callstack 0
  3837  0018D6                     _kpDebounce:
  3838                           	callstack 27
  3839  0018D6                     
  3840                           ;keypad.c: 28:     int i;;keypad.c: 29:     static unsigned char tempo;;keypad.c: 30:   
      +                            static unsigned int newRead;;keypad.c: 31:     static unsigned int oldRead;;keypad.c: 
      +                          32:     newRead = 0;
  3841  0018D6  0E00               	movlw	0
  3842  0018D8  6E2E               	movwf	(kpDebounce@newRead+1)^0,c
  3843  0018DA  0E00               	movlw	0
  3844  0018DC  6E2D               	movwf	kpDebounce@newRead^0,c
  3845                           
  3846                           ;keypad.c: 33:     for(i = 0; i<5; i++){
  3847  0018DE  0E00               	movlw	0
  3848  0018E0  6E0E               	movwf	(kpDebounce@i+1)^0,c
  3849  0018E2  0E00               	movlw	0
  3850  0018E4  6E0D               	movwf	kpDebounce@i^0,c
  3851  0018E6                     l2406:
  3852  0018E6  BE0E               	btfsc	(kpDebounce@i+1)^0,7,c
  3853  0018E8  EF7F  F00C         	goto	u2571
  3854  0018EC  500E               	movf	(kpDebounce@i+1)^0,w,c
  3855  0018EE  E109               	bnz	u2570
  3856  0018F0  0E05               	movlw	5
  3857  0018F2  5C0D               	subwf	kpDebounce@i^0,w,c
  3858  0018F4  A0D8               	btfss	status,0,c
  3859  0018F6  EF7F  F00C         	goto	u2571
  3860  0018FA  EF81  F00C         	goto	u2570
  3861  0018FE                     u2571:
  3862  0018FE  EF83  F00C         	goto	l2410
  3863  001902                     u2570:
  3864  001902  EFE4  F00C         	goto	l2422
  3865  001906                     l2410:
  3866                           
  3867                           ;keypad.c: 35:       soWrite(1<<(i+3));
  3868  001906  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3869  00190A  0E03               	movlw	3
  3870  00190C  260A               	addwf	??_kpDebounce^0,f,c
  3871  00190E  0E01               	movlw	1
  3872  001910  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3873  001912  0E00               	movlw	0
  3874  001914  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3875  001916  2A0A               	incf	??_kpDebounce^0,f,c
  3876  001918  EF91  F00C         	goto	u2584
  3877  00191C                     u2585:
  3878  00191C  90D8               	bcf	status,0,c
  3879  00191E  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3880  001920  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3881  001922                     u2584:
  3882  001922  2E0A               	decfsz	??_kpDebounce^0,f,c
  3883  001924  EF8E  F00C         	goto	u2585
  3884  001928  C00B  F007         	movff	??_kpDebounce+1,soWrite@value
  3885  00192C  C00C  F008         	movff	??_kpDebounce+2,soWrite@value+1
  3886  001930  ECAC  F010         	call	_soWrite	;wreg free
  3887                           
  3888                           ;keypad.c: 36:       if(digitalRead(PIN_B2)){
  3889  001934  0E00               	movlw	0
  3890  001936  6E02               	movwf	(digitalRead@pin+1)^0,c
  3891  001938  0E0A               	movlw	10
  3892  00193A  6E01               	movwf	digitalRead@pin^0,c
  3893  00193C  ECB6  F00B         	call	_digitalRead	;wreg free
  3894  001940  5001               	movf	?_digitalRead^0,w,c
  3895  001942  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3896  001944  B4D8               	btfsc	status,2,c
  3897  001946  EFA7  F00C         	goto	u2591
  3898  00194A  EFA9  F00C         	goto	u2590
  3899  00194E                     u2591:
  3900  00194E  EFBC  F00C         	goto	l2414
  3901  001952                     u2590:
  3902  001952                     
  3903                           ;keypad.c: 37:         ((newRead) |= (1<<(i)));
  3904  001952  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3905  001956  0E01               	movlw	1
  3906  001958  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3907  00195A  0E00               	movlw	0
  3908  00195C  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3909  00195E  2A0A               	incf	??_kpDebounce^0,f,c
  3910  001960  EFB5  F00C         	goto	u2604
  3911  001964                     u2605:
  3912  001964  90D8               	bcf	status,0,c
  3913  001966  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3914  001968  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3915  00196A                     u2604:
  3916  00196A  2E0A               	decfsz	??_kpDebounce^0,f,c
  3917  00196C  EFB2  F00C         	goto	u2605
  3918  001970  500B               	movf	(??_kpDebounce+1)^0,w,c
  3919  001972  122D               	iorwf	kpDebounce@newRead^0,f,c
  3920  001974  500C               	movf	(??_kpDebounce+2)^0,w,c
  3921  001976  122E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3922  001978                     l2414:
  3923                           
  3924                           ;keypad.c: 39:       if(digitalRead(PIN_B1)){
  3925  001978  0E00               	movlw	0
  3926  00197A  6E02               	movwf	(digitalRead@pin+1)^0,c
  3927  00197C  0E09               	movlw	9
  3928  00197E  6E01               	movwf	digitalRead@pin^0,c
  3929  001980  ECB6  F00B         	call	_digitalRead	;wreg free
  3930  001984  5001               	movf	?_digitalRead^0,w,c
  3931  001986  1002               	iorwf	(?_digitalRead+1)^0,w,c
  3932  001988  B4D8               	btfsc	status,2,c
  3933  00198A  EFC9  F00C         	goto	u2611
  3934  00198E  EFCB  F00C         	goto	u2610
  3935  001992                     u2611:
  3936  001992  EFE0  F00C         	goto	l2418
  3937  001996                     u2610:
  3938  001996                     
  3939                           ;keypad.c: 40:         ((newRead) |= (1<<((i+5))));
  3940  001996  C00D  F00A         	movff	kpDebounce@i,??_kpDebounce
  3941  00199A  0E05               	movlw	5
  3942  00199C  260A               	addwf	??_kpDebounce^0,f,c
  3943  00199E  0E01               	movlw	1
  3944  0019A0  6E0B               	movwf	(??_kpDebounce+1)^0,c
  3945  0019A2  0E00               	movlw	0
  3946  0019A4  6E0C               	movwf	(??_kpDebounce+2)^0,c
  3947  0019A6  2A0A               	incf	??_kpDebounce^0,f,c
  3948  0019A8  EFD9  F00C         	goto	u2624
  3949  0019AC                     u2625:
  3950  0019AC  90D8               	bcf	status,0,c
  3951  0019AE  360B               	rlcf	(??_kpDebounce+1)^0,f,c
  3952  0019B0  360C               	rlcf	(??_kpDebounce+2)^0,f,c
  3953  0019B2                     u2624:
  3954  0019B2  2E0A               	decfsz	??_kpDebounce^0,f,c
  3955  0019B4  EFD6  F00C         	goto	u2625
  3956  0019B8  500B               	movf	(??_kpDebounce+1)^0,w,c
  3957  0019BA  122D               	iorwf	kpDebounce@newRead^0,f,c
  3958  0019BC  500C               	movf	(??_kpDebounce+2)^0,w,c
  3959  0019BE  122E               	iorwf	(kpDebounce@newRead+1)^0,f,c
  3960  0019C0                     l2418:
  3961                           
  3962                           ;keypad.c: 42:     }
  3963  0019C0  4A0D               	infsnz	kpDebounce@i^0,f,c
  3964  0019C2  2A0E               	incf	(kpDebounce@i+1)^0,f,c
  3965  0019C4  EF73  F00C         	goto	l2406
  3966  0019C8                     l2422:
  3967                           
  3968                           ;keypad.c: 43:     if (oldRead == newRead) {
  3969  0019C8  502D               	movf	kpDebounce@newRead^0,w,c
  3970  0019CA  182B               	xorwf	kpDebounce@oldRead^0,w,c
  3971  0019CC  E107               	bnz	u2631
  3972  0019CE  502E               	movf	(kpDebounce@newRead+1)^0,w,c
  3973  0019D0  182C               	xorwf	(kpDebounce@oldRead+1)^0,w,c
  3974  0019D2  A4D8               	btfss	status,2,c
  3975  0019D4  EFEE  F00C         	goto	u2631
  3976  0019D8  EFF0  F00C         	goto	u2630
  3977  0019DC                     u2631:
  3978  0019DC  EFF3  F00C         	goto	l2426
  3979  0019E0                     u2630:
  3980  0019E0                     
  3981                           ;keypad.c: 44:         tempo--;
  3982  0019E0  0636               	decf	kpDebounce@tempo^0,f,c
  3983                           
  3984                           ;keypad.c: 45:     } else {
  3985  0019E2  EFF9  F00C         	goto	l206
  3986  0019E6                     l2426:
  3987                           
  3988                           ;keypad.c: 46:         tempo = 1;
  3989  0019E6  0E01               	movlw	1
  3990  0019E8  6E36               	movwf	kpDebounce@tempo^0,c
  3991  0019EA                     
  3992                           ;keypad.c: 47:         oldRead = newRead;
  3993  0019EA  C02D  F02B         	movff	kpDebounce@newRead,kpDebounce@oldRead
  3994  0019EE  C02E  F02C         	movff	kpDebounce@newRead+1,kpDebounce@oldRead+1
  3995  0019F2                     l206:
  3996                           
  3997                           ;keypad.c: 49:     if (tempo == 0) {
  3998  0019F2  5036               	movf	kpDebounce@tempo^0,w,c
  3999  0019F4  A4D8               	btfss	status,2,c
  4000  0019F6  EFFF  F00C         	goto	u2641
  4001  0019FA  EF01  F00D         	goto	u2640
  4002  0019FE                     u2641:
  4003  0019FE  EF05  F00D         	goto	l208
  4004  001A02                     u2640:
  4005  001A02                     
  4006                           ;keypad.c: 50:         keys = oldRead;
  4007  001A02  C02B  F02F         	movff	kpDebounce@oldRead,_keys
  4008  001A06  C02C  F030         	movff	kpDebounce@oldRead+1,_keys+1
  4009  001A0A                     l208:
  4010  001A0A  0012               	return		;funcret
  4011  001A0C                     __end_of_kpDebounce:
  4012                           	callstack 0
  4013                           
  4014 ;; *************** function _soWrite *****************
  4015 ;; Defined at:
  4016 ;;		line 18 in file "so.c"
  4017 ;; Parameters:    Size  Location     Type
  4018 ;;  value           2    6[COMRAM] int 
  4019 ;; Auto vars:     Size  Location     Type
  4020 ;;  i               1    8[COMRAM] unsigned char 
  4021 ;; Return value:  Size  Location     Type
  4022 ;;                  1    wreg      void 
  4023 ;; Registers used:
  4024 ;;		wreg, status,2, status,0, cstack
  4025 ;; Tracked objects:
  4026 ;;		On entry : 0/0
  4027 ;;		On exit  : 0/0
  4028 ;;		Unchanged: 0/0
  4029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4030 ;;      Params:         2       0       0       0       0       0       0
  4031 ;;      Locals:         1       0       0       0       0       0       0
  4032 ;;      Temps:          0       0       0       0       0       0       0
  4033 ;;      Totals:         3       0       0       0       0       0       0
  4034 ;;Total ram usage:        3 bytes
  4035 ;; Hardware stack levels used: 1
  4036 ;; Hardware stack levels required when called: 2
  4037 ;; This function calls:
  4038 ;;		_PulseClockData
  4039 ;;		_PulseEnClock
  4040 ;;		_digitalWrite
  4041 ;; This function is called by:
  4042 ;;		_kpDebounce
  4043 ;;		_pushNibble
  4044 ;;		_pushByte
  4045 ;;		_ssdUpdate
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           	psect	text27
  4050  002158                     __ptext27:
  4051                           	callstack 0
  4052  002158                     _soWrite:
  4053                           	callstack 27
  4054  002158                     
  4055                           ;so.c: 19:  char i;;so.c: 20:  digitalWrite(PIN_B0, 0);
  4056  002158  0E00               	movlw	0
  4057  00215A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4058  00215C  0E08               	movlw	8
  4059  00215E  6E01               	movwf	digitalWrite@pin^0,c
  4060  002160  0E00               	movlw	0
  4061  002162  6E04               	movwf	(digitalWrite@value+1)^0,c
  4062  002164  0E00               	movlw	0
  4063  002166  6E03               	movwf	digitalWrite@value^0,c
  4064  002168  ECB2  F008         	call	_digitalWrite	;wreg free
  4065  00216C                     
  4066                           ;so.c: 21:  for (i = 0; i < 8; i++) {
  4067  00216C  0E00               	movlw	0
  4068  00216E  6E09               	movwf	soWrite@i^0,c
  4069  002170                     l2084:
  4070                           
  4071                           ;so.c: 22:   digitalWrite(PIN_D6, value & 0x80);
  4072  002170  0E00               	movlw	0
  4073  002172  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4074  002174  0E1E               	movlw	30
  4075  002176  6E01               	movwf	digitalWrite@pin^0,c
  4076  002178  0E80               	movlw	128
  4077  00217A  1407               	andwf	soWrite@value^0,w,c
  4078  00217C  6E03               	movwf	digitalWrite@value^0,c
  4079  00217E  6A04               	clrf	(digitalWrite@value+1)^0,c
  4080  002180  ECB2  F008         	call	_digitalWrite	;wreg free
  4081                           
  4082                           ;so.c: 23:   PulseClockData();
  4083  002184  EC99  F011         	call	_PulseClockData	;wreg free
  4084  002188                     
  4085                           ;so.c: 24:   value <<= 1;
  4086  002188  90D8               	bcf	status,0,c
  4087  00218A  3607               	rlcf	soWrite@value^0,f,c
  4088  00218C  3608               	rlcf	(soWrite@value+1)^0,f,c
  4089  00218E                     
  4090                           ;so.c: 25:  }
  4091  00218E  2A09               	incf	soWrite@i^0,f,c
  4092  002190  0E07               	movlw	7
  4093  002192  6409               	cpfsgt	soWrite@i^0,c
  4094  002194  EFCE  F010         	goto	u2011
  4095  002198  EFD0  F010         	goto	u2010
  4096  00219C                     u2011:
  4097  00219C  EFB8  F010         	goto	l2084
  4098  0021A0                     u2010:
  4099  0021A0                     
  4100                           ;so.c: 26:  PulseEnClock();
  4101  0021A0  EC84  F011         	call	_PulseEnClock	;wreg free
  4102  0021A4  0012               	return		;funcret
  4103  0021A6                     __end_of_soWrite:
  4104                           	callstack 0
  4105                           
  4106 ;; *************** function _PulseEnClock *****************
  4107 ;; Defined at:
  4108 ;;		line 9 in file "so.c"
  4109 ;; Parameters:    Size  Location     Type
  4110 ;;		None
  4111 ;; Auto vars:     Size  Location     Type
  4112 ;;		None
  4113 ;; Return value:  Size  Location     Type
  4114 ;;                  1    wreg      void 
  4115 ;; Registers used:
  4116 ;;		wreg, status,2, status,0, cstack
  4117 ;; Tracked objects:
  4118 ;;		On entry : 0/0
  4119 ;;		On exit  : 0/0
  4120 ;;		Unchanged: 0/0
  4121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4122 ;;      Params:         0       0       0       0       0       0       0
  4123 ;;      Locals:         0       0       0       0       0       0       0
  4124 ;;      Temps:          0       0       0       0       0       0       0
  4125 ;;      Totals:         0       0       0       0       0       0       0
  4126 ;;Total ram usage:        0 bytes
  4127 ;; Hardware stack levels used: 1
  4128 ;; Hardware stack levels required when called: 1
  4129 ;; This function calls:
  4130 ;;		_digitalWrite
  4131 ;; This function is called by:
  4132 ;;		_soWrite
  4133 ;; This function uses a non-reentrant model
  4134 ;;
  4135                           
  4136                           	psect	text28
  4137  002308                     __ptext28:
  4138                           	callstack 0
  4139  002308                     _PulseEnClock:
  4140                           	callstack 27
  4141  002308                     
  4142                           ;so.c: 10:  digitalWrite(PIN_D7, 1);
  4143  002308  0E00               	movlw	0
  4144  00230A  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4145  00230C  0E1F               	movlw	31
  4146  00230E  6E01               	movwf	digitalWrite@pin^0,c
  4147  002310  0E00               	movlw	0
  4148  002312  6E04               	movwf	(digitalWrite@value+1)^0,c
  4149  002314  0E01               	movlw	1
  4150  002316  6E03               	movwf	digitalWrite@value^0,c
  4151  002318  ECB2  F008         	call	_digitalWrite	;wreg free
  4152                           
  4153                           ;so.c: 11:  digitalWrite(PIN_D7, 0);
  4154  00231C  0E00               	movlw	0
  4155  00231E  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4156  002320  0E1F               	movlw	31
  4157  002322  6E01               	movwf	digitalWrite@pin^0,c
  4158  002324  0E00               	movlw	0
  4159  002326  6E04               	movwf	(digitalWrite@value+1)^0,c
  4160  002328  0E00               	movlw	0
  4161  00232A  6E03               	movwf	digitalWrite@value^0,c
  4162  00232C  ECB2  F008         	call	_digitalWrite	;wreg free
  4163  002330  0012               	return		;funcret
  4164  002332                     __end_of_PulseEnClock:
  4165                           	callstack 0
  4166                           
  4167 ;; *************** function _PulseClockData *****************
  4168 ;; Defined at:
  4169 ;;		line 14 in file "so.c"
  4170 ;; Parameters:    Size  Location     Type
  4171 ;;		None
  4172 ;; Auto vars:     Size  Location     Type
  4173 ;;		None
  4174 ;; Return value:  Size  Location     Type
  4175 ;;                  1    wreg      void 
  4176 ;; Registers used:
  4177 ;;		wreg, status,2, status,0, cstack
  4178 ;; Tracked objects:
  4179 ;;		On entry : 0/0
  4180 ;;		On exit  : 0/0
  4181 ;;		Unchanged: 0/0
  4182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4183 ;;      Params:         0       0       0       0       0       0       0
  4184 ;;      Locals:         0       0       0       0       0       0       0
  4185 ;;      Temps:          0       0       0       0       0       0       0
  4186 ;;      Totals:         0       0       0       0       0       0       0
  4187 ;;Total ram usage:        0 bytes
  4188 ;; Hardware stack levels used: 1
  4189 ;; Hardware stack levels required when called: 1
  4190 ;; This function calls:
  4191 ;;		_digitalWrite
  4192 ;; This function is called by:
  4193 ;;		_soWrite
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text29
  4198  002332                     __ptext29:
  4199                           	callstack 0
  4200  002332                     _PulseClockData:
  4201                           	callstack 27
  4202  002332                     
  4203                           ;so.c: 15:  digitalWrite(PIN_B0, 1);
  4204  002332  0E00               	movlw	0
  4205  002334  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4206  002336  0E08               	movlw	8
  4207  002338  6E01               	movwf	digitalWrite@pin^0,c
  4208  00233A  0E00               	movlw	0
  4209  00233C  6E04               	movwf	(digitalWrite@value+1)^0,c
  4210  00233E  0E01               	movlw	1
  4211  002340  6E03               	movwf	digitalWrite@value^0,c
  4212  002342  ECB2  F008         	call	_digitalWrite	;wreg free
  4213                           
  4214                           ;so.c: 16:  digitalWrite(PIN_B0, 0);
  4215  002346  0E00               	movlw	0
  4216  002348  6E02               	movwf	(digitalWrite@pin+1)^0,c
  4217  00234A  0E08               	movlw	8
  4218  00234C  6E01               	movwf	digitalWrite@pin^0,c
  4219  00234E  0E00               	movlw	0
  4220  002350  6E04               	movwf	(digitalWrite@value+1)^0,c
  4221  002352  0E00               	movlw	0
  4222  002354  6E03               	movwf	digitalWrite@value^0,c
  4223  002356  ECB2  F008         	call	_digitalWrite	;wreg free
  4224  00235A  0012               	return		;funcret
  4225  00235C                     __end_of_PulseClockData:
  4226                           	callstack 0
  4227                           
  4228 ;; *************** function _digitalWrite *****************
  4229 ;; Defined at:
  4230 ;;		line 14 in file "io.c"
  4231 ;; Parameters:    Size  Location     Type
  4232 ;;  pin             2    0[COMRAM] int 
  4233 ;;  value           2    2[COMRAM] int 
  4234 ;; Auto vars:     Size  Location     Type
  4235 ;;		None
  4236 ;; Return value:  Size  Location     Type
  4237 ;;                  1    wreg      void 
  4238 ;; Registers used:
  4239 ;;		wreg, status,2, status,0
  4240 ;; Tracked objects:
  4241 ;;		On entry : 0/0
  4242 ;;		On exit  : 0/0
  4243 ;;		Unchanged: 0/0
  4244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4245 ;;      Params:         4       0       0       0       0       0       0
  4246 ;;      Locals:         0       0       0       0       0       0       0
  4247 ;;      Temps:          2       0       0       0       0       0       0
  4248 ;;      Totals:         6       0       0       0       0       0       0
  4249 ;;Total ram usage:        6 bytes
  4250 ;; Hardware stack levels used: 1
  4251 ;; This function calls:
  4252 ;;		Nothing
  4253 ;; This function is called by:
  4254 ;;		_pulseEnablePin
  4255 ;;		_pushNibble
  4256 ;;		_pushByte
  4257 ;;		_PulseEnClock
  4258 ;;		_PulseClockData
  4259 ;;		_soWrite
  4260 ;;		_ssdUpdate
  4261 ;; This function uses a non-reentrant model
  4262 ;;
  4263                           
  4264                           	psect	text30
  4265  001164                     __ptext30:
  4266                           	callstack 0
  4267  001164                     _digitalWrite:
  4268                           	callstack 28
  4269  001164                     
  4270                           ;io.c: 16:     if(pin <8){
  4271  001164  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4272  001166  EFC0  F008         	goto	u1810
  4273  00116A  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4274  00116C  E107               	bnz	u1811
  4275  00116E  0E08               	movlw	8
  4276  001170  5C01               	subwf	digitalWrite@pin^0,w,c
  4277  001172  B0D8               	btfsc	status,0,c
  4278  001174  EFBE  F008         	goto	u1811
  4279  001178  EFC0  F008         	goto	u1810
  4280  00117C                     u1811:
  4281  00117C  EFEA  F008         	goto	l2040
  4282  001180                     u1810:
  4283  001180                     
  4284                           ;io.c: 17:         if (value){ ((PORTA) |= (1<<(pin)));}
  4285  001180  5003               	movf	digitalWrite@value^0,w,c
  4286  001182  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4287  001184  B4D8               	btfsc	status,2,c
  4288  001186  EFC7  F008         	goto	u1821
  4289  00118A  EFC9  F008         	goto	u1820
  4290  00118E                     u1821:
  4291  00118E  EFD9  F008         	goto	l2038
  4292  001192                     u1820:
  4293  001192  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4294  001196  0E01               	movlw	1
  4295  001198  6E06               	movwf	(??_digitalWrite+1)^0,c
  4296  00119A  2A05               	incf	??_digitalWrite^0,f,c
  4297  00119C  EFD2  F008         	goto	u1834
  4298  0011A0                     u1835:
  4299  0011A0  90D8               	bcf	status,0,c
  4300  0011A2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4301  0011A4                     u1834:
  4302  0011A4  2E05               	decfsz	??_digitalWrite^0,f,c
  4303  0011A6  EFD0  F008         	goto	u1835
  4304  0011AA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4305  0011AC  1280               	iorwf	128,f,c	;volatile
  4306  0011AE  EFD8  F009         	goto	l135
  4307  0011B2                     l2038:
  4308  0011B2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4309  0011B6  0E01               	movlw	1
  4310  0011B8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4311  0011BA  2A05               	incf	??_digitalWrite^0,f,c
  4312  0011BC  EFE2  F008         	goto	u1844
  4313  0011C0                     u1845:
  4314  0011C0  90D8               	bcf	status,0,c
  4315  0011C2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4316  0011C4                     u1844:
  4317  0011C4  2E05               	decfsz	??_digitalWrite^0,f,c
  4318  0011C6  EFE0  F008         	goto	u1845
  4319  0011CA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4320  0011CC  0AFF               	xorlw	255
  4321  0011CE  1680               	andwf	128,f,c	;volatile
  4322  0011D0  EFD8  F009         	goto	l135
  4323  0011D4                     l2040:
  4324  0011D4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4325  0011D6  EFF8  F008         	goto	u1850
  4326  0011DA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4327  0011DC  E107               	bnz	u1851
  4328  0011DE  0E10               	movlw	16
  4329  0011E0  5C01               	subwf	digitalWrite@pin^0,w,c
  4330  0011E2  B0D8               	btfsc	status,0,c
  4331  0011E4  EFF6  F008         	goto	u1851
  4332  0011E8  EFF8  F008         	goto	u1850
  4333  0011EC                     u1851:
  4334  0011EC  EF26  F009         	goto	l2048
  4335  0011F0                     u1850:
  4336  0011F0                     
  4337                           ;io.c: 20:         pin -=8;
  4338  0011F0  0EF8               	movlw	248
  4339  0011F2  2601               	addwf	digitalWrite@pin^0,f,c
  4340  0011F4  0EFF               	movlw	255
  4341  0011F6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4342                           
  4343                           ;io.c: 21:         if (value){ ((PORTB) |= (1<<(pin)));}
  4344  0011F8  5003               	movf	digitalWrite@value^0,w,c
  4345  0011FA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4346  0011FC  B4D8               	btfsc	status,2,c
  4347  0011FE  EF03  F009         	goto	u1861
  4348  001202  EF05  F009         	goto	u1860
  4349  001206                     u1861:
  4350  001206  EF15  F009         	goto	l2046
  4351  00120A                     u1860:
  4352  00120A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4353  00120E  0E01               	movlw	1
  4354  001210  6E06               	movwf	(??_digitalWrite+1)^0,c
  4355  001212  2A05               	incf	??_digitalWrite^0,f,c
  4356  001214  EF0E  F009         	goto	u1874
  4357  001218                     u1875:
  4358  001218  90D8               	bcf	status,0,c
  4359  00121A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4360  00121C                     u1874:
  4361  00121C  2E05               	decfsz	??_digitalWrite^0,f,c
  4362  00121E  EF0C  F009         	goto	u1875
  4363  001222  5006               	movf	(??_digitalWrite+1)^0,w,c
  4364  001224  1281               	iorwf	129,f,c	;volatile
  4365  001226  EFD8  F009         	goto	l135
  4366  00122A                     l2046:
  4367  00122A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4368  00122E  0E01               	movlw	1
  4369  001230  6E06               	movwf	(??_digitalWrite+1)^0,c
  4370  001232  2A05               	incf	??_digitalWrite^0,f,c
  4371  001234  EF1E  F009         	goto	u1884
  4372  001238                     u1885:
  4373  001238  90D8               	bcf	status,0,c
  4374  00123A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4375  00123C                     u1884:
  4376  00123C  2E05               	decfsz	??_digitalWrite^0,f,c
  4377  00123E  EF1C  F009         	goto	u1885
  4378  001242  5006               	movf	(??_digitalWrite+1)^0,w,c
  4379  001244  0AFF               	xorlw	255
  4380  001246  1681               	andwf	129,f,c	;volatile
  4381  001248  EFD8  F009         	goto	l135
  4382  00124C                     l2048:
  4383  00124C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4384  00124E  EF34  F009         	goto	u1890
  4385  001252  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4386  001254  E107               	bnz	u1891
  4387  001256  0E18               	movlw	24
  4388  001258  5C01               	subwf	digitalWrite@pin^0,w,c
  4389  00125A  B0D8               	btfsc	status,0,c
  4390  00125C  EF32  F009         	goto	u1891
  4391  001260  EF34  F009         	goto	u1890
  4392  001264                     u1891:
  4393  001264  EF62  F009         	goto	l2056
  4394  001268                     u1890:
  4395  001268                     
  4396                           ;io.c: 24:         pin -=16;
  4397  001268  0EF0               	movlw	240
  4398  00126A  2601               	addwf	digitalWrite@pin^0,f,c
  4399  00126C  0EFF               	movlw	255
  4400  00126E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4401                           
  4402                           ;io.c: 25:         if (value){ ((PORTC) |= (1<<(pin)));}
  4403  001270  5003               	movf	digitalWrite@value^0,w,c
  4404  001272  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4405  001274  B4D8               	btfsc	status,2,c
  4406  001276  EF3F  F009         	goto	u1901
  4407  00127A  EF41  F009         	goto	u1900
  4408  00127E                     u1901:
  4409  00127E  EF51  F009         	goto	l2054
  4410  001282                     u1900:
  4411  001282  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4412  001286  0E01               	movlw	1
  4413  001288  6E06               	movwf	(??_digitalWrite+1)^0,c
  4414  00128A  2A05               	incf	??_digitalWrite^0,f,c
  4415  00128C  EF4A  F009         	goto	u1914
  4416  001290                     u1915:
  4417  001290  90D8               	bcf	status,0,c
  4418  001292  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4419  001294                     u1914:
  4420  001294  2E05               	decfsz	??_digitalWrite^0,f,c
  4421  001296  EF48  F009         	goto	u1915
  4422  00129A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4423  00129C  1282               	iorwf	130,f,c	;volatile
  4424  00129E  EFD8  F009         	goto	l135
  4425  0012A2                     l2054:
  4426  0012A2  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4427  0012A6  0E01               	movlw	1
  4428  0012A8  6E06               	movwf	(??_digitalWrite+1)^0,c
  4429  0012AA  2A05               	incf	??_digitalWrite^0,f,c
  4430  0012AC  EF5A  F009         	goto	u1924
  4431  0012B0                     u1925:
  4432  0012B0  90D8               	bcf	status,0,c
  4433  0012B2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4434  0012B4                     u1924:
  4435  0012B4  2E05               	decfsz	??_digitalWrite^0,f,c
  4436  0012B6  EF58  F009         	goto	u1925
  4437  0012BA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4438  0012BC  0AFF               	xorlw	255
  4439  0012BE  1682               	andwf	130,f,c	;volatile
  4440  0012C0  EFD8  F009         	goto	l135
  4441  0012C4                     l2056:
  4442  0012C4  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4443  0012C6  EF70  F009         	goto	u1930
  4444  0012CA  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4445  0012CC  E107               	bnz	u1931
  4446  0012CE  0E20               	movlw	32
  4447  0012D0  5C01               	subwf	digitalWrite@pin^0,w,c
  4448  0012D2  B0D8               	btfsc	status,0,c
  4449  0012D4  EF6E  F009         	goto	u1931
  4450  0012D8  EF70  F009         	goto	u1930
  4451  0012DC                     u1931:
  4452  0012DC  EF9E  F009         	goto	l2064
  4453  0012E0                     u1930:
  4454  0012E0                     
  4455                           ;io.c: 28:         pin -=24;
  4456  0012E0  0EE8               	movlw	232
  4457  0012E2  2601               	addwf	digitalWrite@pin^0,f,c
  4458  0012E4  0EFF               	movlw	255
  4459  0012E6  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4460                           
  4461                           ;io.c: 29:         if (value){ ((PORTD) |= (1<<(pin)));}
  4462  0012E8  5003               	movf	digitalWrite@value^0,w,c
  4463  0012EA  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4464  0012EC  B4D8               	btfsc	status,2,c
  4465  0012EE  EF7B  F009         	goto	u1941
  4466  0012F2  EF7D  F009         	goto	u1940
  4467  0012F6                     u1941:
  4468  0012F6  EF8D  F009         	goto	l2062
  4469  0012FA                     u1940:
  4470  0012FA  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4471  0012FE  0E01               	movlw	1
  4472  001300  6E06               	movwf	(??_digitalWrite+1)^0,c
  4473  001302  2A05               	incf	??_digitalWrite^0,f,c
  4474  001304  EF86  F009         	goto	u1954
  4475  001308                     u1955:
  4476  001308  90D8               	bcf	status,0,c
  4477  00130A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4478  00130C                     u1954:
  4479  00130C  2E05               	decfsz	??_digitalWrite^0,f,c
  4480  00130E  EF84  F009         	goto	u1955
  4481  001312  5006               	movf	(??_digitalWrite+1)^0,w,c
  4482  001314  1283               	iorwf	131,f,c	;volatile
  4483  001316  EFD8  F009         	goto	l135
  4484  00131A                     l2062:
  4485  00131A  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4486  00131E  0E01               	movlw	1
  4487  001320  6E06               	movwf	(??_digitalWrite+1)^0,c
  4488  001322  2A05               	incf	??_digitalWrite^0,f,c
  4489  001324  EF96  F009         	goto	u1964
  4490  001328                     u1965:
  4491  001328  90D8               	bcf	status,0,c
  4492  00132A  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4493  00132C                     u1964:
  4494  00132C  2E05               	decfsz	??_digitalWrite^0,f,c
  4495  00132E  EF94  F009         	goto	u1965
  4496  001332  5006               	movf	(??_digitalWrite+1)^0,w,c
  4497  001334  0AFF               	xorlw	255
  4498  001336  1683               	andwf	131,f,c	;volatile
  4499  001338  EFD8  F009         	goto	l135
  4500  00133C                     l2064:
  4501  00133C  BE02               	btfsc	(digitalWrite@pin+1)^0,7,c
  4502  00133E  EFAC  F009         	goto	u1970
  4503  001342  5002               	movf	(digitalWrite@pin+1)^0,w,c
  4504  001344  E107               	bnz	u1971
  4505  001346  0E28               	movlw	40
  4506  001348  5C01               	subwf	digitalWrite@pin^0,w,c
  4507  00134A  B0D8               	btfsc	status,0,c
  4508  00134C  EFAA  F009         	goto	u1971
  4509  001350  EFAC  F009         	goto	u1970
  4510  001354                     u1971:
  4511  001354  EFD8  F009         	goto	l135
  4512  001358                     u1970:
  4513  001358                     
  4514                           ;io.c: 32:         pin -=32;
  4515  001358  0EE0               	movlw	224
  4516  00135A  2601               	addwf	digitalWrite@pin^0,f,c
  4517  00135C  0EFF               	movlw	255
  4518  00135E  2202               	addwfc	(digitalWrite@pin+1)^0,f,c
  4519                           
  4520                           ;io.c: 33:         if (value){ ((PORTE) |= (1<<(pin)));}
  4521  001360  5003               	movf	digitalWrite@value^0,w,c
  4522  001362  1004               	iorwf	(digitalWrite@value+1)^0,w,c
  4523  001364  B4D8               	btfsc	status,2,c
  4524  001366  EFB7  F009         	goto	u1981
  4525  00136A  EFB9  F009         	goto	u1980
  4526  00136E                     u1981:
  4527  00136E  EFC9  F009         	goto	l2070
  4528  001372                     u1980:
  4529  001372  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4530  001376  0E01               	movlw	1
  4531  001378  6E06               	movwf	(??_digitalWrite+1)^0,c
  4532  00137A  2A05               	incf	??_digitalWrite^0,f,c
  4533  00137C  EFC2  F009         	goto	u1994
  4534  001380                     u1995:
  4535  001380  90D8               	bcf	status,0,c
  4536  001382  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4537  001384                     u1994:
  4538  001384  2E05               	decfsz	??_digitalWrite^0,f,c
  4539  001386  EFC0  F009         	goto	u1995
  4540  00138A  5006               	movf	(??_digitalWrite+1)^0,w,c
  4541  00138C  1284               	iorwf	132,f,c	;volatile
  4542  00138E  EFD8  F009         	goto	l135
  4543  001392                     l2070:
  4544  001392  C001  F005         	movff	digitalWrite@pin,??_digitalWrite
  4545  001396  0E01               	movlw	1
  4546  001398  6E06               	movwf	(??_digitalWrite+1)^0,c
  4547  00139A  2A05               	incf	??_digitalWrite^0,f,c
  4548  00139C  EFD2  F009         	goto	u2004
  4549  0013A0                     u2005:
  4550  0013A0  90D8               	bcf	status,0,c
  4551  0013A2  3606               	rlcf	(??_digitalWrite+1)^0,f,c
  4552  0013A4                     u2004:
  4553  0013A4  2E05               	decfsz	??_digitalWrite^0,f,c
  4554  0013A6  EFD0  F009         	goto	u2005
  4555  0013AA  5006               	movf	(??_digitalWrite+1)^0,w,c
  4556  0013AC  0AFF               	xorlw	255
  4557  0013AE  1684               	andwf	132,f,c	;volatile
  4558  0013B0                     l135:
  4559  0013B0  0012               	return		;funcret
  4560  0013B2                     __end_of_digitalWrite:
  4561                           	callstack 0
  4562                           
  4563 ;; *************** function _digitalRead *****************
  4564 ;; Defined at:
  4565 ;;		line 39 in file "io.c"
  4566 ;; Parameters:    Size  Location     Type
  4567 ;;  pin             2    0[COMRAM] int 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;		None
  4570 ;; Return value:  Size  Location     Type
  4571 ;;                  2    0[COMRAM] int 
  4572 ;; Registers used:
  4573 ;;		wreg, status,2, status,0
  4574 ;; Tracked objects:
  4575 ;;		On entry : 0/0
  4576 ;;		On exit  : 0/0
  4577 ;;		Unchanged: 0/0
  4578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4579 ;;      Params:         2       0       0       0       0       0       0
  4580 ;;      Locals:         0       0       0       0       0       0       0
  4581 ;;      Temps:          3       0       0       0       0       0       0
  4582 ;;      Totals:         5       0       0       0       0       0       0
  4583 ;;Total ram usage:        5 bytes
  4584 ;; Hardware stack levels used: 1
  4585 ;; This function calls:
  4586 ;;		Nothing
  4587 ;; This function is called by:
  4588 ;;		_kpDebounce
  4589 ;; This function uses a non-reentrant model
  4590 ;;
  4591                           
  4592                           	psect	text31
  4593  00176C                     __ptext31:
  4594                           	callstack 0
  4595  00176C                     _digitalRead:
  4596                           	callstack 29
  4597  00176C                     
  4598                           ;io.c: 40:     if(pin <8){
  4599  00176C  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4600  00176E  EFC4  F00B         	goto	u2290
  4601  001772  5002               	movf	(digitalRead@pin+1)^0,w,c
  4602  001774  E107               	bnz	u2291
  4603  001776  0E08               	movlw	8
  4604  001778  5C01               	subwf	digitalRead@pin^0,w,c
  4605  00177A  B0D8               	btfsc	status,0,c
  4606  00177C  EFC2  F00B         	goto	u2291
  4607  001780  EFC4  F00B         	goto	u2290
  4608  001784                     u2291:
  4609  001784  EFD8  F00B         	goto	l2204
  4610  001788                     u2290:
  4611  001788                     
  4612                           ;io.c: 41:         return ((PORTA) & (1<<(pin)));
  4613  001788  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4614  00178C  0E01               	movlw	1
  4615  00178E  6E04               	movwf	(??_digitalRead+1)^0,c
  4616  001790  2A03               	incf	??_digitalRead^0,f,c
  4617  001792  EFCD  F00B         	goto	u2304
  4618  001796                     u2305:
  4619  001796  90D8               	bcf	status,0,c
  4620  001798  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4621  00179A                     u2304:
  4622  00179A  2E03               	decfsz	??_digitalRead^0,f,c
  4623  00179C  EFCB  F00B         	goto	u2305
  4624  0017A0  5004               	movf	(??_digitalRead+1)^0,w,c
  4625  0017A2  1480               	andwf	128,w,c	;volatile
  4626  0017A4  6E05               	movwf	(??_digitalRead+2)^0,c
  4627  0017A6  5005               	movf	(??_digitalRead+2)^0,w,c
  4628  0017A8  6E01               	movwf	?_digitalRead^0,c
  4629  0017AA  6A02               	clrf	(?_digitalRead+1)^0,c
  4630  0017AC  EF6A  F00C         	goto	l139
  4631  0017B0                     l2204:
  4632  0017B0  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4633  0017B2  EFE6  F00B         	goto	u2310
  4634  0017B6  5002               	movf	(digitalRead@pin+1)^0,w,c
  4635  0017B8  E107               	bnz	u2311
  4636  0017BA  0E10               	movlw	16
  4637  0017BC  5C01               	subwf	digitalRead@pin^0,w,c
  4638  0017BE  B0D8               	btfsc	status,0,c
  4639  0017C0  EFE4  F00B         	goto	u2311
  4640  0017C4  EFE6  F00B         	goto	u2310
  4641  0017C8                     u2311:
  4642  0017C8  EFFC  F00B         	goto	l2212
  4643  0017CC                     u2310:
  4644  0017CC                     
  4645                           ;io.c: 43:         return ((PORTB) & (1<<(pin-8)));
  4646  0017CC  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4647  0017D0  0EF8               	movlw	-8
  4648  0017D2  2603               	addwf	??_digitalRead^0,f,c
  4649  0017D4  0E01               	movlw	1
  4650  0017D6  6E04               	movwf	(??_digitalRead+1)^0,c
  4651  0017D8  2A03               	incf	??_digitalRead^0,f,c
  4652  0017DA  EFF1  F00B         	goto	u2324
  4653  0017DE                     u2325:
  4654  0017DE  90D8               	bcf	status,0,c
  4655  0017E0  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4656  0017E2                     u2324:
  4657  0017E2  2E03               	decfsz	??_digitalRead^0,f,c
  4658  0017E4  EFEF  F00B         	goto	u2325
  4659  0017E8  5004               	movf	(??_digitalRead+1)^0,w,c
  4660  0017EA  1481               	andwf	129,w,c	;volatile
  4661  0017EC  6E05               	movwf	(??_digitalRead+2)^0,c
  4662  0017EE  5005               	movf	(??_digitalRead+2)^0,w,c
  4663  0017F0  6E01               	movwf	?_digitalRead^0,c
  4664  0017F2  6A02               	clrf	(?_digitalRead+1)^0,c
  4665  0017F4  EF6A  F00C         	goto	l139
  4666  0017F8                     l2212:
  4667  0017F8  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4668  0017FA  EF0A  F00C         	goto	u2330
  4669  0017FE  5002               	movf	(digitalRead@pin+1)^0,w,c
  4670  001800  E107               	bnz	u2331
  4671  001802  0E18               	movlw	24
  4672  001804  5C01               	subwf	digitalRead@pin^0,w,c
  4673  001806  B0D8               	btfsc	status,0,c
  4674  001808  EF08  F00C         	goto	u2331
  4675  00180C  EF0A  F00C         	goto	u2330
  4676  001810                     u2331:
  4677  001810  EF20  F00C         	goto	l2220
  4678  001814                     u2330:
  4679  001814                     
  4680                           ;io.c: 45:         return ((PORTC) & (1<<(pin-16)));
  4681  001814  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4682  001818  0EF0               	movlw	-16
  4683  00181A  2603               	addwf	??_digitalRead^0,f,c
  4684  00181C  0E01               	movlw	1
  4685  00181E  6E04               	movwf	(??_digitalRead+1)^0,c
  4686  001820  2A03               	incf	??_digitalRead^0,f,c
  4687  001822  EF15  F00C         	goto	u2344
  4688  001826                     u2345:
  4689  001826  90D8               	bcf	status,0,c
  4690  001828  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4691  00182A                     u2344:
  4692  00182A  2E03               	decfsz	??_digitalRead^0,f,c
  4693  00182C  EF13  F00C         	goto	u2345
  4694  001830  5004               	movf	(??_digitalRead+1)^0,w,c
  4695  001832  1482               	andwf	130,w,c	;volatile
  4696  001834  6E05               	movwf	(??_digitalRead+2)^0,c
  4697  001836  5005               	movf	(??_digitalRead+2)^0,w,c
  4698  001838  6E01               	movwf	?_digitalRead^0,c
  4699  00183A  6A02               	clrf	(?_digitalRead+1)^0,c
  4700  00183C  EF6A  F00C         	goto	l139
  4701  001840                     l2220:
  4702  001840  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4703  001842  EF2E  F00C         	goto	u2350
  4704  001846  5002               	movf	(digitalRead@pin+1)^0,w,c
  4705  001848  E107               	bnz	u2351
  4706  00184A  0E20               	movlw	32
  4707  00184C  5C01               	subwf	digitalRead@pin^0,w,c
  4708  00184E  B0D8               	btfsc	status,0,c
  4709  001850  EF2C  F00C         	goto	u2351
  4710  001854  EF2E  F00C         	goto	u2350
  4711  001858                     u2351:
  4712  001858  EF44  F00C         	goto	l2228
  4713  00185C                     u2350:
  4714  00185C                     
  4715                           ;io.c: 47:         return ((PORTD) & (1<<(pin-24)));
  4716  00185C  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4717  001860  0EE8               	movlw	-24
  4718  001862  2603               	addwf	??_digitalRead^0,f,c
  4719  001864  0E01               	movlw	1
  4720  001866  6E04               	movwf	(??_digitalRead+1)^0,c
  4721  001868  2A03               	incf	??_digitalRead^0,f,c
  4722  00186A  EF39  F00C         	goto	u2364
  4723  00186E                     u2365:
  4724  00186E  90D8               	bcf	status,0,c
  4725  001870  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4726  001872                     u2364:
  4727  001872  2E03               	decfsz	??_digitalRead^0,f,c
  4728  001874  EF37  F00C         	goto	u2365
  4729  001878  5004               	movf	(??_digitalRead+1)^0,w,c
  4730  00187A  1483               	andwf	131,w,c	;volatile
  4731  00187C  6E05               	movwf	(??_digitalRead+2)^0,c
  4732  00187E  5005               	movf	(??_digitalRead+2)^0,w,c
  4733  001880  6E01               	movwf	?_digitalRead^0,c
  4734  001882  6A02               	clrf	(?_digitalRead+1)^0,c
  4735  001884  EF6A  F00C         	goto	l139
  4736  001888                     l2228:
  4737  001888  BE02               	btfsc	(digitalRead@pin+1)^0,7,c
  4738  00188A  EF52  F00C         	goto	u2370
  4739  00188E  5002               	movf	(digitalRead@pin+1)^0,w,c
  4740  001890  E107               	bnz	u2371
  4741  001892  0E28               	movlw	40
  4742  001894  5C01               	subwf	digitalRead@pin^0,w,c
  4743  001896  B0D8               	btfsc	status,0,c
  4744  001898  EF50  F00C         	goto	u2371
  4745  00189C  EF52  F00C         	goto	u2370
  4746  0018A0                     u2371:
  4747  0018A0  EF68  F00C         	goto	l144
  4748  0018A4                     u2370:
  4749  0018A4                     
  4750                           ;io.c: 49:         return ((PORTE) & (1<<(pin-32)));
  4751  0018A4  C001  F003         	movff	digitalRead@pin,??_digitalRead
  4752  0018A8  0EE0               	movlw	-32
  4753  0018AA  2603               	addwf	??_digitalRead^0,f,c
  4754  0018AC  0E01               	movlw	1
  4755  0018AE  6E04               	movwf	(??_digitalRead+1)^0,c
  4756  0018B0  2A03               	incf	??_digitalRead^0,f,c
  4757  0018B2  EF5D  F00C         	goto	u2384
  4758  0018B6                     u2385:
  4759  0018B6  90D8               	bcf	status,0,c
  4760  0018B8  3604               	rlcf	(??_digitalRead+1)^0,f,c
  4761  0018BA                     u2384:
  4762  0018BA  2E03               	decfsz	??_digitalRead^0,f,c
  4763  0018BC  EF5B  F00C         	goto	u2385
  4764  0018C0  5004               	movf	(??_digitalRead+1)^0,w,c
  4765  0018C2  1484               	andwf	132,w,c	;volatile
  4766  0018C4  6E05               	movwf	(??_digitalRead+2)^0,c
  4767  0018C6  5005               	movf	(??_digitalRead+2)^0,w,c
  4768  0018C8  6E01               	movwf	?_digitalRead^0,c
  4769  0018CA  6A02               	clrf	(?_digitalRead+1)^0,c
  4770  0018CC  EF6A  F00C         	goto	l139
  4771  0018D0                     l144:
  4772  0018D0                     
  4773                           ;io.c: 51:     return -1;
  4774  0018D0  6801               	setf	?_digitalRead^0,c
  4775  0018D2  6802               	setf	(?_digitalRead+1)^0,c
  4776  0018D4                     l139:
  4777  0018D4  0012               	return		;funcret
  4778  0018D6                     __end_of_digitalRead:
  4779                           	callstack 0
  4780                           
  4781 ;; *************** function _delay *****************
  4782 ;; Defined at:
  4783 ;;		line 10 in file "delay.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  x               2    0[COMRAM] int 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  k               1    3[COMRAM] volatile unsigned char 
  4788 ;;  j               1    2[COMRAM] volatile unsigned char 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, status,2, status,0
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4798 ;;      Params:         2       0       0       0       0       0       0
  4799 ;;      Locals:         2       0       0       0       0       0       0
  4800 ;;      Temps:          0       0       0       0       0       0       0
  4801 ;;      Totals:         4       0       0       0       0       0       0
  4802 ;;Total ram usage:        4 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text32
  4812  001F98                     __ptext32:
  4813                           	callstack 0
  4814  001F98                     _delay:
  4815                           	callstack 30
  4816  001F98                     
  4817                           ;delay.c: 11:     while(x>0){
  4818  001F98  EFEF  F00F         	goto	l2528
  4819  001F9C                     l2506:
  4820                           
  4821                           ;delay.c: 12:         volatile unsigned char j, k;;delay.c: 13:         for(j = 0; j < 4
      +                          1; j++) {
  4822  001F9C  0E00               	movlw	0
  4823  001F9E  6E03               	movwf	delay@j^0,c	;volatile
  4824  001FA0                     l2508:
  4825  001FA0  0E28               	movlw	40
  4826  001FA2  6403               	cpfsgt	delay@j^0,c	;volatile
  4827  001FA4  EFD6  F00F         	goto	u2701
  4828  001FA8  EFD8  F00F         	goto	u2700
  4829  001FAC                     u2701:
  4830  001FAC  EFDA  F00F         	goto	l2512
  4831  001FB0                     u2700:
  4832  001FB0  EFEC  F00F         	goto	l2526
  4833  001FB4                     l2512:
  4834                           
  4835                           ;delay.c: 14:             for(k = 0; k < 3; k++);
  4836  001FB4  0E00               	movlw	0
  4837  001FB6  6E04               	movwf	delay@k^0,c	;volatile
  4838  001FB8                     l2514:
  4839  001FB8  0E02               	movlw	2
  4840  001FBA  6404               	cpfsgt	delay@k^0,c	;volatile
  4841  001FBC  EFE2  F00F         	goto	u2711
  4842  001FC0  EFE4  F00F         	goto	u2710
  4843  001FC4                     u2711:
  4844  001FC4  EFE6  F00F         	goto	l2518
  4845  001FC8                     u2710:
  4846  001FC8  EFE9  F00F         	goto	l2522
  4847  001FCC                     l2518:
  4848  001FCC  2A04               	incf	delay@k^0,f,c	;volatile
  4849  001FCE  EFDC  F00F         	goto	l2514
  4850  001FD2                     l2522:
  4851                           
  4852                           ;delay.c: 15:         }
  4853  001FD2  2A03               	incf	delay@j^0,f,c	;volatile
  4854  001FD4  EFD0  F00F         	goto	l2508
  4855  001FD8                     l2526:
  4856                           
  4857                           ;delay.c: 16:         x--;
  4858  001FD8  0601               	decf	delay@x^0,f,c
  4859  001FDA  A0D8               	btfss	status,0,c
  4860  001FDC  0602               	decf	(delay@x+1)^0,f,c
  4861  001FDE                     l2528:
  4862                           
  4863                           ;delay.c: 11:     while(x>0){
  4864  001FDE  BE02               	btfsc	(delay@x+1)^0,7,c
  4865  001FE0  EFFC  F00F         	goto	u2720
  4866  001FE4  5002               	movf	(delay@x+1)^0,w,c
  4867  001FE6  E106               	bnz	u2721
  4868  001FE8  0401               	decf	delay@x^0,w,c
  4869  001FEA  B0D8               	btfsc	status,0,c
  4870  001FEC  EFFA  F00F         	goto	u2721
  4871  001FF0  EFFC  F00F         	goto	u2720
  4872  001FF4                     u2721:
  4873  001FF4  EFCE  F00F         	goto	l2506
  4874  001FF8                     u2720:
  4875  001FF8  0012               	return		;funcret
  4876  001FFA                     __end_of_delay:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function _adcInit *****************
  4880 ;; Defined at:
  4881 ;;		line 25 in file "adc.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;		None
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  1    wreg      void 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0, cstack
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4895 ;;      Params:         0       0       0       0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0
  4897 ;;      Temps:          0       0       0       0       0       0       0
  4898 ;;      Totals:         0       0       0       0       0       0       0
  4899 ;;Total ram usage:        0 bytes
  4900 ;; Hardware stack levels used: 1
  4901 ;; Hardware stack levels required when called: 1
  4902 ;; This function calls:
  4903 ;;		_pinMode
  4904 ;; This function is called by:
  4905 ;;		_main
  4906 ;; This function uses a non-reentrant model
  4907 ;;
  4908                           
  4909                           	psect	text33
  4910  0021A6                     __ptext33:
  4911                           	callstack 0
  4912  0021A6                     _adcInit:
  4913                           	callstack 29
  4914  0021A6                     
  4915                           ;adc.c: 27:     pinMode(PIN_A0, 1);
  4916  0021A6  0E00               	movlw	0
  4917  0021A8  6E02               	movwf	(pinMode@pin+1)^0,c
  4918  0021AA  0E00               	movlw	0
  4919  0021AC  6E01               	movwf	pinMode@pin^0,c
  4920  0021AE  0E00               	movlw	0
  4921  0021B0  6E04               	movwf	(pinMode@type+1)^0,c
  4922  0021B2  0E01               	movlw	1
  4923  0021B4  6E03               	movwf	pinMode@type^0,c
  4924  0021B6  ECD9  F009         	call	_pinMode	;wreg free
  4925                           
  4926                           ;adc.c: 28:     pinMode(PIN_A1, 1);
  4927  0021BA  0E00               	movlw	0
  4928  0021BC  6E02               	movwf	(pinMode@pin+1)^0,c
  4929  0021BE  0E01               	movlw	1
  4930  0021C0  6E01               	movwf	pinMode@pin^0,c
  4931  0021C2  0E00               	movlw	0
  4932  0021C4  6E04               	movwf	(pinMode@type+1)^0,c
  4933  0021C6  0E01               	movlw	1
  4934  0021C8  6E03               	movwf	pinMode@type^0,c
  4935  0021CA  ECD9  F009         	call	_pinMode	;wreg free
  4936                           
  4937                           ;adc.c: 29:     pinMode(PIN_A2, 1);
  4938  0021CE  0E00               	movlw	0
  4939  0021D0  6E02               	movwf	(pinMode@pin+1)^0,c
  4940  0021D2  0E02               	movlw	2
  4941  0021D4  6E01               	movwf	pinMode@pin^0,c
  4942  0021D6  0E00               	movlw	0
  4943  0021D8  6E04               	movwf	(pinMode@type+1)^0,c
  4944  0021DA  0E01               	movlw	1
  4945  0021DC  6E03               	movwf	pinMode@type^0,c
  4946  0021DE  ECD9  F009         	call	_pinMode	;wreg free
  4947  0021E2                     
  4948                           ;adc.c: 31:     ((ADCON0) |= (1<<(0)));
  4949  0021E2  80C2               	bsf	194,0,c	;volatile
  4950  0021E4                     
  4951                           ;adc.c: 33:     ADCON1 = 0b00001100;
  4952  0021E4  0E0C               	movlw	12
  4953  0021E6  6EC1               	movwf	193,c	;volatile
  4954  0021E8                     
  4955                           ;adc.c: 34:     ADCON2 = 0b10101010;
  4956  0021E8  0EAA               	movlw	170
  4957  0021EA  6EC0               	movwf	192,c	;volatile
  4958  0021EC  0012               	return		;funcret
  4959  0021EE                     __end_of_adcInit:
  4960                           	callstack 0
  4961                           
  4962 ;; *************** function _pinMode *****************
  4963 ;; Defined at:
  4964 ;;		line 54 in file "io.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;  pin             2    0[COMRAM] int 
  4967 ;;  type            2    2[COMRAM] int 
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, status,2, status,0
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4979 ;;      Params:         4       0       0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0       0       0
  4981 ;;      Temps:          2       0       0       0       0       0       0
  4982 ;;      Totals:         6       0       0       0       0       0       0
  4983 ;;Total ram usage:        6 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; This function calls:
  4986 ;;		Nothing
  4987 ;; This function is called by:
  4988 ;;		_adcInit
  4989 ;;		_kpInit
  4990 ;;		_lcdInit
  4991 ;;		_soInit
  4992 ;;		_ssdInit
  4993 ;; This function uses a non-reentrant model
  4994 ;;
  4995                           
  4996                           	psect	text34
  4997  0013B2                     __ptext34:
  4998                           	callstack 0
  4999  0013B2                     _pinMode:
  5000                           	callstack 28
  5001  0013B2                     
  5002                           ;io.c: 56:     if(pin <8){
  5003  0013B2  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5004  0013B4  EFE7  F009         	goto	u2020
  5005  0013B8  5002               	movf	(pinMode@pin+1)^0,w,c
  5006  0013BA  E107               	bnz	u2021
  5007  0013BC  0E08               	movlw	8
  5008  0013BE  5C01               	subwf	pinMode@pin^0,w,c
  5009  0013C0  B0D8               	btfsc	status,0,c
  5010  0013C2  EFE5  F009         	goto	u2021
  5011  0013C6  EFE7  F009         	goto	u2020
  5012  0013CA                     u2021:
  5013  0013CA  EF11  F00A         	goto	l2108
  5014  0013CE                     u2020:
  5015  0013CE                     
  5016                           ;io.c: 57:         if (type){ ((TRISA) |= (1<<(pin)));}
  5017  0013CE  5003               	movf	pinMode@type^0,w,c
  5018  0013D0  1004               	iorwf	(pinMode@type+1)^0,w,c
  5019  0013D2  B4D8               	btfsc	status,2,c
  5020  0013D4  EFEE  F009         	goto	u2031
  5021  0013D8  EFF0  F009         	goto	u2030
  5022  0013DC                     u2031:
  5023  0013DC  EF00  F00A         	goto	l2106
  5024  0013E0                     u2030:
  5025  0013E0  C001  F005         	movff	pinMode@pin,??_pinMode
  5026  0013E4  0E01               	movlw	1
  5027  0013E6  6E06               	movwf	(??_pinMode+1)^0,c
  5028  0013E8  2A05               	incf	??_pinMode^0,f,c
  5029  0013EA  EFF9  F009         	goto	u2044
  5030  0013EE                     u2045:
  5031  0013EE  90D8               	bcf	status,0,c
  5032  0013F0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5033  0013F2                     u2044:
  5034  0013F2  2E05               	decfsz	??_pinMode^0,f,c
  5035  0013F4  EFF7  F009         	goto	u2045
  5036  0013F8  5006               	movf	(??_pinMode+1)^0,w,c
  5037  0013FA  1292               	iorwf	146,f,c	;volatile
  5038  0013FC  EFFF  F00A         	goto	l169
  5039  001400                     l2106:
  5040  001400  C001  F005         	movff	pinMode@pin,??_pinMode
  5041  001404  0E01               	movlw	1
  5042  001406  6E06               	movwf	(??_pinMode+1)^0,c
  5043  001408  2A05               	incf	??_pinMode^0,f,c
  5044  00140A  EF09  F00A         	goto	u2054
  5045  00140E                     u2055:
  5046  00140E  90D8               	bcf	status,0,c
  5047  001410  3606               	rlcf	(??_pinMode+1)^0,f,c
  5048  001412                     u2054:
  5049  001412  2E05               	decfsz	??_pinMode^0,f,c
  5050  001414  EF07  F00A         	goto	u2055
  5051  001418  5006               	movf	(??_pinMode+1)^0,w,c
  5052  00141A  0AFF               	xorlw	255
  5053  00141C  1692               	andwf	146,f,c	;volatile
  5054  00141E  EFFF  F00A         	goto	l169
  5055  001422                     l2108:
  5056  001422  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5057  001424  EF1F  F00A         	goto	u2060
  5058  001428  5002               	movf	(pinMode@pin+1)^0,w,c
  5059  00142A  E107               	bnz	u2061
  5060  00142C  0E10               	movlw	16
  5061  00142E  5C01               	subwf	pinMode@pin^0,w,c
  5062  001430  B0D8               	btfsc	status,0,c
  5063  001432  EF1D  F00A         	goto	u2061
  5064  001436  EF1F  F00A         	goto	u2060
  5065  00143A                     u2061:
  5066  00143A  EF4D  F00A         	goto	l2116
  5067  00143E                     u2060:
  5068  00143E                     
  5069                           ;io.c: 60:         if (type){ ((TRISB) |= (1<<(pin-8)));}
  5070  00143E  5003               	movf	pinMode@type^0,w,c
  5071  001440  1004               	iorwf	(pinMode@type+1)^0,w,c
  5072  001442  B4D8               	btfsc	status,2,c
  5073  001444  EF26  F00A         	goto	u2071
  5074  001448  EF28  F00A         	goto	u2070
  5075  00144C                     u2071:
  5076  00144C  EF3A  F00A         	goto	l2114
  5077  001450                     u2070:
  5078  001450  C001  F005         	movff	pinMode@pin,??_pinMode
  5079  001454  0EF8               	movlw	-8
  5080  001456  2605               	addwf	??_pinMode^0,f,c
  5081  001458  0E01               	movlw	1
  5082  00145A  6E06               	movwf	(??_pinMode+1)^0,c
  5083  00145C  2A05               	incf	??_pinMode^0,f,c
  5084  00145E  EF33  F00A         	goto	u2084
  5085  001462                     u2085:
  5086  001462  90D8               	bcf	status,0,c
  5087  001464  3606               	rlcf	(??_pinMode+1)^0,f,c
  5088  001466                     u2084:
  5089  001466  2E05               	decfsz	??_pinMode^0,f,c
  5090  001468  EF31  F00A         	goto	u2085
  5091  00146C  5006               	movf	(??_pinMode+1)^0,w,c
  5092  00146E  1293               	iorwf	147,f,c	;volatile
  5093  001470  EFFF  F00A         	goto	l169
  5094  001474                     l2114:
  5095  001474  C001  F005         	movff	pinMode@pin,??_pinMode
  5096  001478  0EF8               	movlw	-8
  5097  00147A  2605               	addwf	??_pinMode^0,f,c
  5098  00147C  0E01               	movlw	1
  5099  00147E  6E06               	movwf	(??_pinMode+1)^0,c
  5100  001480  2A05               	incf	??_pinMode^0,f,c
  5101  001482  EF45  F00A         	goto	u2094
  5102  001486                     u2095:
  5103  001486  90D8               	bcf	status,0,c
  5104  001488  3606               	rlcf	(??_pinMode+1)^0,f,c
  5105  00148A                     u2094:
  5106  00148A  2E05               	decfsz	??_pinMode^0,f,c
  5107  00148C  EF43  F00A         	goto	u2095
  5108  001490  5006               	movf	(??_pinMode+1)^0,w,c
  5109  001492  0AFF               	xorlw	255
  5110  001494  1693               	andwf	147,f,c	;volatile
  5111  001496  EFFF  F00A         	goto	l169
  5112  00149A                     l2116:
  5113  00149A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5114  00149C  EF5B  F00A         	goto	u2100
  5115  0014A0  5002               	movf	(pinMode@pin+1)^0,w,c
  5116  0014A2  E107               	bnz	u2101
  5117  0014A4  0E18               	movlw	24
  5118  0014A6  5C01               	subwf	pinMode@pin^0,w,c
  5119  0014A8  B0D8               	btfsc	status,0,c
  5120  0014AA  EF59  F00A         	goto	u2101
  5121  0014AE  EF5B  F00A         	goto	u2100
  5122  0014B2                     u2101:
  5123  0014B2  EF89  F00A         	goto	l2124
  5124  0014B6                     u2100:
  5125  0014B6                     
  5126                           ;io.c: 63:         if (type){ ((TRISC) |= (1<<(pin-16)));}
  5127  0014B6  5003               	movf	pinMode@type^0,w,c
  5128  0014B8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5129  0014BA  B4D8               	btfsc	status,2,c
  5130  0014BC  EF62  F00A         	goto	u2111
  5131  0014C0  EF64  F00A         	goto	u2110
  5132  0014C4                     u2111:
  5133  0014C4  EF76  F00A         	goto	l2122
  5134  0014C8                     u2110:
  5135  0014C8  C001  F005         	movff	pinMode@pin,??_pinMode
  5136  0014CC  0EF0               	movlw	-16
  5137  0014CE  2605               	addwf	??_pinMode^0,f,c
  5138  0014D0  0E01               	movlw	1
  5139  0014D2  6E06               	movwf	(??_pinMode+1)^0,c
  5140  0014D4  2A05               	incf	??_pinMode^0,f,c
  5141  0014D6  EF6F  F00A         	goto	u2124
  5142  0014DA                     u2125:
  5143  0014DA  90D8               	bcf	status,0,c
  5144  0014DC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5145  0014DE                     u2124:
  5146  0014DE  2E05               	decfsz	??_pinMode^0,f,c
  5147  0014E0  EF6D  F00A         	goto	u2125
  5148  0014E4  5006               	movf	(??_pinMode+1)^0,w,c
  5149  0014E6  1294               	iorwf	148,f,c	;volatile
  5150  0014E8  EFFF  F00A         	goto	l169
  5151  0014EC                     l2122:
  5152  0014EC  C001  F005         	movff	pinMode@pin,??_pinMode
  5153  0014F0  0EF0               	movlw	-16
  5154  0014F2  2605               	addwf	??_pinMode^0,f,c
  5155  0014F4  0E01               	movlw	1
  5156  0014F6  6E06               	movwf	(??_pinMode+1)^0,c
  5157  0014F8  2A05               	incf	??_pinMode^0,f,c
  5158  0014FA  EF81  F00A         	goto	u2134
  5159  0014FE                     u2135:
  5160  0014FE  90D8               	bcf	status,0,c
  5161  001500  3606               	rlcf	(??_pinMode+1)^0,f,c
  5162  001502                     u2134:
  5163  001502  2E05               	decfsz	??_pinMode^0,f,c
  5164  001504  EF7F  F00A         	goto	u2135
  5165  001508  5006               	movf	(??_pinMode+1)^0,w,c
  5166  00150A  0AFF               	xorlw	255
  5167  00150C  1694               	andwf	148,f,c	;volatile
  5168  00150E  EFFF  F00A         	goto	l169
  5169  001512                     l2124:
  5170  001512  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5171  001514  EF97  F00A         	goto	u2140
  5172  001518  5002               	movf	(pinMode@pin+1)^0,w,c
  5173  00151A  E107               	bnz	u2141
  5174  00151C  0E20               	movlw	32
  5175  00151E  5C01               	subwf	pinMode@pin^0,w,c
  5176  001520  B0D8               	btfsc	status,0,c
  5177  001522  EF95  F00A         	goto	u2141
  5178  001526  EF97  F00A         	goto	u2140
  5179  00152A                     u2141:
  5180  00152A  EFC5  F00A         	goto	l2132
  5181  00152E                     u2140:
  5182  00152E                     
  5183                           ;io.c: 66:         if (type){ ((TRISD) |= (1<<(pin-24)));}
  5184  00152E  5003               	movf	pinMode@type^0,w,c
  5185  001530  1004               	iorwf	(pinMode@type+1)^0,w,c
  5186  001532  B4D8               	btfsc	status,2,c
  5187  001534  EF9E  F00A         	goto	u2151
  5188  001538  EFA0  F00A         	goto	u2150
  5189  00153C                     u2151:
  5190  00153C  EFB2  F00A         	goto	l2130
  5191  001540                     u2150:
  5192  001540  C001  F005         	movff	pinMode@pin,??_pinMode
  5193  001544  0EE8               	movlw	-24
  5194  001546  2605               	addwf	??_pinMode^0,f,c
  5195  001548  0E01               	movlw	1
  5196  00154A  6E06               	movwf	(??_pinMode+1)^0,c
  5197  00154C  2A05               	incf	??_pinMode^0,f,c
  5198  00154E  EFAB  F00A         	goto	u2164
  5199  001552                     u2165:
  5200  001552  90D8               	bcf	status,0,c
  5201  001554  3606               	rlcf	(??_pinMode+1)^0,f,c
  5202  001556                     u2164:
  5203  001556  2E05               	decfsz	??_pinMode^0,f,c
  5204  001558  EFA9  F00A         	goto	u2165
  5205  00155C  5006               	movf	(??_pinMode+1)^0,w,c
  5206  00155E  1295               	iorwf	149,f,c	;volatile
  5207  001560  EFFF  F00A         	goto	l169
  5208  001564                     l2130:
  5209  001564  C001  F005         	movff	pinMode@pin,??_pinMode
  5210  001568  0EE8               	movlw	-24
  5211  00156A  2605               	addwf	??_pinMode^0,f,c
  5212  00156C  0E01               	movlw	1
  5213  00156E  6E06               	movwf	(??_pinMode+1)^0,c
  5214  001570  2A05               	incf	??_pinMode^0,f,c
  5215  001572  EFBD  F00A         	goto	u2174
  5216  001576                     u2175:
  5217  001576  90D8               	bcf	status,0,c
  5218  001578  3606               	rlcf	(??_pinMode+1)^0,f,c
  5219  00157A                     u2174:
  5220  00157A  2E05               	decfsz	??_pinMode^0,f,c
  5221  00157C  EFBB  F00A         	goto	u2175
  5222  001580  5006               	movf	(??_pinMode+1)^0,w,c
  5223  001582  0AFF               	xorlw	255
  5224  001584  1695               	andwf	149,f,c	;volatile
  5225  001586  EFFF  F00A         	goto	l169
  5226  00158A                     l2132:
  5227  00158A  BE02               	btfsc	(pinMode@pin+1)^0,7,c
  5228  00158C  EFD3  F00A         	goto	u2180
  5229  001590  5002               	movf	(pinMode@pin+1)^0,w,c
  5230  001592  E107               	bnz	u2181
  5231  001594  0E28               	movlw	40
  5232  001596  5C01               	subwf	pinMode@pin^0,w,c
  5233  001598  B0D8               	btfsc	status,0,c
  5234  00159A  EFD1  F00A         	goto	u2181
  5235  00159E  EFD3  F00A         	goto	u2180
  5236  0015A2                     u2181:
  5237  0015A2  EFFF  F00A         	goto	l169
  5238  0015A6                     u2180:
  5239  0015A6                     
  5240                           ;io.c: 69:         if (type){ ((TRISE) |= (1<<(pin-32)));}
  5241  0015A6  5003               	movf	pinMode@type^0,w,c
  5242  0015A8  1004               	iorwf	(pinMode@type+1)^0,w,c
  5243  0015AA  B4D8               	btfsc	status,2,c
  5244  0015AC  EFDA  F00A         	goto	u2191
  5245  0015B0  EFDC  F00A         	goto	u2190
  5246  0015B4                     u2191:
  5247  0015B4  EFEE  F00A         	goto	l2138
  5248  0015B8                     u2190:
  5249  0015B8  C001  F005         	movff	pinMode@pin,??_pinMode
  5250  0015BC  0EE0               	movlw	-32
  5251  0015BE  2605               	addwf	??_pinMode^0,f,c
  5252  0015C0  0E01               	movlw	1
  5253  0015C2  6E06               	movwf	(??_pinMode+1)^0,c
  5254  0015C4  2A05               	incf	??_pinMode^0,f,c
  5255  0015C6  EFE7  F00A         	goto	u2204
  5256  0015CA                     u2205:
  5257  0015CA  90D8               	bcf	status,0,c
  5258  0015CC  3606               	rlcf	(??_pinMode+1)^0,f,c
  5259  0015CE                     u2204:
  5260  0015CE  2E05               	decfsz	??_pinMode^0,f,c
  5261  0015D0  EFE5  F00A         	goto	u2205
  5262  0015D4  5006               	movf	(??_pinMode+1)^0,w,c
  5263  0015D6  1296               	iorwf	150,f,c	;volatile
  5264  0015D8  EFFF  F00A         	goto	l169
  5265  0015DC                     l2138:
  5266  0015DC  C001  F005         	movff	pinMode@pin,??_pinMode
  5267  0015E0  0EE0               	movlw	-32
  5268  0015E2  2605               	addwf	??_pinMode^0,f,c
  5269  0015E4  0E01               	movlw	1
  5270  0015E6  6E06               	movwf	(??_pinMode+1)^0,c
  5271  0015E8  2A05               	incf	??_pinMode^0,f,c
  5272  0015EA  EFF9  F00A         	goto	u2214
  5273  0015EE                     u2215:
  5274  0015EE  90D8               	bcf	status,0,c
  5275  0015F0  3606               	rlcf	(??_pinMode+1)^0,f,c
  5276  0015F2                     u2214:
  5277  0015F2  2E05               	decfsz	??_pinMode^0,f,c
  5278  0015F4  EFF7  F00A         	goto	u2215
  5279  0015F8  5006               	movf	(??_pinMode+1)^0,w,c
  5280  0015FA  0AFF               	xorlw	255
  5281  0015FC  1696               	andwf	150,f,c	;volatile
  5282  0015FE                     l169:
  5283  0015FE  0012               	return		;funcret
  5284  001600                     __end_of_pinMode:
  5285                           	callstack 0
  5286                           
  5287 ;; *************** function ___flge *****************
  5288 ;; Defined at:
  5289 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  5290 ;; Parameters:    Size  Location     Type
  5291 ;;  ff1             4    0[COMRAM] void 
  5292 ;;  ff2             4    4[COMRAM] void 
  5293 ;; Auto vars:     Size  Location     Type
  5294 ;;		None
  5295 ;; Return value:  Size  Location     Type
  5296 ;;		None               void
  5297 ;; Registers used:
  5298 ;;		wreg, status,2, status,0
  5299 ;; Tracked objects:
  5300 ;;		On entry : 0/0
  5301 ;;		On exit  : 0/0
  5302 ;;		Unchanged: 0/0
  5303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5304 ;;      Params:         8       0       0       0       0       0       0
  5305 ;;      Locals:         0       0       0       0       0       0       0
  5306 ;;      Temps:          4       0       0       0       0       0       0
  5307 ;;      Totals:        12       0       0       0       0       0       0
  5308 ;;Total ram usage:       12 bytes
  5309 ;; Hardware stack levels used: 1
  5310 ;; This function calls:
  5311 ;;		Nothing
  5312 ;; This function is called by:
  5313 ;;		_main
  5314 ;; This function uses a non-reentrant model
  5315 ;;
  5316                           
  5317                           	psect	text35
  5318  001B18                     __ptext35:
  5319                           	callstack 0
  5320  001B18                     ___flge:
  5321                           	callstack 30
  5322  001B18  0E00               	movlw	0
  5323  001B1A  1401               	andwf	___flge@ff1^0,w,c
  5324  001B1C  6E09               	movwf	??___flge^0,c
  5325  001B1E  0E00               	movlw	0
  5326  001B20  1402               	andwf	(___flge@ff1+1)^0,w,c
  5327  001B22  6E0A               	movwf	(??___flge+1)^0,c
  5328  001B24  0E80               	movlw	128
  5329  001B26  1403               	andwf	(___flge@ff1+2)^0,w,c
  5330  001B28  6E0B               	movwf	(??___flge+2)^0,c
  5331  001B2A  0E7F               	movlw	127
  5332  001B2C  1404               	andwf	(___flge@ff1+3)^0,w,c
  5333  001B2E  6E0C               	movwf	(??___flge+3)^0,c
  5334  001B30  5009               	movf	??___flge^0,w,c
  5335  001B32  100A               	iorwf	(??___flge+1)^0,w,c
  5336  001B34  100B               	iorwf	(??___flge+2)^0,w,c
  5337  001B36  100C               	iorwf	(??___flge+3)^0,w,c
  5338  001B38  A4D8               	btfss	status,2,c
  5339  001B3A  EFA1  F00D         	goto	u3121
  5340  001B3E  EFA3  F00D         	goto	u3120
  5341  001B42                     u3121:
  5342  001B42  EFAB  F00D         	goto	l2736
  5343  001B46                     u3120:
  5344  001B46  0E00               	movlw	0
  5345  001B48  6E01               	movwf	___flge@ff1^0,c
  5346  001B4A  0E00               	movlw	0
  5347  001B4C  6E02               	movwf	(___flge@ff1+1)^0,c
  5348  001B4E  0E00               	movlw	0
  5349  001B50  6E03               	movwf	(___flge@ff1+2)^0,c
  5350  001B52  0E00               	movlw	0
  5351  001B54  6E04               	movwf	(___flge@ff1+3)^0,c
  5352  001B56                     l2736:
  5353  001B56  0E00               	movlw	0
  5354  001B58  1405               	andwf	___flge@ff2^0,w,c
  5355  001B5A  6E09               	movwf	??___flge^0,c
  5356  001B5C  0E00               	movlw	0
  5357  001B5E  1406               	andwf	(___flge@ff2+1)^0,w,c
  5358  001B60  6E0A               	movwf	(??___flge+1)^0,c
  5359  001B62  0E80               	movlw	128
  5360  001B64  1407               	andwf	(___flge@ff2+2)^0,w,c
  5361  001B66  6E0B               	movwf	(??___flge+2)^0,c
  5362  001B68  0E7F               	movlw	127
  5363  001B6A  1408               	andwf	(___flge@ff2+3)^0,w,c
  5364  001B6C  6E0C               	movwf	(??___flge+3)^0,c
  5365  001B6E  5009               	movf	??___flge^0,w,c
  5366  001B70  100A               	iorwf	(??___flge+1)^0,w,c
  5367  001B72  100B               	iorwf	(??___flge+2)^0,w,c
  5368  001B74  100C               	iorwf	(??___flge+3)^0,w,c
  5369  001B76  A4D8               	btfss	status,2,c
  5370  001B78  EFC0  F00D         	goto	u3131
  5371  001B7C  EFC2  F00D         	goto	u3130
  5372  001B80                     u3131:
  5373  001B80  EFCA  F00D         	goto	l2740
  5374  001B84                     u3130:
  5375  001B84  0E00               	movlw	0
  5376  001B86  6E05               	movwf	___flge@ff2^0,c
  5377  001B88  0E00               	movlw	0
  5378  001B8A  6E06               	movwf	(___flge@ff2+1)^0,c
  5379  001B8C  0E00               	movlw	0
  5380  001B8E  6E07               	movwf	(___flge@ff2+2)^0,c
  5381  001B90  0E00               	movlw	0
  5382  001B92  6E08               	movwf	(___flge@ff2+3)^0,c
  5383  001B94                     l2740:
  5384  001B94  AE04               	btfss	(___flge@ff1+3)^0,7,c
  5385  001B96  EFCF  F00D         	goto	u3141
  5386  001B9A  EFD1  F00D         	goto	u3140
  5387  001B9E                     u3141:
  5388  001B9E  EFDA  F00D         	goto	l2744
  5389  001BA2                     u3140:
  5390  001BA2  6C01               	negf	___flge@ff1^0,c
  5391  001BA4  1E02               	comf	(___flge@ff1+1)^0,f,c
  5392  001BA6  B0D8               	btfsc	status,0,c
  5393  001BA8  2A02               	incf	(___flge@ff1+1)^0,f,c
  5394  001BAA  1E03               	comf	(___flge@ff1+2)^0,f,c
  5395  001BAC  B0D8               	btfsc	status,0,c
  5396  001BAE  2A03               	incf	(___flge@ff1+2)^0,f,c
  5397  001BB0  0E80               	movlw	128
  5398  001BB2  5604               	subfwb	(___flge@ff1+3)^0,f,c
  5399  001BB4                     l2744:
  5400  001BB4  AE08               	btfss	(___flge@ff2+3)^0,7,c
  5401  001BB6  EFDF  F00D         	goto	u3151
  5402  001BBA  EFE1  F00D         	goto	u3150
  5403  001BBE                     u3151:
  5404  001BBE  EFEA  F00D         	goto	l618
  5405  001BC2                     u3150:
  5406  001BC2  6C05               	negf	___flge@ff2^0,c
  5407  001BC4  1E06               	comf	(___flge@ff2+1)^0,f,c
  5408  001BC6  B0D8               	btfsc	status,0,c
  5409  001BC8  2A06               	incf	(___flge@ff2+1)^0,f,c
  5410  001BCA  1E07               	comf	(___flge@ff2+2)^0,f,c
  5411  001BCC  B0D8               	btfsc	status,0,c
  5412  001BCE  2A07               	incf	(___flge@ff2+2)^0,f,c
  5413  001BD0  0E80               	movlw	128
  5414  001BD2  5608               	subfwb	(___flge@ff2+3)^0,f,c
  5415  001BD4                     l618:
  5416  001BD4  0E00               	movlw	0
  5417  001BD6  1A01               	xorwf	___flge@ff1^0,f,c
  5418  001BD8  0E00               	movlw	0
  5419  001BDA  1A02               	xorwf	(___flge@ff1+1)^0,f,c
  5420  001BDC  0E00               	movlw	0
  5421  001BDE  1A03               	xorwf	(___flge@ff1+2)^0,f,c
  5422  001BE0  0E80               	movlw	128
  5423  001BE2  1A04               	xorwf	(___flge@ff1+3)^0,f,c
  5424  001BE4  0E00               	movlw	0
  5425  001BE6  1A05               	xorwf	___flge@ff2^0,f,c
  5426  001BE8  0E00               	movlw	0
  5427  001BEA  1A06               	xorwf	(___flge@ff2+1)^0,f,c
  5428  001BEC  0E00               	movlw	0
  5429  001BEE  1A07               	xorwf	(___flge@ff2+2)^0,f,c
  5430  001BF0  0E80               	movlw	128
  5431  001BF2  1A08               	xorwf	(___flge@ff2+3)^0,f,c
  5432  001BF4  5005               	movf	___flge@ff2^0,w,c
  5433  001BF6  5C01               	subwf	___flge@ff1^0,w,c
  5434  001BF8  5006               	movf	(___flge@ff2+1)^0,w,c
  5435  001BFA  5802               	subwfb	(___flge@ff1+1)^0,w,c
  5436  001BFC  5007               	movf	(___flge@ff2+2)^0,w,c
  5437  001BFE  5803               	subwfb	(___flge@ff1+2)^0,w,c
  5438  001C00  5008               	movf	(___flge@ff2+3)^0,w,c
  5439  001C02  5804               	subwfb	(___flge@ff1+3)^0,w,c
  5440  001C04  B0D8               	btfsc	status,0,c
  5441  001C06  EF07  F00E         	goto	u3161
  5442  001C0A  EF09  F00E         	goto	u3160
  5443  001C0E                     u3161:
  5444  001C0E  EF0C  F00E         	goto	l2750
  5445  001C12                     u3160:
  5446  001C12  90D8               	bcf	status,0,c
  5447  001C14  EF0D  F00E         	goto	l623
  5448  001C18                     l2750:
  5449  001C18  80D8               	bsf	status,0,c
  5450  001C1A                     l623:
  5451  001C1A  0012               	return		;funcret
  5452  001C1C                     __end_of___flge:
  5453                           	callstack 0
  5454                           
  5455 ;; *************** function ___fladd *****************
  5456 ;; Defined at:
  5457 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  b               4    0[COMRAM] void 
  5460 ;;  a               4    4[COMRAM] void 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  grs             1   15[COMRAM] unsigned char 
  5463 ;;  bexp            1   14[COMRAM] unsigned char 
  5464 ;;  aexp            1   13[COMRAM] unsigned char 
  5465 ;;  signs           1   12[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  4    0[COMRAM] unsigned char 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2, status,0
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5475 ;;      Params:         8       0       0       0       0       0       0
  5476 ;;      Locals:         4       0       0       0       0       0       0
  5477 ;;      Temps:          4       0       0       0       0       0       0
  5478 ;;      Totals:        16       0       0       0       0       0       0
  5479 ;;Total ram usage:       16 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; This function calls:
  5482 ;;		Nothing
  5483 ;; This function is called by:
  5484 ;;		_main
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text36
  5489  000CA4                     __ptext36:
  5490                           	callstack 0
  5491  000CA4                     ___fladd:
  5492                           	callstack 30
  5493  000CA4  5004               	movf	(___fladd@b+3)^0,w,c
  5494  000CA6  0B80               	andlw	128
  5495  000CA8  6E0D               	movwf	___fladd@signs^0,c
  5496  000CAA  5004               	movf	(___fladd@b+3)^0,w,c
  5497  000CAC  2404               	addwf	(___fladd@b+3)^0,w,c
  5498  000CAE  6E0F               	movwf	___fladd@bexp^0,c
  5499  000CB0  AE03               	btfss	(___fladd@b+2)^0,7,c
  5500  000CB2  EF5D  F006         	goto	u2731
  5501  000CB6  EF5F  F006         	goto	u2730
  5502  000CBA                     u2731:
  5503  000CBA  EF60  F006         	goto	l2536
  5504  000CBE                     u2730:
  5505  000CBE  800F               	bsf	___fladd@bexp^0,0,c
  5506  000CC0                     l2536:
  5507  000CC0  500F               	movf	___fladd@bexp^0,w,c
  5508  000CC2  B4D8               	btfsc	status,2,c
  5509  000CC4  EF66  F006         	goto	u2741
  5510  000CC8  EF68  F006         	goto	u2740
  5511  000CCC                     u2741:
  5512  000CCC  EF7D  F006         	goto	l2546
  5513  000CD0                     u2740:
  5514  000CD0  280F               	incf	___fladd@bexp^0,w,c
  5515  000CD2  A4D8               	btfss	status,2,c
  5516  000CD4  EF6E  F006         	goto	u2751
  5517  000CD8  EF70  F006         	goto	u2750
  5518  000CDC                     u2751:
  5519  000CDC  EF78  F006         	goto	l2542
  5520  000CE0                     u2750:
  5521  000CE0  0E00               	movlw	0
  5522  000CE2  6E01               	movwf	___fladd@b^0,c
  5523  000CE4  0E00               	movlw	0
  5524  000CE6  6E02               	movwf	(___fladd@b+1)^0,c
  5525  000CE8  0E00               	movlw	0
  5526  000CEA  6E03               	movwf	(___fladd@b+2)^0,c
  5527  000CEC  0E00               	movlw	0
  5528  000CEE  6E04               	movwf	(___fladd@b+3)^0,c
  5529  000CF0                     l2542:
  5530  000CF0  8E03               	bsf	(___fladd@b+2)^0,7,c
  5531  000CF2  0E00               	movlw	0
  5532  000CF4  6E04               	movwf	(___fladd@b+3)^0,c
  5533  000CF6  EF85  F006         	goto	l2548
  5534  000CFA                     l2546:
  5535  000CFA  0E00               	movlw	0
  5536  000CFC  6E01               	movwf	___fladd@b^0,c
  5537  000CFE  0E00               	movlw	0
  5538  000D00  6E02               	movwf	(___fladd@b+1)^0,c
  5539  000D02  0E00               	movlw	0
  5540  000D04  6E03               	movwf	(___fladd@b+2)^0,c
  5541  000D06  0E00               	movlw	0
  5542  000D08  6E04               	movwf	(___fladd@b+3)^0,c
  5543  000D0A                     l2548:
  5544  000D0A  5008               	movf	(___fladd@a+3)^0,w,c
  5545  000D0C  0B80               	andlw	128
  5546  000D0E  6E0E               	movwf	___fladd@aexp^0,c
  5547  000D10  500D               	movf	___fladd@signs^0,w,c
  5548  000D12  180E               	xorwf	___fladd@aexp^0,w,c
  5549  000D14  B4D8               	btfsc	status,2,c
  5550  000D16  EF8F  F006         	goto	u2761
  5551  000D1A  EF91  F006         	goto	u2760
  5552  000D1E                     u2761:
  5553  000D1E  EF92  F006         	goto	l2554
  5554  000D22                     u2760:
  5555  000D22  8C0D               	bsf	___fladd@signs^0,6,c
  5556  000D24                     l2554:
  5557  000D24  5008               	movf	(___fladd@a+3)^0,w,c
  5558  000D26  2408               	addwf	(___fladd@a+3)^0,w,c
  5559  000D28  6E0E               	movwf	___fladd@aexp^0,c
  5560  000D2A  AE07               	btfss	(___fladd@a+2)^0,7,c
  5561  000D2C  EF9A  F006         	goto	u2771
  5562  000D30  EF9C  F006         	goto	u2770
  5563  000D34                     u2771:
  5564  000D34  EF9D  F006         	goto	l2560
  5565  000D38                     u2770:
  5566  000D38  800E               	bsf	___fladd@aexp^0,0,c
  5567  000D3A                     l2560:
  5568  000D3A  500E               	movf	___fladd@aexp^0,w,c
  5569  000D3C  B4D8               	btfsc	status,2,c
  5570  000D3E  EFA3  F006         	goto	u2781
  5571  000D42  EFA5  F006         	goto	u2780
  5572  000D46                     u2781:
  5573  000D46  EFBA  F006         	goto	l2570
  5574  000D4A                     u2780:
  5575  000D4A  280E               	incf	___fladd@aexp^0,w,c
  5576  000D4C  A4D8               	btfss	status,2,c
  5577  000D4E  EFAB  F006         	goto	u2791
  5578  000D52  EFAD  F006         	goto	u2790
  5579  000D56                     u2791:
  5580  000D56  EFB5  F006         	goto	l2566
  5581  000D5A                     u2790:
  5582  000D5A  0E00               	movlw	0
  5583  000D5C  6E05               	movwf	___fladd@a^0,c
  5584  000D5E  0E00               	movlw	0
  5585  000D60  6E06               	movwf	(___fladd@a+1)^0,c
  5586  000D62  0E00               	movlw	0
  5587  000D64  6E07               	movwf	(___fladd@a+2)^0,c
  5588  000D66  0E00               	movlw	0
  5589  000D68  6E08               	movwf	(___fladd@a+3)^0,c
  5590  000D6A                     l2566:
  5591  000D6A  8E07               	bsf	(___fladd@a+2)^0,7,c
  5592  000D6C  0E00               	movlw	0
  5593  000D6E  6E08               	movwf	(___fladd@a+3)^0,c
  5594  000D70  EFC2  F006         	goto	l2572
  5595  000D74                     l2570:
  5596  000D74  0E00               	movlw	0
  5597  000D76  6E05               	movwf	___fladd@a^0,c
  5598  000D78  0E00               	movlw	0
  5599  000D7A  6E06               	movwf	(___fladd@a+1)^0,c
  5600  000D7C  0E00               	movlw	0
  5601  000D7E  6E07               	movwf	(___fladd@a+2)^0,c
  5602  000D80  0E00               	movlw	0
  5603  000D82  6E08               	movwf	(___fladd@a+3)^0,c
  5604  000D84                     l2572:
  5605  000D84  500F               	movf	___fladd@bexp^0,w,c
  5606  000D86  5C0E               	subwf	___fladd@aexp^0,w,c
  5607  000D88  B0D8               	btfsc	status,0,c
  5608  000D8A  EFC9  F006         	goto	u2801
  5609  000D8E  EFCB  F006         	goto	u2800
  5610  000D92                     u2801:
  5611  000D92  EFF2  F006         	goto	l2608
  5612  000D96                     u2800:
  5613  000D96  AC0D               	btfss	___fladd@signs^0,6,c
  5614  000D98  EFD0  F006         	goto	u2811
  5615  000D9C  EFD2  F006         	goto	u2810
  5616  000DA0                     u2811:
  5617  000DA0  EFD4  F006         	goto	l2578
  5618  000DA4                     u2810:
  5619  000DA4  0E80               	movlw	128
  5620  000DA6  1A0D               	xorwf	___fladd@signs^0,f,c
  5621  000DA8                     l2578:
  5622  000DA8  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  5623  000DAC  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5624  000DB0  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  5625  000DB4  C001  F010         	movff	___fladd@b,___fladd@grs
  5626  000DB8  C005  F001         	movff	___fladd@a,___fladd@b
  5627  000DBC  C010  F005         	movff	___fladd@grs,___fladd@a
  5628  000DC0  C002  F010         	movff	___fladd@b+1,___fladd@grs
  5629  000DC4  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  5630  000DC8  C010  F006         	movff	___fladd@grs,___fladd@a+1
  5631  000DCC  C003  F010         	movff	___fladd@b+2,___fladd@grs
  5632  000DD0  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  5633  000DD4  C010  F007         	movff	___fladd@grs,___fladd@a+2
  5634  000DD8  C004  F010         	movff	___fladd@b+3,___fladd@grs
  5635  000DDC  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  5636  000DE0  C010  F008         	movff	___fladd@grs,___fladd@a+3
  5637  000DE4                     l2608:
  5638  000DE4  0E00               	movlw	0
  5639  000DE6  6E10               	movwf	___fladd@grs^0,c
  5640  000DE8  500F               	movf	___fladd@bexp^0,w,c
  5641  000DEA  C00E  F009         	movff	___fladd@aexp,??___fladd
  5642  000DEE  6A0A               	clrf	(??___fladd+1)^0,c
  5643  000DF0  5E09               	subwf	??___fladd^0,f,c
  5644  000DF2  0E00               	movlw	0
  5645  000DF4  5A0A               	subwfb	(??___fladd+1)^0,f,c
  5646  000DF6  BE0A               	btfsc	(??___fladd+1)^0,7,c
  5647  000DF8  EF07  F007         	goto	u2821
  5648  000DFC  500A               	movf	(??___fladd+1)^0,w,c
  5649  000DFE  E109               	bnz	u2820
  5650  000E00  0E1A               	movlw	26
  5651  000E02  5C09               	subwf	??___fladd^0,w,c
  5652  000E04  A0D8               	btfss	status,0,c
  5653  000E06  EF07  F007         	goto	u2821
  5654  000E0A  EF09  F007         	goto	u2820
  5655  000E0E                     u2821:
  5656  000E0E  EF40  F007         	goto	l882
  5657  000E12                     u2820:
  5658  000E12  5001               	movf	___fladd@b^0,w,c
  5659  000E14  1002               	iorwf	(___fladd@b+1)^0,w,c
  5660  000E16  1003               	iorwf	(___fladd@b+2)^0,w,c
  5661  000E18  1004               	iorwf	(___fladd@b+3)^0,w,c
  5662  000E1A  A4D8               	btfss	status,2,c
  5663  000E1C  EF12  F007         	goto	u2831
  5664  000E20  EF15  F007         	goto	u2830
  5665  000E24                     u2831:
  5666  000E24  0E01               	movlw	1
  5667  000E26  EF16  F007         	goto	u2840
  5668  000E2A                     u2830:
  5669  000E2A  0E00               	movlw	0
  5670  000E2C                     u2840:
  5671  000E2C  6E10               	movwf	___fladd@grs^0,c
  5672  000E2E  0E00               	movlw	0
  5673  000E30  6E01               	movwf	___fladd@b^0,c
  5674  000E32  0E00               	movlw	0
  5675  000E34  6E02               	movwf	(___fladd@b+1)^0,c
  5676  000E36  0E00               	movlw	0
  5677  000E38  6E03               	movwf	(___fladd@b+2)^0,c
  5678  000E3A  0E00               	movlw	0
  5679  000E3C  6E04               	movwf	(___fladd@b+3)^0,c
  5680  000E3E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  5681  000E42  EF49  F007         	goto	l881
  5682  000E46                     l883:
  5683  000E46  A010               	btfss	___fladd@grs^0,0,c
  5684  000E48  EF28  F007         	goto	u2851
  5685  000E4C  EF2A  F007         	goto	u2850
  5686  000E50                     u2851:
  5687  000E50  EF30  F007         	goto	l2620
  5688  000E54                     u2850:
  5689  000E54  90D8               	bcf	status,0,c
  5690  000E56  3010               	rrcf	___fladd@grs^0,w,c
  5691  000E58  0901               	iorlw	1
  5692  000E5A  6E10               	movwf	___fladd@grs^0,c
  5693  000E5C  EF32  F007         	goto	l2622
  5694  000E60                     l2620:
  5695  000E60  90D8               	bcf	status,0,c
  5696  000E62  3210               	rrcf	___fladd@grs^0,f,c
  5697  000E64                     l2622:
  5698  000E64  A001               	btfss	___fladd@b^0,0,c
  5699  000E66  EF37  F007         	goto	u2861
  5700  000E6A  EF39  F007         	goto	u2860
  5701  000E6E                     u2861:
  5702  000E6E  EF3A  F007         	goto	l2626
  5703  000E72                     u2860:
  5704  000E72  8E10               	bsf	___fladd@grs^0,7,c
  5705  000E74                     l2626:
  5706  000E74  3404               	rlcf	(___fladd@b+3)^0,w,c
  5707  000E76  3204               	rrcf	(___fladd@b+3)^0,f,c
  5708  000E78  3203               	rrcf	(___fladd@b+2)^0,f,c
  5709  000E7A  3202               	rrcf	(___fladd@b+1)^0,f,c
  5710  000E7C  3201               	rrcf	___fladd@b^0,f,c
  5711  000E7E  2A0F               	incf	___fladd@bexp^0,f,c
  5712  000E80                     l882:
  5713  000E80  500E               	movf	___fladd@aexp^0,w,c
  5714  000E82  5C0F               	subwf	___fladd@bexp^0,w,c
  5715  000E84  A0D8               	btfss	status,0,c
  5716  000E86  EF47  F007         	goto	u2871
  5717  000E8A  EF49  F007         	goto	u2870
  5718  000E8E                     u2871:
  5719  000E8E  EF23  F007         	goto	l883
  5720  000E92                     u2870:
  5721  000E92                     l881:
  5722  000E92  BC0D               	btfsc	___fladd@signs^0,6,c
  5723  000E94  EF4E  F007         	goto	u2881
  5724  000E98  EF50  F007         	goto	u2880
  5725  000E9C                     u2881:
  5726  000E9C  EF90  F007         	goto	l2654
  5727  000EA0                     u2880:
  5728  000EA0  500F               	movf	___fladd@bexp^0,w,c
  5729  000EA2  A4D8               	btfss	status,2,c
  5730  000EA4  EF56  F007         	goto	u2891
  5731  000EA8  EF58  F007         	goto	u2890
  5732  000EAC                     u2891:
  5733  000EAC  EF62  F007         	goto	l2636
  5734  000EB0                     u2890:
  5735  000EB0  0E00               	movlw	0
  5736  000EB2  6E01               	movwf	?___fladd^0,c
  5737  000EB4  0E00               	movlw	0
  5738  000EB6  6E02               	movwf	(?___fladd+1)^0,c
  5739  000EB8  0E00               	movlw	0
  5740  000EBA  6E03               	movwf	(?___fladd+2)^0,c
  5741  000EBC  0E00               	movlw	0
  5742  000EBE  6E04               	movwf	(?___fladd+3)^0,c
  5743  000EC0  EFB1  F008         	goto	l890
  5744  000EC4                     l2636:
  5745  000EC4  5005               	movf	___fladd@a^0,w,c
  5746  000EC6  2601               	addwf	___fladd@b^0,f,c
  5747  000EC8  5006               	movf	(___fladd@a+1)^0,w,c
  5748  000ECA  2202               	addwfc	(___fladd@b+1)^0,f,c
  5749  000ECC  5007               	movf	(___fladd@a+2)^0,w,c
  5750  000ECE  2203               	addwfc	(___fladd@b+2)^0,f,c
  5751  000ED0  5008               	movf	(___fladd@a+3)^0,w,c
  5752  000ED2  2204               	addwfc	(___fladd@b+3)^0,f,c
  5753  000ED4  A004               	btfss	(___fladd@b+3)^0,0,c
  5754  000ED6  EF6F  F007         	goto	u2901
  5755  000EDA  EF71  F007         	goto	u2900
  5756  000EDE                     u2901:
  5757  000EDE  EF1D  F008         	goto	l2690
  5758  000EE2                     u2900:
  5759  000EE2  A010               	btfss	___fladd@grs^0,0,c
  5760  000EE4  EF76  F007         	goto	u2911
  5761  000EE8  EF78  F007         	goto	u2910
  5762  000EEC                     u2911:
  5763  000EEC  EF7E  F007         	goto	l2644
  5764  000EF0                     u2910:
  5765  000EF0  90D8               	bcf	status,0,c
  5766  000EF2  3010               	rrcf	___fladd@grs^0,w,c
  5767  000EF4  0901               	iorlw	1
  5768  000EF6  6E10               	movwf	___fladd@grs^0,c
  5769  000EF8  EF80  F007         	goto	l2646
  5770  000EFC                     l2644:
  5771  000EFC  90D8               	bcf	status,0,c
  5772  000EFE  3210               	rrcf	___fladd@grs^0,f,c
  5773  000F00                     l2646:
  5774  000F00  A001               	btfss	___fladd@b^0,0,c
  5775  000F02  EF85  F007         	goto	u2921
  5776  000F06  EF87  F007         	goto	u2920
  5777  000F0A                     u2921:
  5778  000F0A  EF88  F007         	goto	l2650
  5779  000F0E                     u2920:
  5780  000F0E  8E10               	bsf	___fladd@grs^0,7,c
  5781  000F10                     l2650:
  5782  000F10  3404               	rlcf	(___fladd@b+3)^0,w,c
  5783  000F12  3204               	rrcf	(___fladd@b+3)^0,f,c
  5784  000F14  3203               	rrcf	(___fladd@b+2)^0,f,c
  5785  000F16  3202               	rrcf	(___fladd@b+1)^0,f,c
  5786  000F18  3201               	rrcf	___fladd@b^0,f,c
  5787  000F1A  2A0F               	incf	___fladd@bexp^0,f,c
  5788  000F1C  EF1D  F008         	goto	l2690
  5789  000F20                     l2654:
  5790  000F20  5005               	movf	___fladd@a^0,w,c
  5791  000F22  5C01               	subwf	___fladd@b^0,w,c
  5792  000F24  5006               	movf	(___fladd@a+1)^0,w,c
  5793  000F26  5802               	subwfb	(___fladd@b+1)^0,w,c
  5794  000F28  5007               	movf	(___fladd@a+2)^0,w,c
  5795  000F2A  5803               	subwfb	(___fladd@b+2)^0,w,c
  5796  000F2C  5004               	movf	(___fladd@b+3)^0,w,c
  5797  000F2E  0A80               	xorlw	128
  5798  000F30  6E09               	movwf	??___fladd^0,c
  5799  000F32  5008               	movf	(___fladd@a+3)^0,w,c
  5800  000F34  0A80               	xorlw	128
  5801  000F36  5809               	subwfb	??___fladd^0,w,c
  5802  000F38  B0D8               	btfsc	status,0,c
  5803  000F3A  EFA1  F007         	goto	u2931
  5804  000F3E  EFA3  F007         	goto	u2930
  5805  000F42                     u2931:
  5806  000F42  EFCE  F007         	goto	l2664
  5807  000F46                     u2930:
  5808  000F46  5001               	movf	___fladd@b^0,w,c
  5809  000F48  5C05               	subwf	___fladd@a^0,w,c
  5810  000F4A  6E09               	movwf	??___fladd^0,c
  5811  000F4C  5002               	movf	(___fladd@b+1)^0,w,c
  5812  000F4E  5806               	subwfb	(___fladd@a+1)^0,w,c
  5813  000F50  6E0A               	movwf	(??___fladd+1)^0,c
  5814  000F52  5003               	movf	(___fladd@b+2)^0,w,c
  5815  000F54  5807               	subwfb	(___fladd@a+2)^0,w,c
  5816  000F56  6E0B               	movwf	(??___fladd+2)^0,c
  5817  000F58  5004               	movf	(___fladd@b+3)^0,w,c
  5818  000F5A  5808               	subwfb	(___fladd@a+3)^0,w,c
  5819  000F5C  6E0C               	movwf	(??___fladd+3)^0,c
  5820  000F5E  0EFF               	movlw	255
  5821  000F60  2409               	addwf	??___fladd^0,w,c
  5822  000F62  6E01               	movwf	___fladd@b^0,c
  5823  000F64  0EFF               	movlw	255
  5824  000F66  200A               	addwfc	(??___fladd+1)^0,w,c
  5825  000F68  6E02               	movwf	(___fladd@b+1)^0,c
  5826  000F6A  0EFF               	movlw	255
  5827  000F6C  200B               	addwfc	(??___fladd+2)^0,w,c
  5828  000F6E  6E03               	movwf	(___fladd@b+2)^0,c
  5829  000F70  0EFF               	movlw	255
  5830  000F72  200C               	addwfc	(??___fladd+3)^0,w,c
  5831  000F74  6E04               	movwf	(___fladd@b+3)^0,c
  5832  000F76  0E80               	movlw	128
  5833  000F78  1A0D               	xorwf	___fladd@signs^0,f,c
  5834  000F7A  6C10               	negf	___fladd@grs^0,c
  5835  000F7C  5010               	movf	___fladd@grs^0,w,c
  5836  000F7E  A4D8               	btfss	status,2,c
  5837  000F80  EFC4  F007         	goto	u2941
  5838  000F84  EFC6  F007         	goto	u2940
  5839  000F88                     u2941:
  5840  000F88  EFD6  F007         	goto	l898
  5841  000F8C                     u2940:
  5842  000F8C  0E01               	movlw	1
  5843  000F8E  2601               	addwf	___fladd@b^0,f,c
  5844  000F90  0E00               	movlw	0
  5845  000F92  2202               	addwfc	(___fladd@b+1)^0,f,c
  5846  000F94  2203               	addwfc	(___fladd@b+2)^0,f,c
  5847  000F96  2204               	addwfc	(___fladd@b+3)^0,f,c
  5848  000F98  EFD6  F007         	goto	l898
  5849  000F9C                     l2664:
  5850  000F9C  5005               	movf	___fladd@a^0,w,c
  5851  000F9E  5E01               	subwf	___fladd@b^0,f,c
  5852  000FA0  5006               	movf	(___fladd@a+1)^0,w,c
  5853  000FA2  5A02               	subwfb	(___fladd@b+1)^0,f,c
  5854  000FA4  5007               	movf	(___fladd@a+2)^0,w,c
  5855  000FA6  5A03               	subwfb	(___fladd@b+2)^0,f,c
  5856  000FA8  5008               	movf	(___fladd@a+3)^0,w,c
  5857  000FAA  5A04               	subwfb	(___fladd@b+3)^0,f,c
  5858  000FAC                     l898:
  5859  000FAC  5001               	movf	___fladd@b^0,w,c
  5860  000FAE  1002               	iorwf	(___fladd@b+1)^0,w,c
  5861  000FB0  1003               	iorwf	(___fladd@b+2)^0,w,c
  5862  000FB2  1004               	iorwf	(___fladd@b+3)^0,w,c
  5863  000FB4  A4D8               	btfss	status,2,c
  5864  000FB6  EFDF  F007         	goto	u2951
  5865  000FBA  EFE1  F007         	goto	u2950
  5866  000FBE                     u2951:
  5867  000FBE  EF16  F008         	goto	l2688
  5868  000FC2                     u2950:
  5869  000FC2  5010               	movf	___fladd@grs^0,w,c
  5870  000FC4  A4D8               	btfss	status,2,c
  5871  000FC6  EFE7  F007         	goto	u2961
  5872  000FCA  EFE9  F007         	goto	u2960
  5873  000FCE                     u2961:
  5874  000FCE  EF16  F008         	goto	l2688
  5875  000FD2                     u2960:
  5876  000FD2  0E00               	movlw	0
  5877  000FD4  6E01               	movwf	?___fladd^0,c
  5878  000FD6  0E00               	movlw	0
  5879  000FD8  6E02               	movwf	(?___fladd+1)^0,c
  5880  000FDA  0E00               	movlw	0
  5881  000FDC  6E03               	movwf	(?___fladd+2)^0,c
  5882  000FDE  0E00               	movlw	0
  5883  000FE0  6E04               	movwf	(?___fladd+3)^0,c
  5884  000FE2  EFB1  F008         	goto	l890
  5885  000FE6                     l2672:
  5886  000FE6  90D8               	bcf	status,0,c
  5887  000FE8  3601               	rlcf	___fladd@b^0,f,c
  5888  000FEA  3602               	rlcf	(___fladd@b+1)^0,f,c
  5889  000FEC  3603               	rlcf	(___fladd@b+2)^0,f,c
  5890  000FEE  3604               	rlcf	(___fladd@b+3)^0,f,c
  5891  000FF0  AE10               	btfss	___fladd@grs^0,7,c
  5892  000FF2  EFFD  F007         	goto	u2971
  5893  000FF6  EFFF  F007         	goto	u2970
  5894  000FFA                     u2971:
  5895  000FFA  EF00  F008         	goto	l2678
  5896  000FFE                     u2970:
  5897  000FFE  8001               	bsf	___fladd@b^0,0,c
  5898  001000                     l2678:
  5899  001000  A010               	btfss	___fladd@grs^0,0,c
  5900  001002  EF05  F008         	goto	u2981
  5901  001006  EF07  F008         	goto	u2980
  5902  00100A                     u2981:
  5903  00100A  EF0B  F008         	goto	l2682
  5904  00100E                     u2980:
  5905  00100E  80D8               	bsf	status,0,c
  5906  001010  3610               	rlcf	___fladd@grs^0,f,c
  5907  001012  EF0D  F008         	goto	l2684
  5908  001016                     l2682:
  5909  001016  90D8               	bcf	status,0,c
  5910  001018  3610               	rlcf	___fladd@grs^0,f,c
  5911  00101A                     l2684:
  5912  00101A  500F               	movf	___fladd@bexp^0,w,c
  5913  00101C  B4D8               	btfsc	status,2,c
  5914  00101E  EF13  F008         	goto	u2991
  5915  001022  EF15  F008         	goto	u2990
  5916  001026                     u2991:
  5917  001026  EF16  F008         	goto	l2688
  5918  00102A                     u2990:
  5919  00102A  060F               	decf	___fladd@bexp^0,f,c
  5920  00102C                     l2688:
  5921  00102C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5922  00102E  EF1B  F008         	goto	u3001
  5923  001032  EF1D  F008         	goto	u3000
  5924  001036                     u3001:
  5925  001036  EFF3  F007         	goto	l2672
  5926  00103A                     u3000:
  5927  00103A                     l2690:
  5928  00103A  0E00               	movlw	0
  5929  00103C  6E0E               	movwf	___fladd@aexp^0,c
  5930  00103E  AE10               	btfss	___fladd@grs^0,7,c
  5931  001040  EF24  F008         	goto	u3011
  5932  001044  EF26  F008         	goto	u3010
  5933  001048                     u3011:
  5934  001048  EF3E  F008         	goto	l907
  5935  00104C                     u3010:
  5936  00104C  C010  F009         	movff	___fladd@grs,??___fladd
  5937  001050  0E7F               	movlw	127
  5938  001052  1609               	andwf	??___fladd^0,f,c
  5939  001054  B4D8               	btfsc	status,2,c
  5940  001056  EF2F  F008         	goto	u3021
  5941  00105A  EF31  F008         	goto	u3020
  5942  00105E                     u3021:
  5943  00105E  EF35  F008         	goto	l908
  5944  001062                     u3020:
  5945  001062                     l2696:
  5946  001062  0E01               	movlw	1
  5947  001064  6E0E               	movwf	___fladd@aexp^0,c
  5948  001066  EF3E  F008         	goto	l907
  5949  00106A                     l908:
  5950  00106A  A001               	btfss	___fladd@b^0,0,c
  5951  00106C  EF3A  F008         	goto	u3031
  5952  001070  EF3C  F008         	goto	u3030
  5953  001074                     u3031:
  5954  001074  EF3E  F008         	goto	l907
  5955  001078                     u3030:
  5956  001078  EF31  F008         	goto	l2696
  5957  00107C                     l907:
  5958  00107C  500E               	movf	___fladd@aexp^0,w,c
  5959  00107E  B4D8               	btfsc	status,2,c
  5960  001080  EF44  F008         	goto	u3041
  5961  001084  EF46  F008         	goto	u3040
  5962  001088                     u3041:
  5963  001088  EF71  F008         	goto	l2708
  5964  00108C                     u3040:
  5965  00108C  0E01               	movlw	1
  5966  00108E  2601               	addwf	___fladd@b^0,f,c
  5967  001090  0E00               	movlw	0
  5968  001092  2202               	addwfc	(___fladd@b+1)^0,f,c
  5969  001094  2203               	addwfc	(___fladd@b+2)^0,f,c
  5970  001096  2204               	addwfc	(___fladd@b+3)^0,f,c
  5971  001098  A004               	btfss	(___fladd@b+3)^0,0,c
  5972  00109A  EF51  F008         	goto	u3051
  5973  00109E  EF53  F008         	goto	u3050
  5974  0010A2                     u3051:
  5975  0010A2  EF71  F008         	goto	l2708
  5976  0010A6                     u3050:
  5977  0010A6  C001  F009         	movff	___fladd@b,??___fladd
  5978  0010AA  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  5979  0010AE  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  5980  0010B2  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  5981  0010B6  340C               	rlcf	(??___fladd+3)^0,w,c
  5982  0010B8  320C               	rrcf	(??___fladd+3)^0,f,c
  5983  0010BA  320B               	rrcf	(??___fladd+2)^0,f,c
  5984  0010BC  320A               	rrcf	(??___fladd+1)^0,f,c
  5985  0010BE  3209               	rrcf	??___fladd^0,f,c
  5986  0010C0  C009  F001         	movff	??___fladd,___fladd@b
  5987  0010C4  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  5988  0010C8  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  5989  0010CC  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  5990  0010D0  280F               	incf	___fladd@bexp^0,w,c
  5991  0010D2  B4D8               	btfsc	status,2,c
  5992  0010D4  EF6E  F008         	goto	u3061
  5993  0010D8  EF70  F008         	goto	u3060
  5994  0010DC                     u3061:
  5995  0010DC  EF71  F008         	goto	l2708
  5996  0010E0                     u3060:
  5997  0010E0  2A0F               	incf	___fladd@bexp^0,f,c
  5998  0010E2                     l2708:
  5999  0010E2  280F               	incf	___fladd@bexp^0,w,c
  6000  0010E4  B4D8               	btfsc	status,2,c
  6001  0010E6  EF77  F008         	goto	u3071
  6002  0010EA  EF79  F008         	goto	u3070
  6003  0010EE                     u3071:
  6004  0010EE  EF81  F008         	goto	l2712
  6005  0010F2                     u3070:
  6006  0010F2  500F               	movf	___fladd@bexp^0,w,c
  6007  0010F4  A4D8               	btfss	status,2,c
  6008  0010F6  EF7F  F008         	goto	u3081
  6009  0010FA  EF81  F008         	goto	u3080
  6010  0010FE                     u3081:
  6011  0010FE  EF93  F008         	goto	l2716
  6012  001102                     u3080:
  6013  001102                     l2712:
  6014  001102  0E00               	movlw	0
  6015  001104  6E01               	movwf	___fladd@b^0,c
  6016  001106  0E00               	movlw	0
  6017  001108  6E02               	movwf	(___fladd@b+1)^0,c
  6018  00110A  0E00               	movlw	0
  6019  00110C  6E03               	movwf	(___fladd@b+2)^0,c
  6020  00110E  0E00               	movlw	0
  6021  001110  6E04               	movwf	(___fladd@b+3)^0,c
  6022  001112  500F               	movf	___fladd@bexp^0,w,c
  6023  001114  A4D8               	btfss	status,2,c
  6024  001116  EF8F  F008         	goto	u3091
  6025  00111A  EF91  F008         	goto	u3090
  6026  00111E                     u3091:
  6027  00111E  EF93  F008         	goto	l2716
  6028  001122                     u3090:
  6029  001122  0E00               	movlw	0
  6030  001124  6E0D               	movwf	___fladd@signs^0,c
  6031  001126                     l2716:
  6032  001126  A00F               	btfss	___fladd@bexp^0,0,c
  6033  001128  EF98  F008         	goto	u3101
  6034  00112C  EF9A  F008         	goto	u3100
  6035  001130                     u3101:
  6036  001130  EF9D  F008         	goto	l2720
  6037  001134                     u3100:
  6038  001134  8E03               	bsf	(___fladd@b+2)^0,7,c
  6039  001136  EF9E  F008         	goto	l2722
  6040  00113A                     l2720:
  6041  00113A  9E03               	bcf	(___fladd@b+2)^0,7,c
  6042  00113C                     l2722:
  6043  00113C  90D8               	bcf	status,0,c
  6044  00113E  300F               	rrcf	___fladd@bexp^0,w,c
  6045  001140  6E04               	movwf	(___fladd@b+3)^0,c
  6046  001142  AE0D               	btfss	___fladd@signs^0,7,c
  6047  001144  EFA6  F008         	goto	u3111
  6048  001148  EFA8  F008         	goto	u3110
  6049  00114C                     u3111:
  6050  00114C  EFA9  F008         	goto	l2728
  6051  001150                     u3110:
  6052  001150  8E04               	bsf	(___fladd@b+3)^0,7,c
  6053  001152                     l2728:
  6054  001152  C001  F001         	movff	___fladd@b,?___fladd
  6055  001156  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6056  00115A  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6057  00115E  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6058  001162                     l890:
  6059  001162  0012               	return		;funcret
  6060  001164                     __end_of___fladd:
  6061                           	callstack 0
  6062                           
  6063                           	psect	rparam
  6064  0000                     
  6065                           	psect	idloc
  6066                           
  6067                           ;Config register IDLOC0 @ 0x200000
  6068                           ;	unspecified, using default values
  6069  200000                     	org	2097152
  6070  200000  FF                 	db	255
  6071                           
  6072                           ;Config register IDLOC1 @ 0x200001
  6073                           ;	unspecified, using default values
  6074  200001                     	org	2097153
  6075  200001  FF                 	db	255
  6076                           
  6077                           ;Config register IDLOC2 @ 0x200002
  6078                           ;	unspecified, using default values
  6079  200002                     	org	2097154
  6080  200002  FF                 	db	255
  6081                           
  6082                           ;Config register IDLOC3 @ 0x200003
  6083                           ;	unspecified, using default values
  6084  200003                     	org	2097155
  6085  200003  FF                 	db	255
  6086                           
  6087                           ;Config register IDLOC4 @ 0x200004
  6088                           ;	unspecified, using default values
  6089  200004                     	org	2097156
  6090  200004  FF                 	db	255
  6091                           
  6092                           ;Config register IDLOC5 @ 0x200005
  6093                           ;	unspecified, using default values
  6094  200005                     	org	2097157
  6095  200005  FF                 	db	255
  6096                           
  6097                           ;Config register IDLOC6 @ 0x200006
  6098                           ;	unspecified, using default values
  6099  200006                     	org	2097158
  6100  200006  FF                 	db	255
  6101                           
  6102                           ;Config register IDLOC7 @ 0x200007
  6103                           ;	unspecified, using default values
  6104  200007                     	org	2097159
  6105  200007  FF                 	db	255
  6106                           
  6107                           	psect	config
  6108                           
  6109                           ; Padding undefined space
  6110  300000                     	org	3145728
  6111  300000  FF                 	db	255
  6112                           
  6113                           ;Config register CONFIG1H @ 0x300001
  6114                           ;	Oscillator Selection bits
  6115                           ;	OSC = HS, HS oscillator
  6116                           ;	Fail-Safe Clock Monitor Enable bit
  6117                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6118                           ;	Internal/External Oscillator Switchover bit
  6119                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6120  300001                     	org	3145729
  6121  300001  02                 	db	2
  6122                           
  6123                           ;Config register CONFIG2L @ 0x300002
  6124                           ;	Power-up Timer Enable bit
  6125                           ;	PWRT = OFF, PWRT disabled
  6126                           ;	Brown-out Reset Enable bits
  6127                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  6128                           ;	Brown Out Reset Voltage bits
  6129                           ;	BORV = 0x2E, user specified literal
  6130  300002                     	org	3145730
  6131  300002  71                 	db	369
  6132                           
  6133                           ;Config register CONFIG2H @ 0x300003
  6134                           ;	Watchdog Timer Enable bit
  6135                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  6136                           ;	Watchdog Timer Postscale Select bits
  6137                           ;	WDTPS = 1, 1:1
  6138  300003                     	org	3145731
  6139  300003  00                 	db	0
  6140                           
  6141                           ; Padding undefined space
  6142  300004                     	org	3145732
  6143  300004  FF                 	db	255
  6144                           
  6145                           ;Config register CONFIG3H @ 0x300005
  6146                           ;	CCP2 MUX bit
  6147                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6148                           ;	PORTB A/D Enable bit
  6149                           ;	PBADEN = ON, PORTB<4:0> pins are configured as analog input channels on Reset
  6150                           ;	Low-Power Timer1 Oscillator Enable bit
  6151                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6152                           ;	MCLR Pin Enable bit
  6153                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  6154  300005                     	org	3145733
  6155  300005  83                 	db	131
  6156                           
  6157                           ;Config register CONFIG4L @ 0x300006
  6158                           ;	Stack Full/Underflow Reset Enable bit
  6159                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
  6160                           ;	Single-Supply ICSP Enable bit
  6161                           ;	LVP = OFF, Single-Supply ICSP disabled
  6162                           ;	Extended Instruction Set Enable bit
  6163                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6164                           ;	Background Debugger Enable bit
  6165                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6166  300006                     	org	3145734
  6167  300006  80                 	db	128
  6168                           
  6169                           ; Padding undefined space
  6170  300007                     	org	3145735
  6171  300007  FF                 	db	255
  6172                           
  6173                           ;Config register CONFIG5L @ 0x300008
  6174                           ;	Code Protection bit
  6175                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
  6176                           ;	Code Protection bit
  6177                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
  6178                           ;	Code Protection bit
  6179                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
  6180                           ;	Code Protection bit
  6181                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
  6182  300008                     	org	3145736
  6183  300008  0F                 	db	15
  6184                           
  6185                           ;Config register CONFIG5H @ 0x300009
  6186                           ;	Boot Block Code Protection bit
  6187                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6188                           ;	Data EEPROM Code Protection bit
  6189                           ;	CPD = OFF, Data EEPROM not code-protected
  6190  300009                     	org	3145737
  6191  300009  C0                 	db	192
  6192                           
  6193                           ;Config register CONFIG6L @ 0x30000A
  6194                           ;	Write Protection bit
  6195                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
  6196                           ;	Write Protection bit
  6197                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
  6198                           ;	Write Protection bit
  6199                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
  6200                           ;	Write Protection bit
  6201                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
  6202  30000A                     	org	3145738
  6203  30000A  0F                 	db	15
  6204                           
  6205                           ;Config register CONFIG6H @ 0x30000B
  6206                           ;	Configuration Register Write Protection bit
  6207                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6208                           ;	Boot Block Write Protection bit
  6209                           ;	WRTB = OFF, Boot block (000000-0007FFh) not write-protected
  6210                           ;	Data EEPROM Write Protection bit
  6211                           ;	WRTD = OFF, Data EEPROM not write-protected
  6212  30000B                     	org	3145739
  6213  30000B  E0                 	db	224
  6214                           
  6215                           ;Config register CONFIG7L @ 0x30000C
  6216                           ;	Table Read Protection bit
  6217                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
  6218                           ;	Table Read Protection bit
  6219                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
  6220                           ;	Table Read Protection bit
  6221                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
  6222                           ;	Table Read Protection bit
  6223                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6224  30000C                     	org	3145740
  6225  30000C  0F                 	db	15
  6226                           
  6227                           ;Config register CONFIG7H @ 0x30000D
  6228                           ;	Boot Block Table Read Protection bit
  6229                           ;	EBTRB = OFF, Boot block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6230  30000D                     	org	3145741
  6231  30000D  40                 	db	64
  6232                           tosu	equ	0xFFF
  6233                           tosh	equ	0xFFE
  6234                           tosl	equ	0xFFD
  6235                           stkptr	equ	0xFFC
  6236                           pclatu	equ	0xFFB
  6237                           pclath	equ	0xFFA
  6238                           pcl	equ	0xFF9
  6239                           tblptru	equ	0xFF8
  6240                           tblptrh	equ	0xFF7
  6241                           tblptrl	equ	0xFF6
  6242                           tablat	equ	0xFF5
  6243                           prodh	equ	0xFF4
  6244                           prodl	equ	0xFF3
  6245                           indf0	equ	0xFEF
  6246                           postinc0	equ	0xFEE
  6247                           postdec0	equ	0xFED
  6248                           preinc0	equ	0xFEC
  6249                           plusw0	equ	0xFEB
  6250                           fsr0h	equ	0xFEA
  6251                           fsr0l	equ	0xFE9
  6252                           wreg	equ	0xFE8
  6253                           indf1	equ	0xFE7
  6254                           postinc1	equ	0xFE6
  6255                           postdec1	equ	0xFE5
  6256                           preinc1	equ	0xFE4
  6257                           plusw1	equ	0xFE3
  6258                           fsr1h	equ	0xFE2
  6259                           fsr1l	equ	0xFE1
  6260                           bsr	equ	0xFE0
  6261                           indf2	equ	0xFDF
  6262                           postinc2	equ	0xFDE
  6263                           postdec2	equ	0xFDD
  6264                           preinc2	equ	0xFDC
  6265                           plusw2	equ	0xFDB
  6266                           fsr2h	equ	0xFDA
  6267                           fsr2l	equ	0xFD9
  6268                           status	equ	0xFD8

Data Sizes:
    Strings     60
    Constant    26
    Data        0
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     42      54
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    lcdString@msg	PTR unsigned char  size(2) Largest target is 13
		 -> STR_5(CODE[13]), STR_4(CODE[10]), STR_3(CODE[12]), STR_2(CODE[12]), 
		 -> STR_1(CODE[13]), 


Critical Paths under _main in COMRAM

    _main->_lcdString
    _ssdUpdate->_soWrite
    _ssdInit->_pinMode
    _ssdDigit->___awmod
    _pwmSet->___lwdiv
    _pwmInit->_pwmFrequency
    _pwmFrequency->___aldiv
    _lcdString->_lcdChar
    _lcdPosition->_lcdCommand
    _lcdNumber->___awmod
    _lcdNumber->_lcdChar
    _lcdChar->_pushByte
    ___awmod->___awdiv
    _lcdInit->_lcdCommand
    _pushNibble->_soWrite
    _lcdCommand->_pushByte
    _pushByte->_soWrite
    _pulseEnablePin->_digitalWrite
    _kpInit->_pinMode
    _soInit->_pinMode
    _kpDebounce->_soWrite
    _soWrite->_digitalWrite
    _PulseEnClock->_digitalWrite
    _PulseClockData->_digitalWrite
    _adcInit->_pinMode

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  166250
                                             20 COMRAM    22    22      0
                            ___awdiv
                            ___awmod
                            ___fladd
                             ___flge
                            _adcInit
                              _delay
                         _kpDebounce
                             _kpInit
                             _kpRead
                            _lcdChar
                            _lcdInit
                          _lcdNumber
                        _lcdPosition
                          _lcdString
                            _pwmInit
                             _pwmSet
                           _ssdDigit
                            _ssdInit
                          _ssdUpdate
 ---------------------------------------------------------------------------------
 (1) _ssdUpdate                                            2     2      0   14081
                                              9 COMRAM     2     2      0
                       _digitalWrite
                            _soWrite
 ---------------------------------------------------------------------------------
 (1) _ssdInit                                              0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (1) _ssdDigit                                             2     1      1     480
                                             14 COMRAM     2     1      1
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwmSet                                               5     5      0     716
                                              7 COMRAM     5     5      0
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     314
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _pwmInit                                              0     0      0     550
                       _pwmFrequency
 ---------------------------------------------------------------------------------
 (2) _pwmFrequency                                         2     0      2     550
                                             14 COMRAM     2     0      2
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     452
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (1) _lcdString                                            6     4      2   18905
                                             14 COMRAM     6     4      2
                            _lcdChar
 ---------------------------------------------------------------------------------
 (1) _lcdPosition                                          2     1      1   19101
                                             14 COMRAM     2     1      1
                         _lcdCommand
 ---------------------------------------------------------------------------------
 (1) _lcdNumber                                            4     2      2   20717
                                             14 COMRAM     4     2      2
                            ___awdiv
                            ___awmod
                            _lcdChar
 ---------------------------------------------------------------------------------
 (2) _lcdChar                                              1     1      0   18435
                                             13 COMRAM     1     1      0
                         _delayMicro
                           _pushByte
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1056
                                              8 COMRAM     6     2      4
                            ___awdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4    1060
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcdInit                                              0     0      0   42412
                         _delayMicro
                          _delayMili
                         _lcdCommand
                            _pinMode
                         _pushNibble
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _pushNibble                                           3     1      2   18141
                                              9 COMRAM     3     1      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _lcdCommand                                           1     1      0   18405
                                             13 COMRAM     1     1      0
                          _delayMili
                           _pushByte
 ---------------------------------------------------------------------------------
 (3) _pushByte                                             4     2      2   18033
                                              9 COMRAM     4     2      2
                       _digitalWrite
                     _pulseEnablePin
                            _soWrite
 ---------------------------------------------------------------------------------
 (4) _pulseEnablePin                                       0     0      0    3712
                         _delayMicro
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (5) _delayMicro                                           4     2      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _delayMili                                            5     3      2     350
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _kpRead                                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _kpInit                                               0     0      0    5136
                            _pinMode
                             _soInit
 ---------------------------------------------------------------------------------
 (2) _soInit                                               0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (1) _kpDebounce                                           5     5      0   11233
                                              9 COMRAM     5     5      0
                        _digitalRead
                            _soWrite
 ---------------------------------------------------------------------------------
 (2) _soWrite                                              3     1      2   10749
                                              6 COMRAM     3     1      2
                     _PulseClockData
                       _PulseEnClock
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseEnClock                                         0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _PulseClockData                                       0     0      0    3332
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (3) _digitalWrite                                         6     2      4    3332
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          5     3      2     372
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _delay                                                4     2      2     267
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0    2568
                            _pinMode
 ---------------------------------------------------------------------------------
 (3) _pinMode                                              6     2      4    2568
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) ___flge                                              12     4      8     486
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             16     8      8    2388
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod
     ___awdiv (ARG)
   ___fladd
   ___flge
   _adcInit
     _pinMode
   _delay
   _kpDebounce
     _digitalRead
     _soWrite
       _PulseClockData
         _digitalWrite
       _PulseEnClock
         _digitalWrite
       _digitalWrite
   _kpInit
     _pinMode
     _soInit
       _pinMode
   _kpRead
   _lcdChar
     _delayMicro
     _pushByte
       _digitalWrite
       _pulseEnablePin
         _delayMicro
         _digitalWrite
       _soWrite
   _lcdInit
     _delayMicro
     _delayMili
     _lcdCommand
       _delayMili
       _pushByte
     _pinMode
     _pushNibble
       _digitalWrite
       _pulseEnablePin
       _soWrite
     _soInit
   _lcdNumber
     ___awdiv
     ___awmod
     _lcdChar
   _lcdPosition
     _lcdCommand
   _lcdString
     _lcdChar
   _pwmInit
     _pwmFrequency
       ___aldiv
   _pwmSet
     ___lwdiv
     ___wmul
   _ssdDigit
     ___awdiv (ARG)
     ___awmod (ARG)
   _ssdInit
     _pinMode
     _soInit
   _ssdUpdate
     _digitalWrite
     _soWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2A      36       1       42.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      36      15        0.0%
DATA                 0      0      36       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Dec 15 12:48:13 2021

         _pulseEnablePin 21EE             lcdString@msg 000F                       l38 0772  
                     l86 21EC             ___awdiv@sign 0006                       _v0 0034  
                     _v1 0033                       _v2 0032                       _v3 0031  
    ___wmul@multiplicand 0003                      l211 22D6                      l140 18D0  
                    l300 21A4                      l206 19F2                      l222 2444  
                    l135 13B0                      l231 222E                      l144 18D0  
                    l208 1A0A                      l240 2408                      l234 23CC  
                    l139 18D4                      l228 2306                      l260 1F2A  
                    l340 2100                      l237 2052                      l245 22A4  
                    l350 1FF8                      l254 2156                      l263 1D92  
                    l327 20AA                      l248 23EA                      l432 1B16  
                    l169 15FE                      l353 2380                      l337 176A  
                    l186 2442                      l282 2422                      l292 2330  
                    l276 1F96                      l623 1C1A                      l295 235A  
                    l279 23A6                      l289 226C                      l618 1BD4  
                    l584 1CDE                      l907 107C                      l851 1EB6  
                    l908 106A                      l844 1EAE                      l597 1E42  
                    l881 0E92                      l890 1162                      l882 0E80  
                    l883 0E46                      l898 0FAC                      _PR2 000FCB  
           ___awmod@sign 000E                      wreg 000FE8                     l2100 13B2  
                   l2110 143E                     l2102 13CE                     l2120 14C8  
                   l2112 1450                     l2104 13E0                     l2040 11D4  
                   l2032 1164                     l2130 1564                     l2122 14EC  
                   l2114 1474                     l2106 1400                     l2050 1268  
                   l2042 11F0                     l2034 1180                     l2132 158A  
                   l2124 1512                     l2116 149A                     l2108 1422  
                   l2220 1840                     l2212 17F8                     l2204 17B0  
                   l2060 12FA                     l2052 1282                     l2044 120A  
                   l2036 1192                     l2140 22D8                     l2300 1DB2  
                   l3012 0C7A                     l2134 15A6                     l2126 152E  
                   l2118 14B6                     l2230 18A4                     l2222 185C  
                   l2214 1814                     l2206 17CC                     l2070 1392  
                   l2062 131A                     l2054 12A2                     l2046 122A  
                   l2038 11B2                     l2142 22E4                     l2310 1DEA  
                   l2302 1DC0                     l2150 1A10                     l3014 1744  
                   l2136 15B8                     l2128 1540                     l2064 133C  
                   l2056 12C4                     l2048 124C                     l2072 2308  
                   l2144 22E8                     l2312 1DF8                     l2320 1E22  
                   l2304 1DC8                     l2400 212A                     l2160 1A50  
                   l2152 1A1E                     l2240 2382                     l2138 15DC  
                   l2066 1358                     l2058 12E0                     l2074 2332  
                   l2090 2190                     l2410 1906                     l2234 2230  
                   l2146 1FFC                     l2250 1C20                     l2322 1E32  
                   l2314 1E0E                     l2306 1DDA                     l2402 212E  
                   l2170 1A8E                     l2162 1A54                     l2154 1A2E  
                   l2330 1E4C                     l2242 235C                     l2228 1888  
                   l2068 1372                     l2092 21A0                     l2084 2170  
                   l2076 2158                     l2412 1952                     l2404 18D6  
                   l2236 23AA                     l2260 1C50                     l2252 1C2E  
                   l2324 1E3A                     l2316 1E16                     l2308 1DE2  
                   l2180 1AD6                     l2172 1A9C                     l2164 1A64  
                   l2156 1A32                     l2148 1A0C                     l2340 1E82  
                   l2332 1E5E                     l2244 2378                     l2500 1F70  
                   l2086 2188                     l2078 216C                     l2430 1A02  
                   l2414 1978                     l2422 19C8                     l2406 18E6  
                   l2094 21EE                     l2238 23EE                     l2350 1CE0  
                   l2270 1C7E                     l2262 1C54                     l2254 1C36  
                   l2318 1E1C                     l2182 1AE0                     l2174 1AA6  
                   l2166 1A7A                     l2158 1A40                     l2342 1E98  
                   l2334 1E66                     l2502 1F88                     l2600 0DD4  
                   l2512 1FB4                     l2504 1F98                     l2088 218E  
                   l2424 19E0                     l2416 1996                     l2432 243A  
                   l2096 2202                     l2360 1D80                     l2352 1D40  
                   l2280 1CB2                     l2272 1C8C                     l2264 1C5C  
                   l2256 1C3A                     l2248 1C1C                     l2192 23D0  
                   l2176 1AC4                     l2168 1A82                     l2184 1AE6  
                   l2344 1EA0                     l2336 1E6E                     l2328 1E44  
                   l2440 20AC                     l2610 0DE8                     l2602 0DD8  
                   l2530 0CA4                     l2370 21E4                     l2522 1FD2  
                   l2514 1FB8                     l2506 1F9C                     l2426 19E6  
                   l2418 19C0                     l2098 220E                     l2362 1D86  
                   l2354 1D4C                     l2282 1CB8                     l2274 1C92  
                   l2266 1C6E                     l2258 1C48                     l2194 23DE  
                   l2434 1EB8                     l2186 1AF6                     l2178 1AD4  
                   l2346 1EA2                     l2338 1E7C                     l2450 207E  
                   l2442 2056                     l2700 108C                     l2620 0E60  
                   l2612 0E12                     l2604 0DDC                     l2540 0CE0  
                   l2532 0CB0                     l2372 21E8                     l2508 1FA0  
                   l2196 176C                     l2428 19EA                     l2364 1D8C  
                   l2356 1D66                     l2276 1CA8                     l2268 1C76  
                   l2284 1CBE                     l2292 1D94                     l2436 1EC4  
                   l2188 1B06                     l2380 240C                     l2348 1EA8  
                   l2452 2090                     l2444 2066                     l2460 1660  
                   l2710 10F2                     l2702 1098                     l2630 0EA0  
                   l2622 0E64                     l2614 0E2E                     l2606 0DE0  
                   l2550 0D10                     l2542 0CF0                     l2534 0CBE  
                   l2366 21A6                     l2518 1FCC                     l2526 1FD8  
                   l2198 1788                     l2374 22A6                     l2358 1D74  
                   l2286 1CCE                     l2278 1CB0                     l2294 1D98  
                   l2438 1F10                     l2390 2280                     l2382 2410  
                   l2454 2094                     l2446 206A                     l2470 16C0  
                   l2462 1678                     l2720 113A                     l2712 1102  
                   l2704 10A6                     l2640 0EE2                     l2632 0EB0  
                   l2624 0E72                     l2616 0E3E                     l2608 0DE4  
                   l2560 0D3A                     l2552 0D22                     l2544 0CF2  
                   l2536 0CC0                     l2368 21E2                     l2528 1FDE  
                   l2376 22D2                     l2288 1CD6                     l2296 1DA6  
                   l2392 228A                     l2384 2412                     l2456 20A6  
                   l2448 207A                     l2480 1714                     l2472 16C8  
                   l2464 168C                     l2800 073E                     l2722 113C  
                   l2714 1122                     l2706 10E0                     l2650 0F10  
                   l2642 0EF0                     l2626 0E74                     l2618 0E54  
                   l2562 0D4A                     l2570 0D74                     l2554 0D24  
                   l2538 0CD0                     l2546 0CFA                     l2298 1DAE  
                   l2394 229A                     l2386 2416                     l2378 240A  
                   l2482 1728                     l2474 16E0                     l2466 1694  
                   l2458 1600                     l2810 0776                     l2802 0740  
                   l2724 1142                     l2716 1126                     l2708 10E2  
                   l2660 0F7C                     l2652 0F1A                     l2644 0EFC  
                   l2636 0EC4                     l2628 0E7E                     l2580 0DAC  
                   l2572 0D84                     l2564 0D5A                     l2556 0D2A  
                   l2548 0D0A                     l2740 1B94                     l2732 1B18  
                   l2388 2270                     l2396 2102                     l2476 16F4  
                   l2468 16AC                     l2900 0A76                     l2820 07A6  
                   l2812 0780                     l2804 074E                     l2726 1150  
                   l2718 1134                     l2662 0F8C                     l2646 0F00  
                   l2638 0ED4                     l2654 0F20                     l2590 0DC0  
                   l2582 0DB0                     l2574 0D96                     l2566 0D6A  
                   l2558 0D38                     l2750 1C18                     l2742 1BA2  
                   l2734 1B46                     l2398 210E                     l2494 1F2E  
                   l2478 16FC                     l2910 0A98                     l2902 0A80  
                   l2830 07E6                     l2822 07AA                     l2814 078C  
                   l2806 0752                     l2728 1152                     l2680 100E  
                   l2672 0FE6                     l2656 0F46                     l2664 0F9C  
                   l2648 0F0E                     l2592 0DC4                     l2584 0DB4  
                   l2576 0DA4                     l2568 0D6C                     l2744 1BB4  
                   l2736 1B56                     l2496 1F4C                     l2488 1730  
                   l2920 0AC0                     l2912 0A9E                     l2904 0A86  
                   l2840 081E                     l2832 07EE                     l2824 07B2  
                   l2816 0796                     l2808 0766                     l2760 0678  
                   l2682 1016                     l2674 0FF0                     l2666 0FC2  
                   l2658 0F7A                     l2690 103A                     l2594 0DC8  
                   l2586 0DB8                     l2578 0DA8                     l2746 1BC2  
                   l2738 1B84                     l2498 1F68                     l2930 0B06  
                   l2922 0ACE                     l2914 0AA2                     l2906 0A8C  
                   l2850 0846                     l2842 082A                     l2834 07FC  
                   l2826 07C4                     l2818 07A2                     l2770 06A4  
                   l2762 067C                     l2754 0658                     l2692 103E  
                   l2684 101A                     l2676 0FFE                     l2668 0FD2  
                   l2596 0DCC                     l2588 0DBC                     l2748 1C12  
                   l2940 0B3A                     l2932 0B08                     l2924 0AE2  
                   l2916 0AA6                     l2908 0A92                     l2860 0884  
                   l2852 0858                     l2844 0836                     l2836 0800  
                   l2828 07D2                     l2780 06BE                     l2772 06AA  
                   l2764 0684                     l2756 0670                     l2694 104C  
                   l2686 102A                     l2678 1000                     l2598 0DD0  
                   l2950 0B88                     l2942 0B3E                     l2934 0B16  
                   l2926 0AE4                     l2918 0AAE                     l2870 08BE  
                   l2862 0892                     l2854 0866                     l2846 083A  
                   l2838 0814                     l2790 06FA                     l2782 06C6  
                   l2774 06B0                     l2766 068E                     l2758 0674  
                   l2696 1062                     l2688 102C                     l2960 0BB6  
                   l2952 0B92                     l2944 0B52                     l2936 0B2A  
                   l2928 0AF2                     l2880 0960                     l2864 089A  
                   l2856 086E                     l2872 08C6                     l2848 083E  
                   l2792 0708                     l2784 06D8                     l2776 06B6  
                   l2768 069A                     l2970 0BD2                     l2962 0BBE  
                   l2954 0B9E                     l2946 0B64                     l2938 0B2C  
                   l2890 09C8                     l2882 097E                     l2874 08CA  
                   l2866 08A8                     l2858 087C                     l2794 071A  
                   l2786 06E6                     l2778 06BA                     l2972 0BD6  
                   l2964 0BC6                     l2956 0BA4                     l2948 0B76  
                   l2980 0BEE                     l2892 0A2E                     l2884 0982  
                   l2876 08FC                     l2868 08B0                     l2796 071C  
                   l2788 06F8                     l2990 0C4C                     l2982 0C02  
                   l2974 0BDA                     l2966 0BCA                     l2958 0BB0  
                   l2894 0A4C                     l2886 0992                     l2878 092E  
                   l2798 072A                     l2992 0C52                     l2984 0C14  
                   l2976 0BDE                     l2968 0BCE                     l2896 0A60  
                   l2994 0C5E                     l2986 0C26                     l2978 0BE6  
                   l2898 0A6A                     l2988 0C38                     l2998 0C64  
                   STR_1 061B                     STR_2 0641                     STR_3 0635  
                   STR_4 064D                     STR_5 0628                     u2010 21A0  
                   u2011 219C                     u2100 14B6                     u2020 13CE  
                   u2004 13A4                     u2101 14B2                     u2021 13CA  
                   u2005 13A0                     u2110 14C8                     u2030 13E0  
                   u2111 14C4                     u2031 13DC                     u3000 103A  
                   u3001 1036                     u3010 104C                     u3011 1048  
                   u3100 1134                     u3020 1062                     u2204 15CE  
                   u2140 152E                     u2124 14DE                     u2060 143E  
                   u2044 13F2                     u2220 2306                     u3101 1130  
                   u3021 105E                     u2205 15CA                     u2141 152A  
                   u2125 14DA                     u2061 143A                     u2045 13EE  
                   u2221 2302                     u3110 1150                     u3030 1078  
                   u2214 15F2                     u2150 1540                     u2134 1502  
                   u2070 1450                     u2054 1412                     u2310 17CC  
                   u2230 1A1E                     u3111 114C                     u3031 1074  
                   u2215 15EE                     u2151 153C                     u2135 14FE  
                   u2071 144C                     u2055 140E                     u2311 17C8  
                   u2231 1A1A                     u3040 108C                     u3120 1B46  
                   u2304 179A                     u2400 1C48                     u2240 1A40  
                   u3200 0708                     u3041 1088                     u3121 1B42  
                   u2305 1796                     u2401 1C44                     u2241 1A3C  
                   u3201 0704                     u3050 10A6                     u3130 1B84  
                   u2330 1814                     u2410 1C6E                     u2250 1A7A  
                   u3210 071A                     u3051 10A2                     u3131 1B80  
                   u2331 1810                     u2411 1C6A                     u2251 1A76  
                   u3211 0716                     u3060 10E0                     u3140 1BA2  
                   u2180 15A6                     u2164 1556                     u2084 1466  
                   u2324 17E2                     u2420 1C8C                     u2500 1E32  
                   u2260 1A9C                     u3300 0814                     u3220 072A  
                   u3061 10DC                     u3141 1B9E                     u2181 15A2  
                   u2165 1552                     u2085 1462                     u2325 17DE  
                   u2421 1C88                     u2501 1E2E                     u2261 1A98  
                   u3301 0810                     u3221 0726                     u3070 10F2  
                   u3150 1BC2                     u2190 15B8                     u2174 157A  
                   u2094 148A                     u2350 185C                     u2430 1CA8  
                   u2270 1AC4                     u2510 1E5E                     u3310 0858  
                   u3230 073E                     u3071 10EE                     u3151 1BBE  
                   u2191 15B4                     u2175 1576                     u2095 1486  
                   u2351 1858                     u2431 1CA4                     u2271 1AC0  
                   u2511 1E5A                     u3311 0854                     u3231 073A  
                   u3080 1102                     u3160 1C12                     u2344 182A  
                   u2440 1CCE                     u2280 1AF6                     u2520 1E7C  
                   u3400 0AC0                     u3320 0866                     u3240 074E  
                   u3081 10FE                     u3161 1C0E                     u2345 1826  
                   u2441 1CCA                     u2281 1AF2                     u2521 1E78  
                   u3401 0ABC                     u3321 0862                     u3241 074A  
                   u3090 1122                     u2370 18A4                     u2290 1788  
                   u1810 1180                     u2610 1996                     u2450 1DA6  
                   u2530 1E98                     u3410 0ACE                     u3330 087C  
                   u3250 0766                     u3170 06D8                     u3091 111E  
                   u2371 18A0                     u2291 1784                     u1811 117C  
                   u2611 1992                     u2451 1DA2                     u2531 1E94  
                   u3411 0ACA                     u3331 0878                     u3251 0762  
                   u3171 06D4                     u2700 1FB0                     u2364 1872  
                   u1900 1282                     u1820 1192                     u2604 196A  
                   u2460 1DC0                     u2540 2280                     u3500 0B76  
                   u3420 0AE2                     u3340 0892                     u3260 07C4  
                   u3180 06E6                     u2701 1FAC                     u2365 186E  
                   u1901 127E                     u1821 118E                     u2605 1964  
                   u2461 1DBC                     u2541 227C                     u3501 0B72  
                   u3421 0ADE                     u3341 088E                     u3261 07C0  
                   u3181 06E2                     u2710 1FC8                     u2630 19E0  
                   u2390 1C2E                     u2470 1DDA                     u2550 229A  
                   u3510 0B88                     u3430 0AF2                     u3350 08A8  
                   u3270 07D2                     u3190 06F8                     u2711 1FC4  
                   u2631 19DC                     u2391 1C2A                     u2471 1DD6  
                   u2551 2296                     u3511 0B84                     u3431 0AEE  
                   u3351 08A4                     u3271 07CE                     u3191 06F4  
                   u2800 0D96                     u2720 1FF8                     u2384 18BA  
                   u2640 1A02                     u2624 19B2                     u2480 1DF8  
                   u2560 2156                     u3520 0C02                     u3440 0B06  
                   u3360 08BE                     u3280 07E6                     u2801 0D92  
                   u2721 1FF4                     u2385 18B6                     u2641 19FE  
                   u2625 19AC                     u2481 1DF4                     u2561 2152  
                   u3521 0BFE                     u3441 0B02                     u3361 08BA  
                   u3281 07E2                     u2810 0DA4                     u2730 0CBE  
                   u1930 12E0                     u1914 1294                     u1850 11F0  
                   u1834 11A4                     u2570 1902                     u2490 1E0E  
                   u2650 1F2A                     u3530 0C14                     u3450 0B16  
                   u3370 09C4                     u3290 07FC                     u2811 0DA0  
                   u2731 0CBA                     u1931 12DC                     u1915 1290  
                   u1851 11EC                     u1835 11A0                     u2571 18FE  
                   u2491 1E0A                     u2651 1F26                     u3531 0C10  
                   u3451 0B12                     u3371 09C0                     u3291 07F8  
                   u2900 0EE2                     u2820 0E12                     u2740 0CD0  
                   u1940 12FA                     u1924 12B4                     u1860 120A  
                   u1844 11C4                     u2660 2066                     u3540 0C26  
                   u3460 0B2A                     u3380 0A2E                     u2901 0EDE  
                   u2821 0E0E                     u2741 0CCC                     u1941 12F6  
                   u1925 12B0                     u1861 1206                     u1845 11C0  
                   u2661 2062                     u3541 0C22                     u3461 0B26  
                   u3381 0A2A                     u2910 0EF0                     u2830 0E2A  
                   u2750 0CE0                     u2590 1952                     u2670 207A  
                   u3550 0C38                     u3470 0B3A                     u3390 0A4C  
                   u2911 0EEC                     u2831 0E24                     u2751 0CDC  
                   u2591 194E                     u2671 2076                     u3551 0C34  
                   u3471 0B36                     u3391 0A48                     u2920 0F0E  
                   u2840 0E2C                     u2760 0D22                     u2584 1922  
                   u2680 2090                     u3480 0B52                     u2921 0F0A  
                   u2761 0D1E                     u2585 191C                     u2681 208C  
                   u3481 0B4E                     u2930 0F46                     u2850 0E54  
                   u2770 0D38                     u1970 1358                     u1954 130C  
                   u1890 1268                     u1874 121C                     u2690 20A6  
                   u3490 0B64                     u2931 0F42                     u2851 0E50  
                   u2771 0D34                     u1971 1354                     u1955 1308  
                   u1891 1264                     u1875 1218                     u2691 20A2  
                   u3491 0B60                     u2940 0F8C                     u2860 0E72  
                   u2780 0D4A                     u1980 1372                     u1964 132C  
                   u1884 123C                     u2941 0F88                     u2861 0E6E  
                   u2781 0D46                     u1981 136E                     u1965 1328  
                   u1885 1238                     u2950 0FC2                     u2870 0E92  
                   u2790 0D5A                     u2951 0FBE                     u2871 0E8E  
                   u2791 0D56                     u2960 0FD2                     u2880 0EA0  
                   u2961 0FCE                     u2881 0E9C                     u2970 0FFE  
                   u2890 0EB0                     u1994 1384                     u2971 0FFA  
                   u2891 0EAC                     u1995 1380                     u2980 100E  
                   u2981 100A                     u2990 102A                     u2991 1026  
                   _main 0658                     _keys 002F         ??_PulseClockData 0007  
                   prodh 000FF4                     prodl 000FF3                     start 0000  
        pushNibble@value 000C             ___param_bank 000000   __end_of_pulseEnablePin 2230  
         pwmSet@porcento 000A          __end_of___aldiv 1B18          __end_of___fladd 1164  
                  ?_main 0001          __end_of_adcInit 21EE          __end_of___awdiv 1CE0  
        __end_of___awmod 1E44          ___awdiv@divisor 0003                    _T2CON 000FCA  
        __end_of___lwdiv 1EB8          ___awdiv@counter 0005                    _PORTA 000F80  
                  _PORTB 000F81                    _PORTC 000F82                    _PORTD 000F83  
                  _PORTE 000F84          __end_of_charKey 061B                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96          __end_of_lcdChar 23EC          __end_of_lcdInit 1D94  
                  _delay 1F98          __end_of_pinMode 1600                    _valor 0601  
        __end_of_soWrite 21A6                    tablat 000FF5          __end_of_ssdInit 2102  
        __end_of_pwmInit 2424                    status 000FD8             pushNibble@rs 000A  
   __end_of_digitalWrite 13B2          __initialization 2424          ?_pulseEnablePin 0001  
           __end_of_main 0CA4                   ??_main 0015            __activetblptr 000002  
   __size_of_digitalRead 016A                   ?_delay 0001                   _ADCON0 000FC2  
                 _ADCON1 000FC1                   _ADCON2 000FC0                   _ADRESH 000FC4  
                 _ADRESL 000FC3                   _CCPR2L 000FBB         ___awdiv@dividend 0001  
   __size_of_lcdPosition 0038                   ___flge 1B18                ??___aldiv 0009  
              ??___fladd 0009                   ___wmul 235C                ??_adcInit 0007  
              ??___awdiv 0005                ??___awmod 000D                ??___lwdiv 0005  
                 _kpInit 22A6                   _kpRead 243A                   delay@j 0003  
                 delay@k 0004                   delay@x 0001                   clear_0 242A  
                 _soInit 2230         ___awdiv@quotient 0007          ___awmod@divisor 000B  
              ??_lcdChar 000E                   isa$std 000001                ??_lcdInit 000F  
                 _pwmSet 1F2C          ___awmod@counter 000D                   main@s1 001F  
                 main@s2 0020                   main@t1 0022                   main@s3 0021  
                 main@t2 0023                   main@t3 0024         __end_of_ssdDigit 20AC  
              ??_pinMode 0005             __mediumconst 0000                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8                ??_soWrite 0009  
              ??_ssdInit 0007                ??_pwmInit 0011         __end_of_pushByte 2054  
             ___flge@ff1 0001               ___flge@ff2 0005               __accesstop 0080  
__end_of__initialization 2430            ___rparam_used 000001            pushByte@value 000D  
            pinMode@type 0003           __pcstackCOMRAM 0001            __end_of_delay 1FFA  
          __end_of_valor 0611       __size_of_delayMili 0030       __size_of_lcdNumber 0074  
     __size_of_lcdString 0056                  ??_delay 0003    __size_of_digitalWrite 024E  
             _delayMicro 2444                  ?___flge 0001               _lcdCommand 23EC  
                ?___wmul 0001                  ?_kpInit 0001                  ?_kpRead 0001  
                _CCP2CON 000FBA                  ?_soInit 0001               _kpDebounce 18D6  
                ?_pwmSet 0001       __size_of_ssdUpdate 016C             _digitalWrite 1164  
      __end_of_delayMili 2308         ??_pulseEnablePin 0007                  __Hparam 0000  
      __end_of_lcdNumber 1F2C                  __Lparam 0000                ?_ssdDigit 000F  
      __end_of_lcdString 2158          kpDebounce@tempo 0036                  ___aldiv 1A0C  
        __size_of___flge 0104                  ___fladd 0CA4                  _adcInit 21A6  
                ___awdiv 1C1C                  ___awmod 1D94                ?_pushByte 000A  
        __size_of___wmul 0026                  ___lwdiv 1E44             __psmallconst 0600  
        __size_of_kpInit 0032          __size_of_kpRead 000A                  _charKey 0611  
            ssdDigit@val 0010              ssdDigit@pos 000F                  __pcinit 2424  
                _lcdChar 23CE                  __ramtop 0600          __size_of_soInit 003E  
                _lcdInit 1CE0                  __ptext0 0658                  __ptext1 1600  
                __ptext2 20AC                  __ptext3 2054                  __ptext4 1F2C  
                __ptext5 235C                  __ptext6 1E44                  __ptext7 240A  
                __ptext8 2382                  __ptext9 1A0C          __size_of_pwmSet 006C  
                _display 0035                  _pinMode 13B2         ___awmod@dividend 0009  
       ___aldiv@dividend 0001               delayMili@a 0001               delayMili@i 0004  
                _soWrite 2158                  _ssdInit 20AC                  _pwmInit 240A  
                main@old 0025     end_of_initialization 2430            ?_PulseEnClock 0001  
          __Lmediumconst 0000           digitalRead@pin 0001            ?_pwmFrequency 000F  
            ?_delayMicro 0001        __end_of_ssdUpdate 176C               ??_ssdDigit 0010  
       ___aldiv@quotient 000B              ?_lcdCommand 0001                  postinc0 000FEE  
             ??_pushByte 000C  __size_of_PulseClockData 002A            ??_digitalRead 0003  
            ?_kpDebounce 0001               lcdNumber@i 0011              ___fladd@grs 0010  
             _pushNibble 23A8               lcdString@i 0013            ??_lcdPosition 0010  
         ??_PulseEnClock 0007           ??_pwmFrequency 0011           __end_of___flge 1C1C  
         __end_of___wmul 2382           __end_of_kpInit 22D8           __end_of_kpRead 2444  
         __end_of_soInit 226E           __end_of_pwmSet 1F98      __size_of_delayMicro 0002  
    start_initialization 2424      __end_of_digitalRead 18D6      __size_of_lcdCommand 001E  
    __size_of_kpDebounce 0136      __end_of_lcdPosition 22A6        kpDebounce@oldRead 002B  
      kpDebounce@newRead 002D                 ??___flge 0009                 ??___wmul 0005  
               ??_kpInit 0007                 ??_kpRead 0003                 ??_soInit 0007  
               ??_pwmSet 0008                ___fladd@a 0005                ___fladd@b 0001  
            __pbssCOMRAM 002B              ?_pushNibble 000A               pinMode@pin 0001  
              _delayMili 22D8         ___lwdiv@dividend 0001                 ?___aldiv 0001  
               ?___fladd 0001                 ?_adcInit 0001                 ?___awdiv 0001  
               ?___awmod 0009        __size_of_ssdDigit 0058           _PulseClockData 2332  
              _lcdNumber 1EB8                 ?___lwdiv 0001     __end_of_PulseEnClock 2332  
              _lcdString 2102              _digitalRead 176C                 ?_lcdChar 0001  
      __size_of_pushByte 005A                 ?_lcdInit 0001     __end_of_pwmFrequency 23A8  
            __smallconst 0600                 ?_pinMode 0001                 ?_soWrite 0007  
               ?_ssdInit 0001                 ?_pwmInit 0001         ___lwdiv@quotient 0005  
         __size_of_delay 0062              _lcdPosition 226E         pwmFrequency@freq 000F  
        ___aldiv@divisor 0005          ___aldiv@counter 0009           ___wmul@product 0005  
           ??_delayMicro 0003               ?_delayMili 0001   __end_of_PulseClockData 235C  
    __size_of_pushNibble 0026             ??_lcdCommand 000E                _ssdUpdate 1600  
             ?_lcdNumber 000F               ?_lcdString 000F             ??_kpDebounce 000A  
      ___wmul@multiplier 0001          lcdCommand@value 000E                main@enter 0028  
              main@tecla 002A                main@tempo 001B       __end_of_delayMicro 2446  
     __end_of_lcdCommand 240A               pushByte@rs 000A             lcdChar@value 000E  
     __end_of_kpDebounce 1A0C                 __Hrparam 0000                 __Lrparam 0000  
        lcdPosition@line 0010          ?_PulseClockData 0001               ?_ssdUpdate 0001  
       __size_of___aldiv 010C         __size_of___fladd 04C0         __size_of_adcInit 0048  
       __size_of___awdiv 00C4         __size_of___awmod 00B0  __size_of_pulseEnablePin 0042  
         lcdNumber@value 000F         __size_of___lwdiv 0074         __size_of_lcdChar 001E  
       __size_of_lcdInit 00B4         __size_of_pinMode 024E          ___lwdiv@divisor 0003  
        ___lwdiv@counter 0007                 __ptext10 2102                 __ptext11 226E  
               __ptext20 21EE                 __ptext12 1EB8                 __ptext21 2444  
               __ptext13 23CE                 __ptext30 1164                 __ptext22 22D8  
               __ptext14 1D94                 __ptext31 176C                 __ptext23 243A  
               __ptext15 1C1C                 __ptext32 1F98                 __ptext24 22A6  
               __ptext16 1CE0                 __ptext33 21A6                 __ptext25 2230  
               __ptext17 23A8                 __ptext34 13B2                 __ptext26 18D6  
               __ptext18 23EC                 __ptext35 1B18                 __ptext27 2158  
               __ptext19 1FFA                 __ptext36 0CA4                 __ptext28 2308  
               __ptext29 2332         __size_of_soWrite 004E         __size_of_ssdInit 0056  
       __size_of_pwmInit 001A            __size_of_main 064C              ??_delayMili 0003  
  __size_of_PulseEnClock 002A                 _ssdDigit 2054              delayMicro@a 0001  
               isa$xinst 000000             soWrite@value 0007    __size_of_pwmFrequency 0026  
               _pushByte 1FFA              ??_lcdNumber 0011                pwmSet@val 000B  
            ??_lcdString 0011                 main@meta 0019                 main@moed 0026  
               main@muda 0017             ??_pushNibble 000C           lcdPosition@col 000F  
          ?_digitalWrite 0001             _PulseEnClock 2308        digitalWrite@value 0003  
           _pwmFrequency 2382                 soWrite@i 0009              ??_ssdUpdate 000A  
     __end_of_pushNibble 23CE             ?_digitalRead 0001              kpDebounce@i 000D  
         ??_digitalWrite 0005             ___aldiv@sign 000A            ___fladd@signs 000D  
           ?_lcdPosition 000F          digitalWrite@pin 0001             ___fladd@aexp 000E  
           ___fladd@bexp 000F  
